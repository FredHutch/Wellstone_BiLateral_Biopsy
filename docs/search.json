[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"objective book advocate computational transparency reproducibility FSHD bilateral cohort study, titled “Validation study association MRI FSHD gene signature reveals markers whole muscle systemic disease progression.” book includes detailed explanations decision-making processes grounded bioinformatics analysis, machine learning, statistical inferences along reproducible codes (R) generate results figures fly.FSHD bilateral cohort study, recruited 34 FSHD patients obtained left right tibialis anteria (TA) muscle biopsies. biopsies, performed MRI characterization, histopathological scoring, RNA extraction RNA sequencing, DNA extraction bisulfite sequencing 4qA permissive allele region exon 2-3. metrics yield processes, studied following topics:Transcript-based assessment muscle cell type content FSHD biopsied muscleFSHD molecular signatures, including DUX4, extracurricular matrix, inflammatory, complement activation, immunoglobulinsML classification based FSHD molecular signaturesIdentification six baskets containing genes exhibit specific signatures associated FSHDAssociation MRI characteristics signatures DUX4 expressionBilateral comparison analysisVerification immune cell infiltrate signatures immune cell type proportions","code":""},{"path":"index.html","id":"software","chapter":"1 About","heading":"1.1 Software","text":"R (4.2.2) packages Bioconductor (3.17) Tidyverse projects. used packages include GenomicAlignments, GenomicFeatures, DESeq2, dplyr, ggplot2, caret, genomic-related BioC packages annotation.fastqc, Subread, samTools, cutadapt RNA-seq data preprocessing, PLIER immune cell type proportions.","code":""},{"path":"index.html","id":"repos-structure","chapter":"1 About","heading":"1.2 Repos structure","text":"section outlines structure repository, available .","code":"\\data: \n    |- longitudinal_dds.rda: a DESeqDataSet instance include the \n       longitudinal RNA-seq gene counts, TPM, and published metadata \n       including ML-based classification labels, MRI, histopathology \n       scores, and clinical data\n    |- bilateral_dds.rda: a DESeqDataSet instance; bilateral RNA-seq gene\n       counts, TPM, and metadata including ML-based classification labels \n       and published MRI and clinical data\n    |- comprehensive_df.rda: a data.frame instance obtaining the biletarl\n       cohort's clinical, MRI, pathology, FSHD molecular signature scores,\n       and DNA methylation data\n    |- all_baskets.rda: basekts of genes representing FSHD disease \n       signatures (DUX4-M, DUX4-M6, DUX4-M12, ECM, Inflamm, Complement,\n       and IG baskets)\n    |- bilat_MLpredict.rda: categorization of the bilateral biopsy\n       samples by machine learning models (random forest and \n       KNN) trained by the longitudinal cohort and the signature\n       genes in the baskets\n       cohort \n       \n\n\\docs: *.html, the pages rendered by *.Rmd files in the \\gitbook\n       directory\n\\gitbook: *.Rmd, source code of this book\n\\scripts: *.R; un-orgnaized R code of our initial data \n          exploration and bioinformatics analysis\n\\extdata: *.xlsx; extra files and supplemental tables"},{"path":"index.html","id":"annotation","chapter":"1 About","heading":"1.3 Annotation","text":"gene annotation RNA-seq analysis based Gencode version 35. facilitate gene counts using Bioconductor packages, customized Bioconductor TxDB package named hg38.HomoSapiens.Gencode.v35. See Appendix build Bioconductor TxDB EsbDB annotation packages.","code":""},{"path":"index.html","id":"rna-seq-preprocessing-and-gene-counts","chapter":"1 About","heading":"1.4 RNA-seq preprocessing and gene counts","text":"pre-preprocessing RNA-seq data, filtered unqualified raw reads, trimmed Illumina universal adapters using Trimmomatic, aligned remaining reads GRCh38.p13 Rsubread.code chunk provides example used GenomicAlignments, BiocParallel, customized TxDB package (hg38.HomoSapiens.Gencode.v35) count reads generate RangedSummarizedExperiment object. used GenomicAlignments::summarizeOveralsp() count reads. Intersectionstrict mode count reads completely contained within range exons, ignore ambiguous reads straddle different gene features.sort_files parameter indicates location sorted, indexed BAM files used analysis","code":"\n# sort_files gives the location of our bam files\nsort_files <- list.files(scratch_dir, full.name=TRUE, pattern=\"\\\\.bam$\")\n\nlibrary(GenomicFeatures)\nlibrary(GenomicAlignments)\nlibrary(Rsamtools)\nlibrary(BiocParallel)\nlibrary(hg38.HomoSapiens.Gencode.v35)\nbp_param <- BiocParallel::MulticoreParam(workers=12L)\nregister(bp_param)\n\nfeatures <- GenomicFeatures::exonsBy(hg38.HomoSapiens.Gencode.v35, by=\"gene\")\nfeatures <- keepStandardChromosomes(features,\n                                    species = \"Homo_sapiens\",\n                                    pruning.mode=\"fine\")\nrse <- \n  GenomicAlignments::summarizeOverlaps(features=features,\n                                       reads =\n                                         Rsamtools::BamFileList(sort_file),\n                                       mode = \"IntersectionStrict\",\n                                       ignore.strand=TRUE, \n                                       singleEnd=TRUE,\n                                       inter.feature=TRUE, \n                                       BPPARAM=bp_param)"},{"path":"study-cohort.html","id":"study-cohort","chapter":"2 Study cohort","heading":"2 Study cohort","text":"Wellstone Bilateral muscle biopsy study cohort include 34 subjects, aged 21 69, recruited three medical institutes, University Washington Medical Center, University Rochester Medical Center, Kansas University Medical Center. participated subjects underwent needle muscle biopsy tibialis anterior (TA) muscles. muscle biopsies (n=68) processed MRI characterization, histopathological scoring, RNA extraction RNA sequencing , DNA extraction bisulfite sequencing 4qA permissive allele region exon 2-3. attempted biopsies adequate least one two processes, include:01-0019L, 01-0020R, 01-0029R, 13-0006R adequate histopathological scoring13-0006R, 13-0008R/L yield sufficient RNA RNA sequencing32-0028L low RNA Integrity number (RIN=4) showed RND degradation","code":""},{"path":"muscle-content.html","id":"muscle-content","chapter":"3 Transcript-based accessment for muscle content","heading":"3 Transcript-based accessment for muscle content","text":"Characterizing muscle, blood fat markers expression levels important aspect subsequent analysis RNA-seq experiments conducted muscle biopsies. previous longitudinal current biolateral studied identified strong correlation DUX4 inflammatory/complement/IG signatures. However, low muscle content biopsies exhibit non-coherent correlation—undetectable--low DUX4-targeted expression elevated inflammatory/ECM complement/IG signatures. proposed low muscle biopsies may primarily reflect expression muscle cells originated fat immune infiltrates cells (see Chapter 8). Hereby suggested incorporate three key characteristics help identify outlier muscle biopsies lacking muscle content:Muscle content distribution: Examine distribution TPM three muscle marker genes (ACTA1, TNNT3, MYH1), well blood fat markers. Pay particular attention samples falling within lower 3% percentile muscle markers among control biopsies. show elevated levels fat blood markers?Muscle content distribution: Examine distribution TPM three muscle marker genes (ACTA1, TNNT3, MYH1), well blood fat markers. Pay particular attention samples falling within lower 3% percentile muscle markers among control biopsies. show elevated levels fat blood markers?Non-coherent correlation DUX4 disease signatures: distinctive features low muscle content biopsies exhibit marker low--undetectable DUX4-targeted expression elevated levels inflammatory/ECM complement/IG signatures.Non-coherent correlation DUX4 disease signatures: distinctive features low muscle content biopsies exhibit marker low--undetectable DUX4-targeted expression elevated levels inflammatory/ECM complement/IG signatures.Outlier confirmation: Use PCA observe muscel biopsies exhibiting low muscle content () properties (ii) form cluster distanced samples.Outlier confirmation: Use PCA observe muscel biopsies exhibiting low muscle content () properties (ii) form cluster distanced samples.","code":""},{"path":"muscle-content.html","id":"muscle-blood-and-fat-content-distribution","chapter":"3 Transcript-based accessment for muscle content","heading":"3.1 Muscle, blood and fat content distribution","text":"performing downstream analysis, proposed checkpoint muscle properties three transcript-based contents: blood (HBA1, HBA2, HBB), fat (FASN, LEP, SCD), muscle (ACTA1, TNNT3, MYH1), characterized score average scaled transcripts per million (TPM) — \\(\\frac{1}{n} \\Sigma_{=1}^{n} \\log_{10}(TPM+1)\\).","code":"\nlibrary(DESeq2)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(pheatmap)\nlibrary(wesanderson)\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\")\n# the following script loads bilat_dds, anno_gencode35, longitudinal_dds, anno_ens88\nsource(file.path(pkg_dir, \"scripts\", \"load_variables_and_datasets.R\"))\nmarkers <- tibble(cell_type=c(rep(\"blood\", 3), \n                              rep(\"fat\", 3), \n                              rep(\"muscle\", 3)),\n                  gene_name=c(\"HBA1\", \"HBA2\", \"HBB\",\n                              \"FASN\", \"LEP\", \"SCD\",\n                              \"ACTA1\", \"TNNT3\", \"MYH1\"))  %>%\n  dplyr::mutate(cell_type = factor(cell_type)) %>% \n  dplyr::left_join(anno_gencode35, by=\"gene_name\")\n\ncelltype_tpm <- sapply(levels(markers$cell_type), function(type) {\n   id <- markers %>% dplyr::filter(cell_type == type) %>%\n      pull(gencode35_id)\n   sub <- bilat_dds[id]\n   tpm_score <- colSums(log10(assays(sub)[[\"TPM\"]]+1))\n}) %>% as.data.frame() %>%\n  rownames_to_column(var=\"sample_name\")\n\nblood_fat_muscle_content <- celltype_tpm"},{"path":"muscle-content.html","id":"bilateral-cohort","chapter":"3 Transcript-based accessment for muscle content","heading":"3.1.1 Bilateral cohort","text":"Figure 3.1 displays density quantile plots blood, fat muscle scores. gray area present 0 - 97% quantile fat blood 3 - 100% muscle. Sample 13-0009R 13-0007R lower 3% quantile muscle scores upper 97% quantile fat.\nFigure 3.1: Density plot blood, fat, muscle marker expression levels. Grey areas present 0 - 97% (fat blood) 3 - 100% (muscle) quantile regions\n","code":"\ndata <- blood_fat_muscle_content  %>% \n  gather(key=cell_type, value=TPM, -sample_name)  %>%\n  dplyr::mutate(cell_type = factor(cell_type))\nmark_label <- data %>% \n  dplyr::filter(sample_name %in% c(\"13-0009R\", \"13-0007R\", \"32-0020R\", \"32-0029R\")) %>%\n  dplyr::filter(!(sample_name %in% c(\"13-0009R\", \"13-0007R\") & cell_type == \"blood\")) %>%\n  dplyr::filter(!(sample_name %in% c(\"32-0020R\", \"32-0029R\") & \n                                       cell_type %in% c(\"fat\", \"muscle\"))) \n# qunatile for each of the cell type content\ndf_quantile <- data %>% group_by(cell_type) %>% \n  summarise(q0 = quantile(TPM, probs=seq(0, 1, 0.01))[\"0%\"], \n            q3 = quantile(TPM, probs=seq(0, 1, 0.01))[\"3%\"],\n            q97 = quantile(TPM, probs=seq(0, 1, 0.01))[\"97%\"],\n            q100 = quantile(TPM, probs=seq(0, 1, 0.01))[\"100%\"]) %>% as.data.frame()\ndf_rect <- data.frame(cell_type = df_quantile$cell_type,\n                      x1 = c(0, 0, df_quantile[3, 3]),\n                      x2 = c(df_quantile[1:2, 4], Inf))\n\nggplot(data, aes(x=TPM)) +\n  geom_density() +\n  facet_wrap(~cell_type, scales=\"free_x\") +\n  theme_bw() +\n  theme(panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),\n        strip.background =element_rect(fill=\"transparent\")) +\n  geom_jitter(aes(x=TPM, y=0), size=1, height=0.01) +\n  geom_text_repel(data=mark_label, aes(y=0, label=sample_name), \n                  size=2.5, color=\"gray20\", \n                  min.segment.length = unit(0, 'lines'), \n                  nudge_y = .1) +\n  geom_rect(data = df_rect, fill=\"grey50\", alpha=0.2,\n            aes(xmin = x1, xmax = x2, ymin = -Inf, ymax = Inf), inherit.aes = FALSE) +                  \n  labs(x=latex2exp::TeX(\"RNA-seq cell type content ($\\\\Sigma \\\\log_{10}( TPM+1)$\"), y=\"density\") \n\nggsave(file.path(fig_dir, \"biopsy-fat-blood-muscle-density.pdf\"), \n       height=1.8, width=4.8)"},{"path":"muscle-content.html","id":"muscle-content-in-the-bilateral-and-longitudinal-cohorts","chapter":"3 Transcript-based accessment for muscle content","heading":"3.1.2 Muscle content in the bilateral and longitudinal cohorts","text":"\nFigure 3.2: Boxplot displaying muscle scores distribution bilateral, longitudinal historical control samples. dots present outliers low muscle content samples.\n","code":"\nmarkers_ens88 <- tibble(marker_type=c(rep(\"blood\", 3), rep(\"fat\", 3),\n                                      rep(\"muscle\", 3)),\n                  gene_name=c(\"HBA1\", \"HBA2\", \"HBB\",\n                              \"FASN\", \"LEP\", \"SCD\",\n                              \"ACTA1\", \"TNNT3\", \"MYH1\"))  %>%\n  dplyr::mutate(marker_type = factor(marker_type)) %>%\n  left_join(anno_ens88, by=\"gene_name\")\n \n\nmarkertype_tpm_longi <- sapply(levels(markers_ens88$marker_type), function(type) {\n   id <- markers_ens88 %>% dplyr::filter(marker_type == type) %>%\n      pull(ens88_id)\n   sub <- longitudinal_dds[id]\n   tpm_score <- colSums(log10(assays(sub)[[\"TPM\"]]+1))\n}) %>% as.data.frame() %>%\n  rownames_to_column(var=\"sample_name\") %>%\n  add_column(pheno_type = longitudinal_dds$pheno_type,\n             classes = longitudinal_dds$cluster)\n\ntmp_longi <- markertype_tpm_longi %>% \n  dplyr::mutate(study = if_else(pheno_type==\"FSHD\", \"Longitudinal\", \"Historical control\")) %>%\n  dplyr::mutate(group = if_else(classes == \"Muscle-Low\", \"Muscle-Low\", \"others\")) %>%\n  dplyr::select(-pheno_type, -classes)\n\ntmp_rbind <- blood_fat_muscle_content %>%\n  #dplyr::select(-RNA_sample_id) %>%\n  dplyr::relocate(sample_name, .before=blood) %>%\n  dplyr::mutate(study = \"Bilat\") %>%\n  dplyr::mutate(group = if_else(sample_name %in% c(\"13-0007R\", \"13-0009R\"), \"Muscle-Low\", \"others\")) %>%\n  bind_rows(tmp_longi) %>%\n  gather(key=type, value=TPM, -sample_name, -study, -group) %>%\n  dplyr::filter(type==\"muscle\") %>%\n  dplyr::mutate(study = factor(study, levels=c(\"Historical control\", \"Longitudinal\", \"Bilat\")))\n\nmark_label <- tmp_rbind %>% \n  dplyr::filter(group == \"Muscle-Low\" & study == \"Bilat\")\n\nggplot(tmp_rbind, aes(x=study, y=TPM)) +\n  geom_boxplot(width=0.5) +\n  theme_minimal() +\n  annotate(\"text\", x=2.5, y=3.75, hjust=0.5, vjust=0.5,\n           label=\"Muscle-Low\", size=2, color=\"grey25\") +\n  #facet_wrap(~type, nrow=3, scale=\"free_y\") +\n  coord_flip() +\n  geom_text_repel(data=mark_label, aes(label=sample_name), \n                  size=2, color=\"grey25\", \n                  min.segment.length = unit(0, 'lines'), \n                  nudge_y = .08, nudge_x=0.02) +\n  labs(title=\"Bilat and longitudinal studies\", \n       y=latex2exp::TeX(\"RNA-seq muscle cell content: $\\\\Sigma \\\\log_{10}( TPM+1)\") )+\n  theme(plot.title=element_text(hjust=0.5, size=10), \n        axis.title.x=element_text(size=10))\n  \nggsave(file.path(fig_dir, \"longitudinal-bilat-muscle-boxplot.pdf\"),\n        width=4, height=1.5)"},{"path":"muscle-content.html","id":"characteristics-of-muscle-low-samples","chapter":"3 Transcript-based accessment for muscle content","heading":"3.2 Characteristics of muscle-low samples","text":"Figure 3.2 3.1, pinpoint low muscle content outliers within longitudinal bilateral cohorts. Figure demonstrates muscle-low outliers exhibiting distinctive features characterized low--undetected DUX4 signature stronger disease-specific signatures compared FSHD samples (labeled control-like Moderate+).NOTE: Refer Appendix B FSHD biopsies classification (categorized Control-like Moderate+) supervised machine learning algorithm.\nFigure 3.3: Average FSHD-disease signature scores across individual classes.\n","code":"\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\npal <- wes_palette(\"Darjeeling1\", n = 5)\nnames(pal) <- c('DUX4', 'ECM', 'Inflamm', 'IG', 'Complement')\ncomprehensive_df %>%\n  dplyr::filter(!is.na(class)) %>%\n  group_by(class) %>%\n  summarise(DUX4 = mean(`DUX4-M6-logSum`),\n            ECM = mean(`ECM-logSum`),\n            Inflamm = mean(`Inflamm-logSum`),\n            IG = mean(`IG-logSum`),\n            Complement = mean(`Complement-logSum`)) %>%\n  tidyr::gather(signature, average, -class) %>%\n  dplyr::mutate(signature = factor(signature,\n                                   levels=c('ECM', 'Inflamm', 'IG',\n                                            'Complement', 'DUX4'))) %>%\n  ggplot(aes(x=class, y=average, fill=signature)) +\n    geom_bar(position=\"stack\", stat=\"identity\") +\n    theme_light() +\n    labs(title=\"Bilat cohort\", y=\"Average signature score\",\n         x = \"Categories\") +\n    scale_fill_manual(values= pal) +\n    theme(panel.grid.minor = element_blank(),\n          panel.grid.major = element_blank(),\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"},{"path":"muscle-content.html","id":"pca-and-outlier-confirmation","chapter":"3 Transcript-based accessment for muscle content","heading":"3.3 PCA and outlier confirmation","text":"PCA reveals biopsies exhibiting low muscle content, 13-0009R 13-0007R, form distinct cluster separated rest samples. Note class refers classification carried supervise machine learning model, detailed Appendix B.\nFigure 3.4: Biolat: PCA regularized log transformation gene counts.\n","code":"\nlibrary(ggrepel)\nload(file.path(pkg_dir, \"data\", \"bilat_rlog.rda\"))\n\ndata <- plotPCA(bilat_rlog, intgroup=c(\"class\", \"sample_id\"), returnData=TRUE)\npercentVar <- round(100 * attr(data, \"percentVar\"))\nggplot(data, aes(PC1, PC2, color=class)) +\n  geom_point(size=2.5, alpha=0.8) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  geom_text_repel(aes(label=sample_id), size=3,\n                  show.legend=FALSE) +\n  theme_minimal() +\n  theme(legend.position=\"top\",\n        panel.grid.minor = element_blank())"},{"path":"MRI-vs-DUX4-score.html","id":"MRI-vs-DUX4-score","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4 MRI characteristics and DUX4 molecular signatures","text":"chapter, conducted validated correlation MRI characteristics DUX4 signatures, presented six robust DUX4 genes (see B). Additionally, constructed logistics regression model using MRI characteristics predictors forecast occurrence DUX4 muscle biopsy.Noted muscle less biopsies (13-0007R 13-0009R) identified Chapter 3 might accurately represent expression originated muscle cells. result, excluded DUX4-MRI correlation analysis.","code":"\n# load libraries\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\n\n# load data sets\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\ndraft_fig_dir <- file.path(pkg_dir, \"manuscript\", \"figures\")\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nload(file.path(pkg_dir, \"data\", \"bilat_dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"all_baskets.rda\"))\n\n# exclude 13-0007R and 13-0009R\n# dds$sample_id <- str_replace(dds$sample_name, \"[b]*_.*\", \"\")\n\ndds <- bilat_dds[, !bilat_dds$sample_id %in% c(\"13-0007R\", \"13-0009R\")]\n# tidy annotation \nanno_gencode35 <- as.data.frame(rowData(dds)) %>%\n  rownames_to_column(var=\"gene_id\") %>% #BiLat study using Gencode 35\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\"))\n\n# color palate\nlibrary(wesanderson)\npal <- wes_palette(\"Darjeeling1\", n=5)\nstir_pal <- c(\"STIR-\" = pal[5], \"STIR+\"= pal[1])\ncntr_pal <- pal[2]"},{"path":"MRI-vs-DUX4-score.html","id":"stir-status-and-dux4-signatures","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.1 STIR status and DUX4 signatures","text":"score DUX4 signatures represented sum log2 TPM expression six robust DUX4 genes (\\(\\sum_{=1}^6 \\log_{10}(TPM_i+1)\\)). six robust genes ZSCAN4, CCNA1, PRAMEF5, KHDC1L, H3Y1, MBD3L2.\nTable 4.1: Mean values DUX4 scores (based DUX4-M6 basket) STIR+ STIR- biopsies.\nmean difference DUX4 scores STIR+ STIR- groups significantly greater 0 Wilcox \\(p\\)-value \\(7e-10\\).","code":"\ncomprehensive_df %>% drop_na(`DUX4-M6-logSum`) %>%    \n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  group_by(STIR_status) %>%\n  summarise(`DUX4 score (mean of log sum)` = mean(`DUX4-M6-logSum`)) %>%\n  kbl(caption=\"Mean values of DUX4 scores (based on DUX4-M6 basket) in STIR+ and STIR- biopsies.\") %>%\n  kable_styling()\ndux4_list <- comprehensive_df %>% drop_na(`DUX4-M6-logSum`) %>%    \n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  group_by(STIR_status) %>%\n  group_map(~ pull(.x, `DUX4-M6-logSum`))\n\nwilcox.test(dux4_list[[1]], dux4_list[[2]])\n#> \n#>  Wilcoxon rank sum exact test\n#> \n#> data:  dux4_list[[1]] and dux4_list[[2]]\n#> W = 815, p-value = 7.315e-10\n#> alternative hypothesis: true location shift is not equal to 0"},{"path":"MRI-vs-DUX4-score.html","id":"logistics-prediction-of-dux4-signature-occurrence","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2 Logistics prediction of DUX4 signature occurrence","text":"","code":""},{"path":"MRI-vs-DUX4-score.html","id":"scheme-1-use-random-forest-traning-model-based-on-dux4-m6-basket","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.1 Scheme 1: use random forest traning model based on DUX4 M6 basket","text":"first scheme used random forest training model built longitudinal model six DUX4 basket genes. applied ML model bilateral samples classify DUX4+ DUX4- groups. got 60% STIR- samples DUX4+.\nTable 4.2: STIR+ - distribution DUX4+/- group.\ngeneral linear model depicted STIR status key association DUX4 signatures whereas fat infiltration fraction presented less solid evident direct association (p-value=0.3).code chunk applies logistic regression using fat infiltration percent STIR status predictors outcome DUX4 signature occurrence predicted random forest:\nFigure 4.1: Prediction DUX4 + ocurrence modeled linear combination STIR_status FAT_Infilt_Percent. red linepresents STIR+ blue STIR-.\n","code":"\n# MH_fit$M6 is built on comparing controls and Moderate+IG-high+High \nid <- all_baskets[[\"DUX4-M6\"]]$gencode_v35\ndf_logTPM <- log10(assays(dds[id])[[\"TPM\"]] + 1) %>% t(.) %>%\n      as.data.frame() %>%\n      tibble::add_column(pheno_type = factor(\"FSHD\",\n                                             levels=c(\"Control\",\n                                                      \"FSHD\"))) %>%\n      rename_with(~ str_replace(.x, \"\\\\..*\", \"\"), starts_with(\"ENSG\"))\nMH_fit <- get(load(file.path(pkg_dir, \"data\", \"MH_fit.rda\")))$M6\n\npredict_M6 <- predict(MH_fit$rf, newdata=df_logTPM) %>%\n  as.data.frame() %>% dplyr::rename(rfM6_fit = \".\") %>%\n  tibble::add_column(sample_id = str_replace(rownames(df_logTPM),\n                                     \"_.*\", \"\"))\ndata <- predict_M6 %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>%\n  drop_na(STIR_status)\n# how many STIR- and STIR+ on Control (DUX4-) and FSHD (DUX4+)\ndata %>% group_by(STIR_status) %>%\n  summarise(`DUX4-` = sum(rfM6_fit==\"Control\"),\n            `DUX4+` = sum(rfM6_fit == \"FSHD\")) %>%\n  knitr::kable(caption=\"STIR+ and - distribution on the DUX4+/- group.\")\n\ndata %>% group_by(rfM6_fit) %>%\n  summarize(average_DUX4_score = mean(`DUX4-M6-logSum`),\n            min_DUX4_score = min(`DUX4-M6-logSum`),\n            max_DUX4_score = max(`DUX4-M6-logSum`))\n#> # A tibble: 2 × 4\n#>   rfM6_fit average_DUX4_score min_DUX4_score max_DUX4_score\n#>   <fct>                 <dbl>          <dbl>          <dbl>\n#> 1 Control              0.0408         0.0260         0.0668\n#> 2 FSHD                 1.68           0.0856         6.05\n# include random forest fitting model (M6) and threshold\ndata <- predict_M6 %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>%\n  drop_na(STIR_status)\nfat_stir_logit <- glm(rfM6_fit ~ Fat_Infilt_Percent + STIR_status, \n                      data = data, family = \"binomial\")\nsummary(fat_stir_logit)\n#> \n#> Call:\n#> glm(formula = rfM6_fit ~ Fat_Infilt_Percent + STIR_status, family = \"binomial\", \n#>     data = data)\n#> \n#> Deviance Residuals: \n#>     Min       1Q   Median       3Q      Max  \n#> -2.1852   0.0535   0.5196   0.8248   0.9502  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)\n#> (Intercept)          0.2206     0.6796   0.325    0.746\n#> Fat_Infilt_Percent   7.2107     6.8399   1.054    0.292\n#> STIR_statusSTIR+     0.8861     1.2679   0.699    0.485\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 63.678  on 61  degrees of freedom\n#> Residual deviance: 55.200  on 59  degrees of freedom\n#> AIC: 61.2\n#> \n#> Number of Fisher Scoring iterations: 7\ndf_scheme1 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                  each=length(seq(0, 0.8, by=0.01)))) \ndf_scheme1$prob <- predict(fat_stir_logit, newdata = df_scheme1, type = \"response\")\n\nggplot(df_scheme1, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n               color=STIR_status)) +\n  geom_line() +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"top\", axis.title.y=element_text(size=10),\n        plot.title=element_text(size=12, hjust=0.5),\n        plot.subtitle=element_text(size=10, hjust=0.5)) +\n  labs(title=\"Logistic prediction for DUX4+ occurrance\",\n       subtitle = \"DUX4+/- classified by ML model\", \n        y=\"probility of DUX4 signature occurence\",\n        x=\"whole muscle fat percent\") +\n  scale_x_continuous(breaks=seq(0, 0.8, by=0.2)) +\n  scale_y_continuous(breaks=seq(0, 1, by=0.1))\nggsave(file.path(draft_fig_dir, \"lagistics-prediction-scheme-rfbased.pdf\"),\n       width=3, height=2.5)"},{"path":"MRI-vs-DUX4-score.html","id":"scheme-2-binary-outcome-using-dux4-score-0.5","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.2 Scheme 2: Binary outcome using DUX4 score > 0.5","text":"use DUX4 score defined accumulated log(TPM+1) six genes DUX4 basket. use whole muscle fat percent STIR status predictor infer occurrence DUX4 score > 0.5. reason chose 0.5 threshold TPM=0.2 conventional threshold call whether gene expressed sum six genes expressed level approximately 0.5: \\(\\sum_1^6 log_{10}(0.2 + 1) \\approx 0.5\\).NOTE: Predictions 13-0007R 13-0009R excluded.\n(#tab:scheme2_based_on_DUX4_score)Number STIR- STIR+ DUX4 < 0.5 DUX4 >=0.5 group.\ncase, general linear model depicted STIR status key association DUX4 signatures whereas fat infiltration fraction presented less solid evident direct association (p-value=0.3). Summary logistic regression statistics:\nFigure 4.2: logistic prediction model used forecast likelihood DUX4 score greater equal 0.5. grey dashed line represents forecast made solely basis fat percentage predictor.\n","code":"\n# include random forest fitting model (M6) and threshold\ndata <- comprehensive_df %>% drop_na(STIR_status, `DUX4-M6-logSum`) %>%\n  dplyr::select(sample_id, `DUX4-M6-logSum`, Fat_Infilt_Percent, STIR_status) %>%\n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  dplyr::mutate(`DUX4-M6-logSum-positive`= if_else(`DUX4-M6-logSum` < 0.5, \n                                                   \"Control-like\", \"DUX4+\")) %>%\n  dplyr::mutate(`DUX4-M6-logSum-positive`=factor(`DUX4-M6-logSum-positive`))\n\n## how many STIR- are control-like (DUX4 score < 0.5) and \n##how many STIR+ are DUX4+ (DUX4 >= 0.5)\ndata %>% group_by(STIR_status) %>%\n  summarise(`DUX4 < 0.5`=sum(`DUX4-M6-logSum-positive` == \"Control-like\"),\n            `DUX4 > 0.5`= sum(`DUX4-M6-logSum-positive` == \"DUX4+\")) %>%\n  kbl(caption = \"Number of STIR- and STIR+ in the DUX4 < 0.5 and DUX4 >=0.5 group.\") %>%\n  kable_styling()\n## logistic prediction\nfat_stir_logit_2 <- glm(`DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent + STIR_status,\n                        data = data, family = \"binomial\")\nsummary(fat_stir_logit_2)\n#> \n#> Call:\n#> glm(formula = `DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent + \n#>     STIR_status, family = \"binomial\", data = data)\n#> \n#> Deviance Residuals: \n#>     Min       1Q   Median       3Q      Max  \n#> -2.1838  -0.7054  -0.5871   0.3009   1.8516  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)  \n#> (Intercept)         -1.9431     0.7751  -2.507   0.0122 *\n#> Fat_Infilt_Percent   7.8039     7.2899   1.071   0.2844  \n#> STIR_statusSTIR+     2.9489     1.2501   2.359   0.0183 *\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 85.886  on 61  degrees of freedom\n#> Residual deviance: 48.859  on 59  degrees of freedom\n#> AIC: 54.859\n#> \n#> Number of Fisher Scoring iterations: 7\ndf_scheme2 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                  each=length(seq(0, 0.8, by=0.01))))\ndf_scheme2$prob = predict(fat_stir_logit_2, newdata = df_scheme2, type = \"response\")\nfat_logit <- glm(`DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent,\n                 data = data, family = \"binomial\")\ndf_fat_logit <- data.frame(Fat_Infilt_Percent = seq(0, 0.8, by=0.01))\ndf_fat_logit$prob <- predict(fat_logit, newdata = df_fat_logit, type=\"response\")\n# add a logistic model without STIT\n# viz\nggplot(df_scheme2, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n                       color=STIR_status)) +\n  geom_line() +\n  geom_line(data=df_fat_logit, \n            aes(x=Fat_Infilt_Percent, y=prob), color=\"gray75\", \n            linetype=\"dashed\", inherit.aes=FALSE) +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        axis.title.x = element_text(size=9),\n        axis.title.y = element_text(size=9),\n        plot.subtitle = element_text(size=9, color=\"grey20\", hjust=0.5),\n        plot.title=element_text(hjust=0.5, size=10)) +\n  labs(title=\"Logistic regression\", \n       subtitle=\"Occurrence of DUX4 score > 0.5\",\n        y=\"probility\",\n        x=\"whole muscle fat percent\") +\n  scale_x_continuous(breaks=seq(0, 0.8, by=0.2)) +\n  scale_y_continuous(breaks=seq(0, 1, by=0.2)) +\n  geom_segment(aes(x = 0.13, y = 0.80, xend = 0.11, yend = 0.84),\n               color=stir_pal[\"STIR+\"],\n               arrow = arrow(length = unit(0.1, \"cm\"))) +\n  annotate(\"text\", x=0.14, y=0.80, hjust=0, vjust=1, label=\"STIR+\", size=2.5, \n           color=stir_pal[\"STIR+\"]) +\n  geom_segment(aes(x = 0.23, y = 0.35, xend = 0.21, yend = 0.39),\n               color=stir_pal[\"STIR-\"],\n               arrow = arrow(length = unit(0.1, \"cm\"))) +\n  annotate(\"text\", x=0.24, y=0.35, hjust=0, vjust=1, label=\"STIR-\", size=2.5, \n           color=stir_pal[\"STIR-\"])\nggsave(file.path(draft_fig_dir, \"lagistic-prediction-outcome-by-logSum-DUX4-0.5.pdf\"),\n       width=3, height=2.5)"},{"path":"MRI-vs-DUX4-score.html","id":"use-logistic-regression-to-predict-the-moderate-occurrence","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.3 Use logistic regression to predict the Moderate+ occurrence","text":", made logistics prediction Moderate+ occurrence based random forest model constructed 30 basket genes distinguish control moderate+IG-high+high FSHD cases. Although STIR status slight impact prediction, significant.\nFigure 4.3: Logistic prediction occurrance Moderate+. using whole muscle fat percent STIR status.\n\nFigure 4.4: Logistic repression three different classification shemes\n","code":"\n# use logistics to predict the Moderate+ occurrence (outcome model built upon)\n# six basket;\n# take away: fat infiltration percent is critical in determining the probability of the outcome, whereas STIR_status is not \n\ncomprehensive_df %>% group_by(STIR_status) %>%\n   summarise(`Control-like`=sum(class==\"Control-like\", na.rm=TRUE),\n             `Moderate+`=sum(class==\"Moderate+\", na.rm=TRUE),\n             `Muscle-Low` = sum(class==\"Muscle-Low\", na.rm=TRUE)) %>%\n  kbl() %>%\n  kable_styling()\n# randomForest.Fit is ML traning model based on six basket genes and \n# the longitudinal samples\nload(file.path(pkg_dir, \"data\", \"bilat_MLpredict.rda\"))\ndata <- comprehensive_df %>%\n  left_join(dplyr::select(bilat_MLpredict, -class), by=\"sample_id\") %>%\n  drop_na(randomForest.fit)\n\nfat_stir_logit_3 <- glm(randomForest.fit ~ Fat_Infilt_Percent + STIR_status,\n                        data = data, family = \"binomial\")\nsummary(fat_stir_logit_3)\n#> \n#> Call:\n#> glm(formula = randomForest.fit ~ Fat_Infilt_Percent + STIR_status, \n#>     family = \"binomial\", data = data)\n#> \n#> Deviance Residuals: \n#>     Min       1Q   Median       3Q      Max  \n#> -1.8231  -1.2550   0.4110   0.9434   1.1812  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)\n#> (Intercept)         -0.3331     0.6417  -0.519    0.604\n#> Fat_Infilt_Percent   9.6883     6.4148   1.510    0.131\n#> STIR_statusSTIR+     0.1928     1.0038   0.192    0.848\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 72.836  on 61  degrees of freedom\n#> Residual deviance: 61.901  on 59  degrees of freedom\n#> AIC: 67.901\n#> \n#> Number of Fisher Scoring iterations: 7\n\ndf_scheme3 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                   each=length(seq(0, 0.8, by=0.01)))) \ndf_scheme3$prob <- predict(fat_stir_logit_3, newdata = df_scheme3, type = \"response\")\n\nggplot(df_scheme3, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n                       color=STIR_status)) +\n  geom_line() +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        plot.title=element_text(hjust=0.5)) +\n  labs(title=\"Logistic prediction III on Moderate+ occurrence\", \n        y=\"Probility of Moderate+ occurrence\",\n        x=\"fat infiltration percent\") +\n  scale_x_continuous(breaks=seq(0, 1, by=0.2))\ndf_scheme1 %>% \n  left_join(df_scheme2, by=c(\"Fat_Infilt_Percent\", \"STIR_status\"),\n            suffix=c(\".scheme1\", \".scheme2\")) %>%\n  left_join(df_scheme3, by=c(\"Fat_Infilt_Percent\", \"STIR_status\")) %>%\n  dplyr::rename(`rfFit Moderare+`=prob, `rfFit DUX4+`=prob.scheme1,\n                `threshold DUX4+`=prob.scheme2) %>%\n  gather(key=scheme, value=prob, -Fat_Infilt_Percent, -STIR_status) %>%\n  #dplyr::mutate(group=paste0(STIR_status, scheme)) %>%\n  ggplot(aes(x=Fat_Infilt_Percent, y=prob, group=scheme,\n                       color=scheme)) +\n  geom_line() +\n  #scale_color_manual(values = stir_pal) +\n  facet_wrap(~ STIR_status,  nrow=1) +\n  theme_minimal() +\n  theme(#legend.position = \"bottom\", \n        plot.title=element_text(hjust=0.5)) +\n  labs(title=\"Logistic predictions using three shemes\", \n        y=\"Probility of DUX4+ or Moderate+ occurrence\",\n        x=\"fat infiltration percent\") +\n  scale_x_continuous(breaks=seq(0, 1, by=0.2))"},{"path":"DUX4-basket.html","id":"DUX4-basket","chapter":"5 DUX4 basket","heading":"5 DUX4 basket","text":"Update coming soon","code":""},{"path":"other-baskets.html","id":"other-baskets","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","text":"Describe basket genes curated association STIR status. Finally show comprehensive correlation test","code":""},{"path":"other-baskets.html","id":"basket-genes-representing-fshd-signatures","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.1 Basket genes representing FSHD signatures","text":"Extracellular matrix (ECM)InflammatoryComplement pathway activationImmunoglobulins (IG)Load datasets parameters","code":"\n# define parameters and load datasets: bilat_dds and longitudinal_dds\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\", \"immune-infiltration\")\nsource(file.path(pkg_dir, \"scripts\", \"load_variables_and_datasets.R\"))\nsource(file.path(pkg_dir, \"scripts\", \"viz_tools.R\"))\nload(file.path(pkg_dir, \"data\", \"all_baskets.rda\"))\nload(file.path(pkg_dir, \"data\", \"control_baskets.rda\"))\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))"},{"path":"other-baskets.html","id":"association-with-stir-status","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.2 Association with STIR status","text":"","code":""},{"path":"other-baskets.html","id":"bilateral-samples","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.2.1 Bilateral samples","text":"basket genes low counts bilat samples","code":"\nall_baskets[[\"DUX4-M\"]] %>% \n  dplyr::filter(gencode_v35 %in% c(\"ENSG00000277862.1\", \"ENSG00000280267.4\", \"ENSG00000182330.10\"))\n#> [1] gene_id_v88 ens_id      gencode_v35 gene_name  \n#> [5] gene_type  \n#> <0 rows> (or 0-length row.names)\nbasket_name = names(all_baskets)[c(2, 4, 5, 6, 7)]\n\nall_baskets_TPM <- map_dfr(all_baskets[basket_name], function(x) {\n  id <- x %>% \n    dplyr::filter(gencode_v35 %in% rownames(bilat_dds)) %>%\n    pull(gencode_v35)\n  \n  assays(bilat_dds[id])[[\"TPM\"]] %>% \n    as.data.frame() %>%\n    summarise(across(where(is.numeric), mean)) %>% \n    t(.) %>% \n    as.data.frame() %>%\n    rownames_to_column(var=\"sample_name\") %>%\n    #add_column(basket = name) %>%\n    dplyr::rename(TPM = V1)\n}, .id=\"basket\") %>% \n  dplyr::mutate(basket = factor(basket, levels=basket_name),\n                sample_id = str_replace(sample_name, \"[b]*_.*\", \"\"), .before=\"sample_name\") %>%\n  dplyr::select(-sample_name)   \nall_baskets_TPM %>% \n  left_join(dplyr::select(comprehensive_df, sample_id, STIR_status),\n            by=\"sample_id\") %>%\n  add_row(control_baskets %>% add_column(STIR_status = \"Control\")) %>%\n  dplyr::mutate(STIR_status = factor(STIR_status, levels=c(\"Control\", \"STIR-\", \"STIR+\"))) %>%\n  dplyr::filter(!sample_id %in% c(\"13-0009R\", \"13-0007R\")) %>%\n  dplyr::filter(! basket %in% c(\"DUX4-M12\", \"DUX4-M\")) %>%\n  ggplot(aes(x=STIR_status, y=TPM)) +\n    geom_boxplot(width=0.7, outlier.shape=NA, fill=\"grey75\", alpha=0.5) +\n    geom_jitter(width = 0.3, size=0.5, alpha=0.5) +\n    facet_wrap(~ basket, scales=\"free_y\", nrow=1) +\n    theme_bw() +\n    labs(x=\"\", y=\"basket scores (TPM)\") +\n    scale_y_continuous(trans='log10') +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) "},{"path":"other-baskets.html","id":"visualization-of-five-baskets-along-with-other-mri-and-pathological-data","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.3 Visualization of five baskets along with other MRI and pathological data","text":"following heatmap displays expression levels five basket genes, along MRI characteristics, histopathology, compliment scores. colors represent row-wise z-score log10 TPM values. included Muscle-Low samples visualization highlight distinct characteristics, low expression levels DUX4 baskets high expression inflammatory/ECM factors.","code":""},{"path":"other-baskets.html","id":"longitudinal-samples","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.3.1 Longitudinal samples","text":"\nFigure 6.1: Heatmap row-wise z-score log10 TPM five basekts genes longitudinal samples.\n","code":""},{"path":"other-baskets.html","id":"bilat-samples","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.3.2 Bilat samples","text":"\nFigure 6.2: Heatmap row-wise z-score log10 TPM five basekts genes bilateral samples.\n","code":""},{"path":"other-baskets.html","id":"correlation-among-the-baskets-expression-levels","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.4 Correlation among the baskets expression levels","text":"","code":""},{"path":"other-baskets.html","id":"complemensive-correlation-analysis","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6.5 Complemensive correlation analysis","text":"","code":""},{"path":"bilateral-comparison.html","id":"bilateral-comparison","chapter":"7 Bilateral comparison","heading":"7 Bilateral comparison","text":"","code":"\n# load libraries\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\n# parameters and load data sets\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\ndraft_fig_dir <- file.path(pkg_dir, \"manuscript\", \"figures\")\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nload(file.path(pkg_dir, \"data\", \"dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"all_baskets.rda\"))\n\n# tidy annotation \nanno_gencode35 <- as.data.frame(rowData(dds)) %>%\n  rownames_to_column(var=\"gene_id\") %>% #BiLat study using Gencode 35\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\"))\n# tidy column data\ncol_data <- as.data.frame(colData(dds)) %>%\n  dplyr::mutate(sample_id = str_replace(sample_name, \"[b]*_.*\", \"\")) "},{"path":"bilateral-comparison.html","id":"random-pairing-simulation-to-show-symmetric-trends-on-mri-characteristics","chapter":"7 Bilateral comparison","heading":"7.1 Random pairing simulation to show symmetric trends on MRI characteristics","text":"34 subjects, ten rated STIR+ TAs, 19 STIR- bilaterally, five discordant STIR. question , given 43- STIR 25 STIR+ form 34 pairs, expected values STIR+, STIR- discordant STIR-/STIR+ pairs? observed values different expected values?answer question, performed 1000 runs simulation, run, 34 pairs randomly drowned 43 STIR- 25 STIR+ samples, yielding numbers STIR+, STIR-, discordance STIR+/- pairs. simulation built three distributions number three types pairs, expected values pair type 4.5 pairs STIR+, 13.5 STIR- 16 STIR+/-. observed values STIR+ (10) STIR- (19) pairs reveal symmetric trends STIR characteristics.","code":"\n# simulation distribution of the STIR+/+ (1,1), STIR-/- (0,0), and STIR-/+ (0,1) paire # 0 = STIR-\n# 1 = STIR+\nn_simulation <- 10000\nsim_list <- vector(\"list\", n_simulation)\nfor (j in 1:n_simulation) {\n  n_pos <- 25 # 1: STIR+\n  n_neg <- 43 # 0: STIR-\n  n_pairs <- (n_pos + n_neg) / 2\n\n  set.seed <- j\n \n  res <- vector(\"integer\", n_pairs)\n  for (i in 1:n_pairs) {\n    stir <- c(rep(1, n_pos), rep(0, n_neg))\n    res[i] <- sum(sample(x=stir, 2, replace=FALSE))\n    n_pos <- n_pos - res[i]\n    n_neg <- n_neg - (2-res[i])\n  }\n\n  sim_list[[j]] <- table(res)\n}\n\nsim_res <- do.call(rbind, sim_list) %>%\n  as.data.frame() %>%\n  rename(`STIR-/-`= `0`, `STIR+/-`=`1`, `STIR+/+`=`2`) %>%\n  gather(key=\"pairs\", value=\"n\")annot <- sim_res %>% group_by(pairs) %>%\n  summarise(mu = mean(n)) %>%\n  dplyr::mutate(x_mu = mu, y_mu = 0) %>%\n  dplyr::mutate(x_n=c(19, 5, 10), y_n=0) %>%\n  dplyr::mutate(mu_label = format(mu, digit=2))\n\nggplot(sim_res, aes(x=n)) +\n   geom_density(adjust=3.5, n=256) +\n   #geom_histogram(bins=10) +\n   facet_wrap( ~ pairs, nrow=3) +\n   geom_point(data=annot, aes(x=x_n, y=y_n), \n              size=2, color=\"red\", shape=4) +\n   geom_text(data=annot, aes(x=x_mu, y=y_mu, \n                             label=paste0(\"mu = \", mu_label)), \n             hjust=0, vjust=0, color=\"gray50\") +\n   geom_vline(data=annot, aes(xintercept=mu),\n              linetype=\"dashed\", color=\"gray50\") +\n   labs(x=\"number of pairs\", y=\"density\") +\n   theme_bw()\nggsave(file.path(pkg_dir, \"figures\", \"STIR-2000-simulation-pairs.pdf\"), \n       width=4, height=4)   \n}"},{"path":"bilateral-comparison.html","id":"fat-infiltration","chapter":"7 Bilateral comparison","heading":"7.2 Fat infiltration","text":"Pearson correlation right left fat infiltration 0.82.\nFigure 7.1: Left right whole muscle fat percent.\n","code":"\nfat_cor <- comprehensive_df %>% \n  dplyr::select(Subject, location, Fat_Infilt_Percent) %>%\n  spread(key=location, value=Fat_Infilt_Percent) %>%\n  drop_na(L, R) %>%\n  summarise(cor=cor(L, R))\nfat_cor\n#> # A tibble: 1 × 1\n#>     cor\n#>   <dbl>\n#> 1 0.821\ncomprehensive_df %>% \n  dplyr::select(Subject, location, Fat_Infilt_Percent) %>%\n  spread(key=location, value=Fat_Infilt_Percent) %>%\n  drop_na(L, R)  %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1) +\n    geom_smooth(method=\"lm\", se=FALSE, \n                color=\"grey75\", alpha=0.3, linewidth=0.7) +\n    #geom_abline(slope=1, intercept=0, color=\"grey50\",\n    #           linetype=\"dashed\", alpha=0.5) +\n    theme_minimal() +\n    labs(title=\"Whole muscle fat percent\", x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          panel.grid.minor = element_blank(),\n          axis.title = element_text(size=8)) +\n    annotate(\"text\", x=Inf, y=-Inf, color=\"gray25\",\n             size=3, hjust=1, vjust=-2,\n             label=paste0(\"Pearson=\", format(fat_cor$cor[1],\n                                             digit=2))) \n\nggsave(file=file.path(draft_fig_dir,\n                      \"fat-infilt-left-and-right.pdf\"),\n       width=2.5, height=2)"},{"path":"bilateral-comparison.html","id":"muscle-strength","chapter":"7 Bilateral comparison","heading":"7.3 Muscle strength","text":"\nFigure 7.2: Left right TA muscle strength (foot dorsiflexors).\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `Foot Dorsiflexors`) %>%\n  spread(key=location, value=`Foot Dorsiflexors`) %>%\n  drop_na(L, R) \n\nstrength_cor <- data %>% summarise(cor=cor(L, R))\n\nggplot(data, aes(x=L, y=R)) +\n    geom_point(size=1) +\n    geom_smooth(method=\"lm\", se=FALSE, \n                color=\"grey75\", alpha=0.3, linewidth=0.7) +\n    #geom_abline(slope=1, intercept=0, color=\"grey50\",\n    #            linetype=\"dashed\", alpha=0.5) +\n    theme_minimal() +\n    labs(title=\"Foot Dorsiflexors\", x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          panel.grid.minor = element_blank(),\n          axis.title = element_text(size=8)) +\n    annotate(\"text\", x=Inf, y=-Inf, color=\"gray25\",\n             size=3, hjust=1, vjust=-2,\n             label=paste0(\"Pearson=\", format(strength_cor$cor[1],\n                                             digit=2))) \n\nggsave(file=file.path(draft_fig_dir,\n                      \"dorsiflexors-infilt-left-and-right.pdf\"),\n       width=2.5, height=2)"},{"path":"bilateral-comparison.html","id":"histopathological-variables","chapter":"7 Bilateral comparison","heading":"7.4 Histopathological variables","text":"\nFigure 7.3: Lift right TA muscle histopathological variables.\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `Cumulative Score`,\n                `I. Variability in Fiber`,\n                `II. Extent of Central Nucleation`,\n                `III. Necrosis/Regeneration`,\n                `IV. Interstitial Fiobrsis`) %>%\n  dplyr::rename(`histopathological score`=`Cumulative Score`,\n         `Variability in Fiber` = `I. Variability in Fiber`,\n         `Extent of Central Nucleation` = `II. Extent of Central Nucleation`,\n         `Necrosis/Regeneration`=`III. Necrosis/Regeneration`,\n         `Interstitial Fiobrsis`=`IV. Interstitial Fiobrsis`) %>%\n  gather(key=pathology_var, value=scores, -Subject, -location) %>%\n  spread(key=location, value=scores) %>%\n  drop_na(L, R) %>%\n  dplyr::mutate(\n    pathology_var=factor(pathology_var, \n                         levels=c(\"Variability in Fiber\",\n                                  \"Extent of Central Nucleation\",\n                                  \"Necrosis/Regeneration\",\n                                  \"Interstitial Fiobrsis\",\n                                  \"histopathological score\")))\n                                  #\"STIR_RATING\",\n                                  #\"FAT_FRACTION\", \n                                  #\"Fat_Infilt_Percent\",\n                                  #\"Foot Dorsiflexors\")))\n\npath_cor <- data %>% group_by(pathology_var) %>%\n  summarise(cor=cor(L, R)) \n  \nggplot(data, aes(x=L, y=R)) +\n  geom_jitter(width=0.1, height=0.1, size=1) +\n    geom_smooth(method=\"lm\", se=FALSE) +\n    geom_abline(slope=1, intercept=0, color=\"grey50\",\n                linetype=\"dashed\", alpha=0.5) +\n    theme_classic() +\n    facet_wrap(~pathology_var, scale=\"free\") +\n    labs(title=\"Pathological scores bilateral correlation (Pearson)\",\n         x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=12),\n          axis.title = element_text(size=10)) +\n    geom_text(data=path_cor, aes(label=format(cor, digit=2)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1.5)\nggsave(file.path(draft_fig_dir, \"bilateral_cor_pathological_var.pdf\"), width=6, height=4)    "},{"path":"bilateral-comparison.html","id":"fshd-signatures-bilateral-comparisons","chapter":"7 Bilateral comparison","heading":"7.5 FSHD-signatures bilateral comparisons","text":"","code":""},{"path":"bilateral-comparison.html","id":"per-gene-correlation","chapter":"7 Bilateral comparison","heading":"7.5.1 Per-gene correlation","text":"calculated left-t-right correlation every genes baskets. expression level used TPM.\nTable 7.1: Mean correlation genes baskets calculated TPM L/R muscle.\nScatter plot genes\n6 5 scatter plots","code":"\n# get TPM for each gene\nbilat_tpm <- map_dfr(names(all_baskets), function(basket_name) {\n    id <- all_baskets[[basket_name]]$gencode_v35\n    tpm <- assays(dds[id])[[\"TPM\"]] %>% t(.) %>% \n      as.data.frame() %>%\n      rownames_to_column(var=\"sample_id\") %>%\n      dplyr::mutate(sample_id = str_replace(sample_id, \n                                            \"[b]*_.*\", \"\")) %>%\n      gather(key=gene_id, value=TPM, -sample_id) %>% \n      left_join(anno_gencode35, by=\"gene_id\") %>%\n      dplyr::select(-ens_id, -gene_id, -gene_type) %>%\n      left_join(dplyr::select(col_data, sample_id, location,\n                              Subject), by=\"sample_id\") %>%\n      dplyr::select(-sample_id) %>%\n      spread(key=location, value=TPM) %>% \n      drop_na(L, R) %>%\n      dplyr::mutate(basket=basket_name)\n}) %>% \n  dplyr::mutate(basket=factor(basket, levels=names(all_baskets))) \n#  dplyr::filter(!Subject %in% c(\"13-0007\", \"13-0009\"))\ngene_cor <- bilat_tpm %>% \n  drop_na(L, R) %>%\n  dplyr::mutate(L_log = log10(L+1), R_log=log10(R+1)) %>%\n  group_by(basket, gene_name) %>% \n  summarise(correlation=cor(L, R), cor_log = cor(L_log, R_log)) \n\ncor_mean <- gene_cor %>% \n  drop_na(correlation, cor_log) %>% \n  dplyr::filter(!basket %in% c(\"DUX4-M\", \"DUX4-M12\")) %>%\n  group_by(basket) %>%\n  summarise(cor_mean = mean(correlation))\nknitr::kable(cor_mean, caption=\"Mean of correlation of genes in each baskets calculated by TPM on L/R muscle.\")\ngene_cor %>% drop_na(correlation) %>%\n  dplyr::filter(!basket %in% c(\"DUX4-M\", \"DUX4-M12\")) %>%\n  ggplot(aes(x=basket, y=correlation)) +\n    geom_boxplot(width=0.5, outlier.shape=NA) +\n    geom_point(alpha=0.6, size=2, color=\"grey50\") +\n    stat_summary(fun=mean, geom=\"point\", shape=5, size=2.5,  \n                 alpha=0.6, fill=\"red\") +\n    #geom_point(data=cor_mean, color=\"red\", alpha=0.6) +\n    theme_minimal() +\n    labs(x=\"\", y=\"Bilateral correlation (Pearson)\") +\n    theme(axis.title=element_text(size=10), \n          axis.text.x = element_text(angle = 90, \n                                     vjust = 0.5, hjust=1))\nggsave(file=file.path(draft_fig_dir,\n                      \"bilat-basket-comparison-cor-by-gene.pdf\"),\n       width=2, height=3)  \ndux4_corr <- gene_cor %>% dplyr::filter(basket == \"DUX4-M6\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"DUX4-M6\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=dux4_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"DUX4-M6\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_DUX4_basket_genes.pdf\"),\n       width=7, height=1.7)  \necm_corr <- gene_cor %>% dplyr::filter(basket == \"ECM\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"ECM\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=ecm_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"ECM\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_ECM_basket_genes.pdf\"),\n       width=7, height=1.7)  \ninflam_corr <- gene_cor %>% dplyr::filter(basket == \"Inflamm\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"Inflamm\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=inflam_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"Inflamm\")  +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_Inflamm_basket_genes.pdf\"),\n       width=7, height=1.7)  \ncomplement_corr <- gene_cor %>% dplyr::filter(basket == \"Complement\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"Complement\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=complement_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"Complement\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_Complement_basket_genes.pdf\"),\n       width=7, height=1.7)  \nig_corr <- gene_cor %>% dplyr::filter(basket == \"IG\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"IG\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=ig_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"IG\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_IG_basket_genes.pdf\"),\n       width=7, height=1.7)  "},{"path":"bilateral-comparison.html","id":"per-basket-by-log-sum","chapter":"7 Bilateral comparison","heading":"7.5.2 Per-basket by log sum","text":"calculate per-basket bilateral correlation using basket scores (accumulated \\(log_{10}(TPM+1)\\)).\nFigure 7.4: Basket score feft Right TA muscles.\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `DUX4-M6-logSum`,\n                `Inflamm-logSum`, `ECM-logSum`, `IG-logSum`,\n                `Complement-logSum`) %>%\n  gather(key=basket, value=scores, -Subject, -location) %>%\n  spread(key=location, value=scores) %>%\n  drop_na(L, R) %>%\n  dplyr::mutate(basket=str_replace(basket, \"-logSum\", \"\")) %>%\n  dplyr::mutate(basket=factor(basket, levels=c(\"DUX4-M6\",\n                                               \"Inflamm\", \"ECM\",\n                                               \"Complement\", \"IG\")))\n\nbasket_cor <- data %>% group_by(basket) %>%\n  summarise(cor=cor(L, R))\nggplot(data, aes(x=L, y=R)) +\n  geom_point(size=1) +\n  geom_smooth(method=\"lm\", se=FALSE) +\n    geom_abline(slope=1, intercept=0, color=\"grey50\",\n                linetype=\"dashed\", alpha=0.5) +\n    theme_classic() +\n    facet_wrap(~basket, scale=\"free\") +\n    labs(title=\"Basket scroes bilateral correlation (Pearson)\",\n         x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          axis.title = element_text(size=8)) +\n    geom_text(data=basket_cor, aes(label=format(cor, digit=2)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1)\nggsave(file.path(draft_fig_dir, \"bilateral_cor_baskets.pdf\"),\n       width=5, height=3.5)  "},{"path":"immune-cell-infiltrates.html","id":"immune-cell-infiltrates","chapter":"8 Immune cell infiltrates signature","heading":"8 Immune cell infiltrates signature","text":"Please note longitudinal study, employed K-means clustering identify five distinct clusters labeled Mild, Moderate, IG-High, High, Muscle-Low. study, found T cell proliferation, migration, B cell-mediated immune responses prominent severely affected muscles, specifically labelled “IG-high” “High”. objective chapter follows:Identify enriched GO terms (biological processes) directly linked T/B cells circulating immunoglobulins longitudinal study (High IG0high vs. control).Determine differentially expressed genes (High vs. control) associated enriched GO terms (step 1), use heatmap visualization observe trend increase gene expression across longitudinal bilateral samples, associated severity FSHD (characterised STIR status, fat fraction/infiltration percent) /complement scoring.Identify immune cell markers differentially expressed (High vs. control) using IRIS database (Abbs 2009) source.","code":"\nlibrary(tidyverse)\nlibrary(DESeq2)\nlibrary(pheatmap)\nlibrary(kableExtra)\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\nsuppressPackageStartupMessages(library(purrr))\nlibrary(wesanderson)\nlibrary(latex2exp)\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\", \"immune-infiltration\")\nload(file.path(pkg_dir, \"data\", \"bilat_dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"longitudinal_dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"bilat_MLpredict.rda\"))\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nsource(file.path(pkg_dir, \"scripts\", \"viz_tools.R\"))\n\n# tidy annotation from two datasets\nanno_gencode35 <- as.data.frame(rowData(bilat_dds)) %>%\n  rownames_to_column(var=\"gencode35_id\") %>% # BiLat study using Gencode 36\n  dplyr::mutate(ens_id=str_replace(gencode35_id, \"\\\\..*\", \"\")) %>%\n  dplyr::distinct(gene_name, .keep_all = TRUE)\n\nanno_ens88 <- as.data.frame(rowData(longitudinal_dds)) %>%\n  rownames_to_column(var=\"ens88_id\") %>% # longitudinal study ens v88\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\")) %>%\n  dplyr::distinct(gene_name, .keep_all = TRUE) %>%\n  dplyr::select(ens88_id, ens_id, gene_name)\n# insert class to bilat_dds\ncol_data <- colData(bilat_dds) %>% as.data.frame() %>%\n  left_join(bilat_MLpredict, by=\"sample_id\")\nbilat_dds$class <- col_data$class\n\nlongitudinal_dds$STIR_status <- if_else(longitudinal_dds$STIR_rating > 0, \"STIR+\", \"STIR-\")\n\n# color pal\ncol <- c(\"#ccece6\", \"#006d2c\") # control vs. FSHD?\nstir_pal <- c(\"STIR+\" = \"#006d2c\", \"STIR-\" = \"#ccece6\")\ncomplement_pal = c(\"3\" = \"#006d2c\", \"2\" = \"#66c2a4\", \"1\" = \"#ccece6\")"},{"path":"immune-cell-infiltrates.html","id":"enriched-biological-processes-directly-associated-with-tb-cells","chapter":"8 Immune cell infiltrates signature","heading":"8.1 Enriched biological processes directly associated with T/B cells","text":"code chunk (1) obtains enriched GO terms affected muscles longitudinal study, supplementary table 5, (2) retains enriched GO terms containing terms including T cell, B cell, humoral, immunoglobulin, complement. Total 20 terms extracted.\nTable 8.1: Enriched biological process GO terms (n=20) related T/B cells, humoral immune response, immunoglobulin domains. Identified using longitudinal IG-High High samples (vs. controls).\nDisplay p-values yielded GSEA:\nFigure 8.1: Enriched GO terms related T B cells immunoglobulin domains. Red dots present p-value enriched GO terms IG High samples.\n","code":"\nhigh_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=2, skip=2)\n\nig_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=4, skip=2)\n\nmoderate_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=6, skip=2)\n\n# get the lymphocyte related GO ID\ninfiltrates_go <- high_enriched %>%\n  dplyr::filter(str_detect(term, \"T cell|B cell|humoral|immunoglobulin|complement\"))\n\ninfiltrates_go %>% \n  dplyr::select(category, over_represented_pvalue, term) %>%\n  dplyr::rename(pvalue = over_represented_pvalue) %>%\n  dplyr::mutate(pvalue = format(pvalue, scientific = TRUE)) %>%\n  dplyr::arrange(category) %>%\n  kbl(caption=\"Enriched biological process GO terms (n=20)  related to T/B cells, humoral immune response, and immunoglobulin domains. Identified using the longitudinal IG-High and High samples (vs. controls).\") %>%\n  kable_paper(\"hover\", full_width = F)\ndf <- infiltrates_go %>%\n  dplyr::select(category, term, over_represented_pvalue) %>%\n  arrange(term) %>% \n  left_join(dplyr::select(ig_enriched, category, over_represented_pvalue),\n            by=\"category\", suffix=c(\".High\", \".IG-High\")) %>%\n  tidyr::gather(key=class, value=pvalue, -category, -term) %>%\n  dplyr::mutate(class = str_replace(class, \n                                    \"over_represented_pvalue.\", \"\"),\n                term = str_trunc(term, 45),\n                class = factor(class, levels=c(\"IG-High\", \"High\"))) %>%\n  dplyr::mutate(log10pvalue = -log10(pvalue)) \n\ncat_levels <- df %>% dplyr::filter(class == \"High\") %>%\n  dplyr::arrange(category) %>% pull(term)\n\ndf %>% dplyr::mutate(term=factor(term, levels=cat_levels)) %>%\n  #dplyr::mutate(term = factor(term,levels=cat_levels)) %>%\n  ggplot(aes(x=class, y=term)) +\n    geom_point(aes(size=log10pvalue), color=\"red1\", alpha=0.7,\n               show.legend = FALSE) +\n    theme_minimal() +\n  labs(title=\"Enriched GO terms related to T/B cells and immunoglobulins\") +\n  theme(axis.title.x = element_blank(),\n        plot.title = element_text(hjust=1, size=9.5),\n        axis.title.y = element_blank())\n\nggsave(file.path(fig_dir, \"longitudinal-enriched-immunity-GO.pdf\"), \n       width=3.8, height=4.2)  "},{"path":"immune-cell-infiltrates.html","id":"significant-genes-associated-with-the-tb-associated-enriched-go-terms","chapter":"8 Immune cell infiltrates signature","heading":"8.2 Significant genes associated with the T/B-associated enriched GO terms","text":"code chunk identifies significantly expressed genes High IG-High (compared controls) associated enriched GO terms obtained previously.Results: Total 95 B/T cell immunity response significant markers identified.","code":"\nhigh_sig <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=1, skip=3) %>%\n  dplyr::select(gene_name, gencode_id) %>%\n  dplyr::mutate(ens_id = str_replace(gencode_id, \"\\\\..*\", \"\"))\n\nig_sig <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=3, skip=3) %>%\n  dplyr::select(gene_name, gencode_id) %>%\n  dplyr::mutate(ens_id = str_replace(gencode_id, \"\\\\..*\", \"\"))\nsig <- bind_rows(high_sig, ig_sig) %>%\n  dplyr::distinct(gene_name, .keep_all=TRUE)\n\n## keep the genes that involved in the infiltrates_go\ngene2cat <- goseq::getgo(sig$ens_id, \"hg38\", \"ensGene\", fetch.cats = \"GO:BP\")\nnames(gene2cat) <- sig$ens_id\ncat2gene <- goseq:::reversemapping(gene2cat)[infiltrates_go$category]\ninfiltrates_act <- map_dfr(cat2gene, function(cat_gene) {\n  sig %>% dplyr::filter(ens_id %in% cat_gene)\n}, .id=\"category\") %>% \n  arrange(category) %>%\n  left_join(dplyr::select(infiltrates_go, category, term), by=\"category\") %>%\n  dplyr::rename(GOID = category) %>%\n  distinct(gene_name, .keep_all=TRUE) %>%\n  dplyr::rename(gene_id = gencode_id) %>%\n  #arrange(gene_name) %>%\n  dplyr::mutate(category = case_when(\n    str_detect(term, \"T cell\") ~ \"T cell migration / activation\",\n    str_detect(term, \"humoral|complement\") ~ \"B cell mediated / humoral immune response\",\n    str_detect(term, \"adaptive\") ~ \"adaptive immune response (IG domains)\"\n  )) %>% \n  arrange(category, gene_name)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-longitudinal-study","chapter":"8 Immune cell infiltrates signature","heading":"8.2.1 Heatmap: Longitudinal study","text":"employed heatmap visualize trend increased expression levels 95 immune signature genes previously identified associated enriched T/B IG Gene Ontology (GO) terms. order samples heatmap arranged Control, Mild, Moderate, IG-High, High, Muscle-low.\nFigure 8.2: Heatmap demonstrating increased expression trend 95 previously identifed T/B IG domain related genes affected muscle. Color presented row-wised z-score expression levels.\n","code":"\ncluster_color <- c(Control=\"#ff7f00\", \n                    Mild=\"#a65628\", \n                    Moderate=\"#f781bf\", \n                    `IG-High`=\"#984ea3\", High=\"#e41a1c\", \n                   `Muscle-Low`=\"#377eb8\")\ncategory_color <- wes_palette(\"Darjeeling2\", n=4)[c(1,3,4)]\nnames(category_color) <- levels(factor(infiltrates_act$category))\ncol <- c(\"#ccece6\", \"#006d2c\")\nstir_pal <- c(\"STIR+\" = \"#006d2c\", \"STIR-\" = \"#ccece6\")\ncomplement_pal = c(\"3\" = \"#006d2c\", \"2\" = \"#66c2a4\", \"1\" = \"#ccece6\")\n# column annotation: class, fat fraction, STIR rating, and histophatology\n\nannotation_col <- colData(longitudinal_dds) %>% as.data.frame() %>%\n  dplyr::select(cluster, fat_fraction, STIR_status, \n                #STIR_rating,\n                Pathology.Score) %>%\n  dplyr::rename(class=cluster, `STIR+/-` = STIR_status,\n                `fat fraction`=fat_fraction,\n                `histopathology` = Pathology.Score) %>%\n  dplyr::mutate(`STIR+/-` = factor(`STIR+/-`))\n# column annotation color\nann_cor <-  list(class = cluster_color, category = category_color,\n                 `STIR+/-` = stir_pal,\n                 `fat fraction` = col, \n                 `histopathology` = col)\nmarkers_heatmp_group_by_types_class(markers = infiltrates_act, \n                                    dds = longitudinal_dds, \n                                    factor = \"cluster\", \n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor, \n                                    annotation_legend=TRUE)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-bilateral-study","chapter":"8 Immune cell infiltrates signature","heading":"8.2.2 Heatmap: bilateral study","text":"code chunk generates heatmap depicting expression levels 95 immune signature genes bilateral samples. Noted samples ordered based classification Control-like Moderate+, determined ML-based classification, Muscle-Low based low expression levels muscle markers.","code":"\nannotation_col <- comprehensive_df %>% \n  drop_na(class) %>%\n  dplyr::select(sample_id, class, Fat_Infilt_Percent, STIR_status,\n                `Cumulative Score`, `Complement Scoring`) %>%\n  dplyr::rename(`fat percent` = Fat_Infilt_Percent, \n                `STIR+/-` = STIR_status,\n                `histopathology` = `Cumulative Score`) %>%\n  column_to_rownames(var=\"sample_id\") %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`, \n                                              levels=c(\"3\", \"2\", \"1\")))\n                \nclass_color <- c(`Control-like`=\"#a65628\", \n                 `Moderate+`=\"#984ea3\", \n                 `Muscle-Low`=\"#377eb8\")\nann_cor <- list(class = class_color, category = category_color,\n                `fat percent` = col, \n                `STIR+/-` = stir_pal,\n                `histopathology` = col, \n                `Complement Scoring` = complement_pal)\n\nmarkers <- infiltrates_act %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id),\n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id) %>%\n  drop_na(gene_id)\n\nmarkers_heatmp_group_by_types_class(markers = markers, \n                                    dds = bilat_dds, \n                                    factor = \"class\", \n                                    annotation_legend=TRUE,\n                                    annotation_col = annotation_col,\n                                    border_color = \"transparent\",\n                                    ann_cor = ann_cor)"},{"path":"immune-cell-infiltrates.html","id":"immune-cell-infiltrate-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.3 Immune cell infiltrate signature","text":"Using generic cell-type marker dataset immune response silico (IRIS) (Abbas 2009) longitudinal cohort, detected 63 immune cell markers whose expression levels significantly elevated affected muscles. additional significant immunity-related markers, including cytokine receptors B cells (IL-4R, IL-21R), STAT6, Leukocyte immunoglobulin-like receptor B family (LILRB4, LILRB5), T cell surface antigens (CD2 CD4), T B cell interaction migration (CCL19), STAT6, demonstrated immune cell infiltrate signatures longitudinal bilateral samples.Code chunk identified 63 immune cell markers subset IRIS database (Abbas 2009).","code":"\nlibrary(PLIER)\ndata(bloodCellMarkersIRISDMAP)\n# about 860 markers\nblood_iris <- as.data.frame(bloodCellMarkersIRISDMAP) %>%\n  rownames_to_column(var=\"gene_name\") %>%\n  dplyr::select(gene_name, starts_with(\"IRIS\")) %>%\n  dplyr::filter(rowSums(across(where(is.numeric))) > 0) \n\n# 63 are DE in High, longitudinal cohort\nsig_blood_iris <- high_sig %>%\n  inner_join(blood_iris, by=\"gene_name\") \ncategory <- names(sig_blood_iris)[4:ncol(sig_blood_iris)]\nsig_blood_iris$category <- \n  apply(sig_blood_iris[, 4:ncol(sig_blood_iris)], 1, \n        function(x) {\n    tmp <- if_else(unlist(as.vector(x)) == 1, TRUE, FALSE)\n    return(category[tmp][1])\n       })\n\nsig_blood_iris  <- sig_blood_iris %>%\n  dplyr::select(gene_name, gencode_id, ens_id, category) %>%\n  dplyr::rename(gene_id = gencode_id) %>%\n  dplyr::mutate(category = str_replace(category, \"IRIS_\", \"\")) %>%\n  dplyr::mutate(category = str_replace(category, \"\\\\-.*\", \"\")) %>%\n  arrange(category, gene_name) %>%\n  dplyr::mutate(category = factor(category, \n                                  levels = c(\"Bcell\", \"CD4Tcell\", \"CD8Tcell\",\n                                             \"DendriticCell\",\n                                             \"Monocyte\", \"Neutrophil\",\n                                             \"NKcell\", \"PlasmaCell\")))\n\n# modification: do not consider those \"other\" markers\n# add others: IL-4R, IL-21R, LILRB4, LILRB5, CD2, CD4, CCL19\n#others <- data.frame(gene_name = c(\"IL4R\", \"IL21R\", \"LILRB4\",\n#                                   \"LILRB5\",\n#                                   \"CD2\", \"CD4\", \"CCL19\", \"STAT6\")) %>%\n#  left_join(anno_ens88, by=\"gene_name\") %>% \n#  dplyr::rename(gene_id = ens88_id) %>%\n#  add_column(category=\"Others\") %>%\n#  arrange(gene_name)"},{"path":"immune-cell-infiltrates.html","id":"heamap-the-longitudinal-study","chapter":"8 Immune cell infiltrates signature","heading":"8.3.1 Heamap: the longitudinal study","text":"following heatmap illustrates tendency higher expression levels muscles affected.\nFigure 8.3: Heapmap demonstrating expression levels (row-wise z-score log10(TPM++1) longitudinal study.\n","code":"\ncluster_color <- c(Control=\"#ff7f00\", \n                    Mild=\"#a65628\", \n                    Moderate=\"#f781bf\", \n                    `IG-High`=\"#984ea3\", High=\"#e41a1c\", \n                   `Muscle-Low`=\"#377eb8\")\n\n\nannotation_col <- colData(longitudinal_dds) %>% as.data.frame() %>%\n  dplyr::select(cluster, fat_fraction, STIR_status, \n                Pathology.Score) %>%\n  dplyr::rename(class=cluster, \n                `fat fraction`=fat_fraction,\n                `STIR+/-` = STIR_status,\n                `histopathology` = Pathology.Score) %>%\n  dplyr::mutate(`STIR+/-` = factor(`STIR+/-`))\n\ncategory_color <- wes_palette(\"Darjeeling1\", n=8, typ=\"continuous\")[1:8]\nnames(category_color) <- levels(sig_blood_iris$category)\n\nann_cor <-  list(class = cluster_color, \n                 category = category_color,\n                 `fat fraction` = col, \n                 `STIR+/-` = stir_pal,\n                 `histopathology` = col)\n# heatmap\nmarkers_heatmp_group_by_types_class(markers = sig_blood_iris, \n                                    dds = longitudinal_dds, \n                                    factor = \"cluster\", \n                                    border_color = \"transparent\",\n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-bilateral-study-1","chapter":"8 Immune cell infiltrates signature","heading":"8.3.2 Heatmap: Bilateral study","text":"heatmap bilateral study incorporates complement scoring.","code":"\nannotation_col <- comprehensive_df %>% \n  drop_na(class) %>%\n  dplyr::select(sample_id, class, Fat_Infilt_Percent, STIR_status,\n                `Cumulative Score`, `Complement Scoring`) %>%\n  dplyr::rename(`fat percent` = Fat_Infilt_Percent, \n                `STIR+/-` = STIR_status,\n                `histopathology` = `Cumulative Score`) %>%\n  column_to_rownames(var=\"sample_id\") %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`))\n\nclass_color <- c(`Control-like`=\"#a65628\", \n                    `Moderate+`=\"#984ea3\", \n                    `Muscle-Low`=\"#377eb8\")\nann_cor <- list(class = class_color, category = category_color,\n                `fat percent` = col, \n                `STIR+/-` = stir_pal,\n                `histopathology` = col, \n                `Complement Scoring` = complement_pal)\n\n# update sig_blood_iris gene_id to gencode35_id\ntmp <- sig_blood_iris %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id), \n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id)\n\nmarkers_heatmp_group_by_types_class(markers = tmp,\n                                    dds = bilat_dds, \n                                    factor = \"class\", \n                                    border_color = \"transparent\",\n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor )"},{"path":"immune-cell-infiltrates.html","id":"de-immune-marker-in-the-bilat-corhort","chapter":"8 Immune cell infiltrates signature","heading":"8.3.3 DE immune marker in the Bilat corhort","text":"compared Control-like Moderate+ samples Bilat cohort determine immune cell-type genes IRIS dataset differentially expressed.\nTable 8.2: 44 IRIS immune markers significently expressed Modereate+ samples relative control-like samples.\n","code":"\nsub_dds <- bilat_dds[, bilat_dds$class %in% c(\"Control-like\", \"Moderate+\")]\nsub_dds$class <- factor(sub_dds$class)\ndesign(sub_dds) <- ~ class\nsub_dds <- DESeq(sub_dds)\nimmune_signature_gene <- sig_blood_iris %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id), \n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id)\n\nres <- results(sub_dds, lfcThreshold = 0.5) %>% \n  as.data.frame() %>%\n  rownames_to_column(var=\"gene_id\") %>%\n  dplyr::filter(padj < 0.05, log2FoldChange > 0) %>%\n  inner_join(immune_signature_gene, by=\"gene_id\")\n\nres %>%\n  dplyr::select(gene_id, gene_name, log2FoldChange, category) %>%\n  kbl(caption='44 IRIS immune markers that are significently expressed in Modereate+ samples relative to the control-like samples.') %>%\n  kable_styling()"},{"path":"immune-cell-infiltrates.html","id":"complement-scoring-vs.-immune-cell-infiltrates-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.4 Complement scoring vs. immune cell infiltrates signature","text":"earlier mentioned 63 immune cell markers contribute characterizing signature immune cell infiltration. following code calculates Spearman correlation coefficient complement scoring immune cell signature (average \\(\\log_{10}\\)TPM 63 immune cell markers), yields value 0.456.\nFigure 8.4: Dotplot immune cell infiltrates signature (presented average TPM) groups complement scoring 1, 2, 3.\n","code":"\ntpm <- assays(bilat_dds[immune_signature_gene$gene_id])[[\"TPM\"]]\n\nsignature <- colMeans(log10(tpm+1)) %>% as.data.frame() %>%\n  rownames_to_column(var=\"sample_id\") \nnames(signature)[2] <- \"avg_tpm\"\n\ntmp_df <- comprehensive_df %>% \n  dplyr::select(sample_id, `Complement Scoring`, `STIR_status`,\n                `STIR_RATING`) %>%\n  left_join(signature, by=\"sample_id\") %>%\n  drop_na(`Complement Scoring`, `avg_tpm`) \n  \n# Spearman correlation between complement and immune infiltrate signatures\ntmp_df %>% \n  drop_na(`Complement Scoring`, `avg_tpm`) %>%\n  dplyr::select(`Complement Scoring`, `avg_tpm`) %>%\n  corrr::correlate(., method=\"spearman\")\n#> # A tibble: 2 × 3\n#>   term               `Complement Scoring` avg_tpm\n#>   <chr>                             <dbl>   <dbl>\n#> 1 Complement Scoring               NA       0.454\n#> 2 avg_tpm                           0.454  NA\ntmp_df %>% \n  drop_na(`Complement Scoring`, `avg_tpm`) %>%\n  dplyr::mutate(`Complement Scoring`= factor(`Complement Scoring`)) %>%\n  ggplot(aes(x=`Complement Scoring`, y=avg_tpm)) +\n    geom_boxplot(width=0.5, outlier.shape = NA) +\n    geom_dotplot(aes(fill=`Complement Scoring`),\n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE, alpha=0.8,\n                 stackratio=1.5, dotsize=1.5) +\n    theme_minimal()"},{"path":"immune-cell-infiltrates.html","id":"stir-status-vs.-immune-cell-infiltrates-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.5 STIR status vs. immune cell infiltrates signature","text":"elevated immune cell signatures associated STIR status: Wilcox test p-value = \\(2.9e-6\\).","code":"\ntmp_df %>% \n  drop_na(`STIR_status`, `avg_tpm`) %>%\n  ggplot(aes(x=`STIR_status`, y=avg_tpm)) +\n    geom_boxplot(width=0.5, outlier.shape = NA) +\n    geom_dotplot(aes(fill=`STIR_status`),\n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE,\n                 stackratio=1.5, dotsize=1.5, alpha=0.7) +\n    theme_minimal()\n\n# wilcox.test\nx <- tmp_df %>% \n  drop_na(`STIR_status`, `avg_tpm`) %>%\n  dplyr::select(sample_id, `STIR_status`, `avg_tpm`) %>%\n  spread(key=STIR_status, value=avg_tpm) \nwilcox.test(x$`STIR-`, x$`STIR+` )\n#> \n#>  Wilcoxon rank sum exact test\n#> \n#> data:  x$`STIR-` and x$`STIR+`\n#> W = 134, p-value = 2.902e-06\n#> alternative hypothesis: true location shift is not equal to 0"},{"path":"immune-cell-infiltrates.html","id":"bilateral-comparison-analysis-for-the-immune-cell-infiltrate-markers","chapter":"8 Immune cell infiltrates signature","heading":"8.6 Bilateral comparison analysis for the immune cell infiltrate markers","text":"","code":""},{"path":"immune-cell-infiltrates.html","id":"significant-immune-cell-markers","chapter":"8 Immune cell infiltrates signature","heading":"8.6.1 63 significant immune cell markers","text":"preceding section, uncovered distinctive signature immune cell infiltrates defined 63 immune cell markers within longitudinal study. Now, calculate expression correlation markers left right muscles bilateral study.code displays tools compute correlation L R muscles immune cell infiltrate markers.Display correlation average TPM grouped ML-based classes.\nTable 8.3: Sixty-three significant immune cell markers correlation analysis left right biopsied muscles. Peason correlation coefficients compuated using expression levels presented Log10(TPM+1).\nScatter plot","code":"\ncol_data <- colData(bilat_dds) %>% as.data.frame()\n# convert gene_id to Gencode35\nmarkers <- sig_blood_iris %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id), \n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id)\n\n.markers_bilateral_correlation <- function(markers, dds) {\n  tpm <- assays(dds[markers$gene_id])[[\"TPM\"]] %>% t(.) %>% \n      as.data.frame() %>%\n      rownames_to_column(var=\"sample_id\") %>%\n      gather(key=gene_id, value=TPM, -sample_id) %>% \n      left_join(dplyr::select(col_data, sample_id, location,\n                              Subject), by=\"sample_id\") %>%\n      dplyr::select(-sample_id) %>%\n      spread(key=location, value=TPM) %>% \n      drop_na(L, R) \n  gene_cor <- tpm %>% \n    dplyr::mutate(L_log = log10(L+1), R_log=log10(R+1)) %>%\n    group_by(gene_id) %>% \n    summarise(Pearson_by_TPM=cor(L, R), \n              Pearson_by_log10TPM = cor(L_log, R_log)) %>%\n    dplyr::left_join(markers, by=\"gene_id\") %>%\n    arrange(desc(Pearson_by_log10TPM)) %>%\n    dplyr::relocate(gene_name, .after=gene_id)\n  \n  return(gene_cor)\n}\n\n.avg_TPM_by_class <- function(markers, dds) {\n   avg_TPM <- map_dfc(levels(dds$class), function(x) {\n     assays(dds[markers$gene_id])[[\"TPM\"]][, dds$class == x] %>% \n       rowMeans(.) \n   }) %>%\n     tibble::add_column(gene_id = markers$gene_id) %>%\n     dplyr::rename_with(~paste0(levels(dds$class), \" avg TPM\"), \n                        starts_with(\"...\"))\n}\ngene_cor_63 <- .markers_bilateral_correlation(markers=markers,\n                                           dds=bilat_dds) %>%\n  dplyr::left_join(.avg_TPM_by_class(markers = markers, dds=bilat_dds), \n                   by=\"gene_id\") %>%\n  arrange(category) \n\ngene_cor_63 %>% \n  dplyr::select(-Pearson_by_TPM) %>%\n  kbl(caption=\"Sixty-three significant immune cell markers correlation analysis between left and right biopsied muscles. The Peason correlation coefficients are compuated using the expression levels presented by Log10(TPM+1).\") %>%\n  kable_styling()\nx <- gene_cor_63 %>%\n  dplyr::filter(category %in% c(\"Bcell\", \"PlasmaCell\"))\n\ntpm <- assays(bilat_dds[x$gene_id])[[\"TPM\"]] %>% t(.) %>% \n      as.data.frame() %>%\n      rownames_to_column(var=\"sample_id\") %>%\n      gather(key=gene_id, value=TPM, -sample_id) %>% \n      left_join(dplyr::select(col_data, sample_id, location,\n                              Subject), by=\"sample_id\") %>%\n      dplyr::select(-sample_id) %>%\n      spread(key=location, value=TPM) %>% \n      drop_na(L, R) %>%\n      dplyr::left_join(x, by=\"gene_id\") %>%\n      dplyr::mutate(log10L = log10(L+1)) %>%\n      dplyr::mutate(log10R = log10(R+1))\n\nggplot(tpm, aes(x=log10L, y=log10R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, nrow = 2, scales=\"free\") +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"L (log10(TPM+1))\", y=\"R (log10(TPM+1))\")\nggsave(file.path(pkg_dir, \"figures\", \"immune-infiltration\",\n                 \"bilat-sig-Bcell-Plasma-in-Longitudinal.pdf\"),\n       width=6, height=3)"},{"path":"immune-cell-infiltrates.html","id":"top-loading-variables-by-the-plier-package","chapter":"8 Immune cell infiltrates signature","heading":"8.6.2 Top loading variables by the PLIER package","text":"previou chapter, employed PLIER package estimate contributions immune cell types FSHD transcriptome. top Z-loading variables play crucial role determining relative proportions immune cell type contributions. , list top loading variables bilateral correlation L R biopsies. Please note may necessarily exhibit strong expression levels.\nTable 8.4: Identified PLIER package, listed 18 top Z markers contributed cell type proportions bilateral study. Peason correlation coefficients compuated using expression levels presented Log10(TPM+1).\nCheck scatter plot: TPM x y coordinates displayed log10 scale.","code":"\nload(file.path(pkg_dir, \"data\", \"plier_topZ_markers.rda\"))\nmarkers <- plier_topZ_markers$bilat_markers\ngene_cor_topZ <- .markers_bilateral_correlation(markers=markers,\n                                           dds=bilat_dds) %>%\n    dplyr::left_join(.avg_TPM_by_class(markers = markers, dds=bilat_dds), \n                   by=\"gene_id\")\n\ngene_cor_topZ %>% \n  dplyr::select(-Pearson_by_TPM) %>%\n  kbl(caption=\"Identified by the PLIER package, listed below are the 18 top Z markers contributed to cell type proportions in bilateral study. The Peason correlation coefficients are compuated using the expression levels presented by Log10(TPM+1).\") %>%\n  kable_styling()\nwrite_xlsx(list(`63 immune-cell-markers`= gene_cor_63,\n                `23 top loading variables (PLIER)`=gene_cor_topZ),\n           path=file.path(pkg_dir, \"stats\",\n          \"Bilateral-correlation-63-immune-cell-markers-and-23-topZ-by-PLIER.xlsx\")) "},{"path":"plier.html","id":"plier","chapter":"9 Immune cell type proportion by PLIER","heading":"9 Immune cell type proportion by PLIER","text":"PLIER package1 provides alternative examine immune cell infiltration, without involving GO differential analysis investigated @ref{immune-cell-infiltrates}. PLIER employes eigenvalue-like decomposition estimate immune cell contribution FSHD transcriptome. top loading variables resulting eigenvalue-like latent variables (LV) potential indicators immune infiltrate signatures. utilized PLIER algorithm analyzing longitudinal bilateral samples. expression levels influential loading variables depicted chapter.ultitized IRIS dataset2 PLIER baseline immnune cell types markers.","code":"\n# define parameters and load datasets: bilat_dds and longitudinal_dds\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\", \"immune-infiltration\")\nsource(file.path(pkg_dir, \"scripts\", \"load_variables_and_datasets.R\"))\n# returns bilat_dds and longitudinal_dds\nlibrary(PLIER)\ndata(bloodCellMarkersIRISDMAP)\n# Extract the IRIS dataset from `bloodCellMarkersIRISDMAP`\nblood_iris <- as.data.frame(bloodCellMarkersIRISDMAP) %>%\n  rownames_to_column(var=\"gene_name\") %>%\n  dplyr::select(gene_name, starts_with(\"IRIS\")) %>%\n  dplyr::filter(rowSums(across(where(is.numeric))) > 0) \n\nbilat_coldata <- colData(bilat_dds) %>% as.data.frame()\nlongi_coldata <- colData(longitudinal_dds) %>% as.data.frame()"},{"path":"plier.html","id":"plier-longitudinal-samples","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1 PLIER Longitudinal samples","text":"section, applied PLIER estimate immune cell type proportion longitudiname samples.","code":""},{"path":"plier.html","id":"steps","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.1 Steps","text":"run PLIER, priorMat includes IRIS dataset (blood_iris)Select top LVs AUC > 0.8 FDR < 0.05Verify top LVs elevated proportion FSHD filter false positivesIdentify top loading varibles associated selected top LVs\nFigure 9.1: Significant LVs AUC > 0.8 FDR < 0.05.\nDisplayed visualization eight latent variables (LVs) potentially capture immune cell infiltrate signatures affected muscles. important note may false positives among .\nFigure 9.2: cell type proportion significant LVs\n","code":"\n# use RPKM as suggested by the PLIER authers; TPM yields similar results\nlongitudinal_rpkm <- assays(longitudinal_dds)[[\"RPKM\"]]\nlongitudinal_tpm <- assays(longitudinal_dds)[[\"TPM\"]]\nrownames(longitudinal_rpkm) <- \n  rownames(longitudinal_tpm) <- rowData(longitudinal_dds)$gene_name\n\npriorMat <- \n  bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]] # remove col \"gene_name\" \nplier_longi <- PLIER(longitudinal_rpkm, # or longitudinal_rpkm\n                     priorMat=priorMat,\n                     scale = TRUE)\n#> [1] 24.90828\n#> [1] \"L2 is set to 24.908276840206\"\n#> [1] \"L1 is set to 12.454138420103\"\nmat_u <- plotU(plier_longi, auc.cutoff = 0.70, fdr.cutoff = 0.05, top = 3)\nsig_sets <- names(mat_u$iirow)[mat_u$iirow]\n# proportion boxplots of all the sig LVs \nsig_proportion_longi <- plier_longi$B[mat_u$iicol, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(longi_coldata, sample_id, cluster), by=\"sample_id\")\n  \noutliers <- sig_proportion_longi %>% dplyr::filter(proportion > 3)\n\nsig_proportion_longi %>%\n    dplyr::filter(proportion < 3) %>%\nggplot(aes(x=cluster, y=proportion)) +\n  geom_boxplot(width=0.3, outlier.shape = NA) +\n  geom_jitter(width=0.3, size=0.3, color=\"grey50\") +\n  facet_wrap(~LV_index, scale=\"free_y\", ncol=3) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        axis.title.x = element_blank(),\n        panel.grid.major = element_blank(), panel.grid.minor = element_blank())"},{"path":"plier.html","id":"five-best-lvs-showing-immune-cell-infiltrat-signatures","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2 Five best LVs showing immune cell infiltrat signatures","text":"Based information extracted U, top Z, B matrices, can concluded LV30, LV4, LV5, LV12, LV46 reliable latent variables indicating heightened immune cell infiltration. Consequently, generated plots publication showcasing following latent variables: LV30 (CD4 Tcell-Th1), LV4 LV12 (Neutrophil resting), LV40 (IgG IgA B memory cell), LV5 (dendritic cell).NOTE: hide code chuck tidious, reader cand find original Rmd files.","code":""},{"path":"plier.html","id":"lv30iris_cd4tcell-th1-restimulated48hour","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.1 LV30,IRIS_CD4Tcell-Th1-restimulated48hour","text":"","code":""},{"path":"plier.html","id":"lv4iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.2 LV4,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv12iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.3 LV12,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv5iris_dendriticcell-lpsstimulated","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.4 LV5,IRIS_DendriticCell-LPSstimulated","text":"","code":""},{"path":"plier.html","id":"lv40iris_bcell-memory_igg_iga","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.5 LV40,IRIS_Bcell-Memory_IgG_IgA","text":"","code":""},{"path":"plier.html","id":"top-loading-variables-z-of-selected-lvs","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.3 Top loading variables Z of selected LVs","text":"\nTable 9.1: five reliable LVs number top loading variables associated LVs.\ncode chunk tidied top loading variables attached annotation.","code":"\nLV_index<- c(4, 5, 12, 30, 40)\nnames(LV_index) <- rownames(plier_longi$B[LV_index, ])\npriorMat <- bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]]\n\ntop = 15\nsub_iris <- blood_iris %>% \n  dplyr::select(gene_name, `IRIS_CD4Tcell-Th1-restimulated48hour`,\n                `IRIS_CD4Tcell-Th2-restimulated48hour`, \n                `IRIS_DendriticCell-Control`,\n                `IRIS_DendriticCell-LPSstimulated`,\n                `IRIS_CD4Tcell-Th2-restimulated12hour`,\n                `IRIS_Bcell-Memory_IgG_IgA`,\n                `IRIS_Neutrophil-Resting`)\n\nlongi_topZ <- map_dfr(LV_index, function(index) {\n  plier_longi$Z[, index, drop=FALSE] %>% as.data.frame() %>%\n    arrange(-V1) %>% top_n(top) %>%\n    dplyr::select(-V1) %>%\n    #dplyr::rename_with(~paste0(\"LV\", as.character(index))) %>%\n    rownames_to_column(var=\"gene_name\") %>%\n    left_join(sub_iris, by=\"gene_name\") %>% # turn NA to 0\n    replace(is.na(.), 0) %>%\n    dplyr::mutate(in_markerSet = \n                    if_else(rowSums(across(where(is.numeric))) > 0,\n                                    TRUE, FALSE), .after=gene_name)\n    # which pathway?\n}, .id=\"LV_index\") %>% # append gene_id\n  left_join(anno_ens88, by=\"gene_name\") %>%\n  left_join(dplyr::select(anno_gencode35, gencode35_id, gene_name), \n            by=\"gene_name\")\nlongi_topZ %>% group_by(LV_index) %>% \n  summarize(n=sum(in_markerSet)) %>%\n  knitr::kable(format = \"html\", \n               caption=\"The five most reliable LVs and the number of top loading variables associated with the LVs.\")\nlongi_topZ <- longi_topZ %>%\n  dplyr::mutate(cell_type = str_replace(LV_index, \"[0-9]*,IRIS_\", \"\"))\n\nlongi_markers <- map_dfr(names(LV_index), function(lv) {\n  longi_topZ %>% dplyr::filter(LV_index == lv, in_markerSet) %>%\n    dplyr::select(LV_index, cell_type, ens_id)\n}) %>% dplyr::arrange(cell_type) %>%\n  left_join(dplyr::select(anno_ens88, ens88_id, ens_id, gene_name), \n            by=\"ens_id\") %>%\n  dplyr::rename(gene_id = ens88_id)"},{"path":"plier.html","id":"heatmap-of-top-loading-variables","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.3.1 Heatmap of top loading variables","text":"\nFigure 9.3: Heatmap top loading variables associated five LVs longitudinal samples.\n","code":""},{"path":"plier.html","id":"plier-to-the-bilateral-samples","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2 PLIER to the bilateral samples","text":"applied PLIER bilateral samples matter. cut values LVs : AUC = 0.7 FDR = 0.05","code":"\nbilat_rpkm <- assays(bilat_dds)[[\"RPKM\"]]\nbilat_tpm <- assays(bilat_dds)[[\"TPM\"]]\n\nrownames(bilat_rpkm) <- rownames(bilat_tpm) <- rowData(bilat_dds)$gene_name\nplier_bilat <- PLIER(bilat_rpkm, # or longitudinal_rpkm\n                     priorMat=priorMat,\n                     scale = TRUE)\n#> [1] 29.88863\n#> [1] \"L2 is set to 29.8886299733202\"\n#> [1] \"L1 is set to 14.9443149866601\"\nsave(plier_bilat, file=file.path(pkg_dir, \"data\", \"plier_bliat.rda\"))\nmat_u <- plotU(plier_bilat, auc.cutoff = 0.7, fdr.cutoff = 0.05, top = 3)\nbilat_col_data <- colData(bilat_dds) %>% as.data.frame()\n\n# define sig LV_index: \nLV_index <- c(2, 14, 18, 20, 26, 22)\nnames(LV_index) <- rownames(plier_bilat$B[LV_index, ])\n\n#plier_bilat$B[LV_index, ] %>% as.data.frame() %>%\n#  rownames_to_column(var=\"LV_index\") %>%\n#  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n#  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") %>%\n#  dplyr::filter(proportion >= 3) %>%\n#  knitr::kable(caption=\"Samples with extreme proportions. Remov ed from the #figure below.\")\n\n# boxplot for proportion of potential LVs\nplier_bilat$B[mat_u$iicol, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") %>%\n  dplyr::filter(proportion < 3) %>%\n  ggplot(aes(x=class, y=proportion)) +\n    geom_boxplot(width=0.3, outlier.shape = NA) +\n    geom_jitter(width=0.3, size=0.3) +\n    facet_wrap(~LV_index, scale=\"free_y\", nrow=3) +\n    #labs(title=\"Remove outliers with proportion > 3 \") +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          axis.title.x = element_blank())"},{"path":"plier.html","id":"three-base-lvs-demonstrating-elevated-immune-cell-proportion","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1 Three base LVs demonstrating elevated immune cell proportion","text":"significant LVs show elevated immune cell type contribution FSHD LV2 (Bcell-Memory_IgG_IgA), LV22 (Neutrophil-resting) LV20 (DendriticCell-LPSstimulated). LV18 LV26 elevated proportion moderatedly-affected muscles.","code":"\nbilat_proportion <- plier_bilat$B[LV_index, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") "},{"path":"plier.html","id":"lv2-iris_bcell-memory_igg_iga","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.1 LV2, IRIS_Bcell-Memory_IgG_IgA","text":"","code":""},{"path":"plier.html","id":"lv22iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.2 LV22,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv20iris_dendriticcell-lpsstimulated","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.3 LV20,IRIS_DendriticCell-LPSstimulated","text":"","code":""},{"path":"plier.html","id":"top-loading-variables-z-of-selected-lvs-1","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.4 Top loading variables (Z) of selected LVs","text":"\nTable 9.2: three best LVs number associated makers.\n","code":"\nbilat_LV <- c(2, 20, 22)\nnames(bilat_LV) <- rownames(plier_bilat$B[bilat_LV, ])\npriorMat <- bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]]\n\ntop = 15\nsub_iris <- blood_iris %>% \n  dplyr::select(gene_name, `IRIS_CD4Tcell-Th1-restimulated48hour`,\n                `IRIS_CD4Tcell-Th2-restimulated48hour`, \n                `IRIS_Bcell-Memory_IgG_IgA`, `IRIS_Bcell-naive`,\n                `IRIS_Bcell-naive`, `IRIS_Bcell-Memory_IgM`,\n                `IRIS_Neutrophil-Resting`,\n                `IRIS_DendriticCell-Control`,\n                `IRIS_DendriticCell-LPSstimulated`)\n\nbilat_topZ <- map_dfr(bilat_LV, function(index) {\n  plier_bilat$Z[, index, drop=FALSE] %>% as.data.frame() %>%\n    arrange(-V1) %>% top_n(top) %>%\n    dplyr::select(-V1) %>%\n    #dplyr::rename_with(~paste0(\"LV\", as.character(index))) %>%\n    rownames_to_column(var=\"gene_name\") %>%\n    left_join(sub_iris, by=\"gene_name\") %>% # turn NA to 0\n    replace(is.na(.), 0) %>%\n    dplyr::mutate(in_markerSet = \n                    if_else(rowSums(across(where(is.numeric))) > 0,\n                                    TRUE, FALSE), .after=gene_name)\n}, .id=\"LV_index\") %>% # append gene_id\n  left_join(anno_ens88, by=\"gene_name\") %>%\n  left_join(dplyr::select(anno_gencode35, gencode35_id, gene_name), \n            by=\"gene_name\")\n#top_z <- bilat_topZ\nbilat_topZ %>% group_by(LV_index) %>% \n  summarize(n=sum(in_markerSet)) %>%\n  knitr::kable(caption=\"The three best LVs and the number of associated makers.\")\n#bilat_LV <- c(2, 20, 22)\n#names(bilat_LV) <- rownames(plier_bilat$B[bilat_LV, ])\nbilat_topZ <- bilat_topZ %>%\n    dplyr::mutate(cell_type = str_replace(LV_index, \"[0-9]*,IRIS_\", \"\"))\n\nbilat_markers <-  map_dfr(names(bilat_LV), function(lv) {\n  bilat_topZ %>% dplyr::filter(LV_index == lv, in_markerSet) %>%\n    dplyr::select(LV_index, cell_type, ens_id)\n}) %>% dplyr::arrange(cell_type) %>%\n   left_join(dplyr::select(anno_gencode35, gencode35_id, ens_id, gene_name), \n            by=\"ens_id\") %>%\n    dplyr::rename(gene_id = gencode35_id)\nplier_topZ_markers <- list(bilat_markers=bilat_markers,\n                           longitudinal_markers = longi_markers)\nsave(plier_topZ_markers, file=file.path(pkg_dir, \"data\",\n                                        \"plier_topZ_markers.rda\"))"},{"path":"plier.html","id":"heatmap","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.5 Heatmap","text":"Figure heatmap depicted row-wise z-score \\(\\log_{10} TPM\\) top loading variables associated three LVs.\nFigure 9.4: Heatmap 18 top Z (loading variables) bilateral samples.\n","code":""},{"path":"complement-scoring.html","id":"complement-scoring","chapter":"10 Complement scoring","heading":"10 Complement scoring","text":"complement scoring obtained file /extdata-github/FINAL.Revised.BilatStudy.Path.MACstaining data.FINAL.xlsx. scoring system quantifies MAC staining four levels:Absence MAC staining capillariesSlight level MAC stainingModerate levet MAC stainingProminent level MAC stainingNote bilateral sample identified level 4","code":"\nlibrary(tidyverse)\nlibrary(corrr)\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))"},{"path":"complement-scoring.html","id":"complement-scoring-mca-score-and-basket-scores","chapter":"10 Complement scoring","heading":"10.1 Complement scoring (MCA score) and basket scores","text":", investigated relationship complement scoring basket scores.Result:complement scoring moderate correlation basket scores. code chunk calculates Spearman correlation coefficients.ANOVA p-values reveals significant difference mean values basket score three levels complement scoring.","code":""},{"path":"complement-scoring.html","id":"correlation-with-basekt-scores","chapter":"10 Complement scoring","heading":"10.1.1 Correlation with basekt scores","text":"complement scoring moderate correlation basket scores. code chunk calculates Spearman correlation coefficients.","code":"\n# get complement scoring and basekt scores from  `comprehensive_df`\ndf <- comprehensive_df %>% \n  drop_na(`Complement Scoring`, `IG-logSum`) %>%\n  dplyr::select(`Complement Scoring`, `DUX4-M6-logSum`,\n                `IG-logSum`, `Complement-logSum`,\n                `Inflamm-logSum`, `ECM-logSum`) \n  \n  #dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`)) \ndf %>%\n  corrr::correlate(., method=\"spearman\") %>%\n  dplyr::select(term, `Complement Scoring`) %>%\n  dplyr::filter(term != \"Complement Scoring\") %>%\n  dplyr::rename(basket = term) %>%\n  dplyr::mutate(basket = str_replace(basket, \"-logSum\", \"\")) \n#> # A tibble: 5 × 2\n#>   basket     `Complement Scoring`\n#>   <chr>                     <dbl>\n#> 1 DUX4-M6                   0.542\n#> 2 IG                        0.509\n#> 3 Complement                0.453\n#> 4 Inflamm                   0.452\n#> 5 ECM                       0.452"},{"path":"complement-scoring.html","id":"visualize-the-relationship-with-basket-scores","chapter":"10 Complement scoring","heading":"10.1.2 Visualize the relationship with basket scores","text":"Display dotplot color:ANOVA p-values mean value differences basket scores among three leves complemnt scoring.","code":"\n# tidy up the data.frame for visualization\ntidy_df <- df %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`)) %>%\n  tidyr::gather(key=`basket`, value=`basket score`, \n                -`Complement Scoring`) %>%\n  dplyr::mutate(basket = str_replace(basket, \"-logSum\", \"\")) %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`),\n                basket = factor(basket, \n                                levels=c(\"DUX4-M6\", \"ECM\", \"Inflamm\",\n                                         \"Complement\", \"IG\"))) \nggplot(tidy_df, aes(x=`Complement Scoring`, y=`basket score`)) +\n    geom_dotplot(aes(fill=`Complement Scoring`,\n                     color=`Complement Scoring`), \n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE,\n                 stackratio=1.5, dotsize=1.5) +\n    stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), \n                 geom=\"pointrange\", color=\"red\", fill=\"red\", shape=23,\n                 size=0.5, alpha=0.5) +\n    facet_wrap(~basket, scales=\"free_y\") +\n    scale_fill_brewer(palette=\"Blues\") +\n    scale_color_brewer(palette=\"Blues\") +\n    theme_classic() + labs(x=\"complement scoring\")\ntm <- tidy_df %>% group_by(basket) %>% \n  dplyr::do(aov = summary(aov(`basket score` ~ `Complement Scoring`, \n                             data = .)))\nnames(tm$aov) <- levels(tidy_df$basket)\ntm$aov\n#> $`DUX4-M6`\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  46.78  23.390   11.13 8.31e-05 ***\n#> Residuals            57 119.80   2.102                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $ECM\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  74.48   37.24   11.07 8.66e-05 ***\n#> Residuals            57 191.70    3.36                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $Inflamm\n#>                      Df Sum Sq Mean Sq F value Pr(>F)    \n#> `Complement Scoring`  2  51.29  25.646   9.385  3e-04 ***\n#> Residuals            57 155.77   2.733                   \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $Complement\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  78.44   39.22   9.423 0.000291 ***\n#> Residuals            57 237.23    4.16                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $IG\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  295.5  147.77   17.56 1.14e-06 ***\n#> Residuals            57  479.6    8.41                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"complement-scoring.html","id":"complement-scoring-correlation-between-left-and-right-biopsies","chapter":"10 Complement scoring","heading":"10.2 Complement Scoring correlation between left and right biopsies","text":"34 subject 29 complement scoring left right biopsies. aim evalulate correlation left right.","code":"\ndf <- comprehensive_df %>%\n  dplyr::select(`Subject`, `Complement Scoring`, `location`) %>%\n  tidyr::spread(key=location, `Complement Scoring`) %>%\n  drop_na(`L`, `R`) \n  \n# pair-wise pearson correlation\ncor(df$L, df$R)\n#> [1] 0.1953095"},{"path":"complement-scoring.html","id":"complement-scoring-vs.-stir-status","chapter":"10 Complement scoring","heading":"10.3 Complement Scoring vs. STIR status","text":"average complement scoring STIR- STIR+ samples 1.38 (+/-0.63SD) 2.08 (+/-0.929SD), respectively.","code":"\ncomprehensive_df %>% \n  drop_na(`Complement Scoring`, `STIR_status`) %>%\n  group_by(STIR_status) %>%\n  summarize(mean=mean(`Complement Scoring`),\n            sd = sd(`Complement Scoring`)) %>%\n  ggplot(aes(x=STIR_status, y=`mean`)) + \n  geom_bar(stat=\"identity\",fill=\"skyblue\", alpha=0.7, \n           position=position_dodge()) +\n  geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,\n                 position=position_dodge(.9), \n                colour=\"orange\", alpha=0.9, linewidth=1.5) +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank()) +\n  labs(y=\"Complement Scoring\", x=\"\")\nggsave(file.path(pkg_dir, \"manuscript\", \"figures\",\n                 \"ComplementScoring-vs-STIR-status.pdf\"),\n       width=2, height=3)  "},{"path":"complement-scoring.html","id":"complement-scoring-vs.-class","chapter":"10 Complement scoring","heading":"10.4 Complement scoring vs. class","text":"average complement scoring Control-like, Moderate+, Muscle-Low samples 1.15 (+- 0.376SD), 1.8 (+/- 0.894SD), 1, respectively.","code":"\ncomprehensive_df %>% \n  drop_na(`Complement Scoring`, `class`) %>%\n  dplyr::select(`Complement Scoring`, `class`) %>%\n  group_by(class) %>%\n  summarize(mean=mean(`Complement Scoring`),\n            sd = sd(`Complement Scoring`)) %>%\n  ggplot(aes(x=class, y=`mean`)) + \n  geom_bar(stat=\"identity\",fill=\"skyblue\", alpha=0.7, \n           position=position_dodge()) +\n  geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,\n                 position=position_dodge(.9), \n                colour=\"orange\", alpha=0.9, linewidth=1.5) +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank()) +\n  labs(y=\"Complement Scoring\", x=\"\")\nggsave(file.path(pkg_dir, \"figures\", \"ComplementScoring-vs-FSHD-class.pdf\"),\n       width=3, height=3)"},{"path":"dna-methylation.html","id":"dna-methylation","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11 DNA methylation of FSHD D4Z4 allele","text":"conducted bisulfite sequencing bilateral TA muscle biopsies 34 subjects. chapter, present following:CpG methylation percentages subjects 4qA161S 4qA161L alleles.correlation methylation levels left right TA biopsies.association methylation STIR status.Correlations variables, including muscle strength, disease molecular signatures, whole muscle fat percentage, clinical severity score (CSS).Note: excluded subject 01-0022 analysis due duplication D4Z4 repeat regions.","code":""},{"path":"dna-methylation.html","id":"loading-and-cleaning-data","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11.1 Loading and cleaning data","text":"load two data sets data directory:\n1. comprehensive_df.rda: clinical MRI characteristic data\n2. bs_methyl.rda: DNA methylation dataTidy bisulfite sequencing data.\nTable 11.1: Tidy table CpG methylation percentage allele.\n","code":"\nlibrary(tidyverse)\nlibrary(corrr)\nlibrary(kableExtra)\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nload(file.path(pkg_dir, \"data\", \"bs_methyl.rda\"))\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\ncomprehensive_df <- comprehensive_df %>%\n  dplyr::rename_with(~str_remove(., '-logSum'), ends_with('-logSum'))\nbss <- bs_methyl %>% \n  dplyr::mutate(`4A161S` = if_else(grepl(\"4A161S\", `haplotype_chr4`),\n                                   TRUE, FALSE)) %>% \n  dplyr::mutate(`4A161L` = if_else(grepl(\"4A161L\", `haplotype_chr4`),\n                                   TRUE, FALSE)) %>%\n  dplyr::filter(! Subject == \"01-0022\") %>%\n  dplyr::mutate(allele=if_else(`use BSSL`, \"4qA161L\", \"4qA161S\")) %>%\n  dplyr::mutate(allele=factor(allele, levels=c(\"4qA161S\", \"4qA161L\")))"},{"path":"dna-methylation.html","id":"qa161s-and-4qa161l-allele","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11.2 4qA161S and 4qA161L allele","text":"Mean values 4qA161S 4qA161L allele:\nFigure 11.1: CpG methylation percentage subjects 4qA161S 4qA161L allele.\n","code":"\nbss %>%\n  group_by(`use BSSL`) %>%\n  summarise(mean=mean(`BSS Value`),  min=min(`BSS Value`), max=max(`BSS Value`))\n#> # A tibble: 2 × 4\n#>   `use BSSL`  mean   min   max\n#>   <lgl>      <dbl> <dbl> <dbl>\n#> 1 FALSE       6.96  0     24  \n#> 2 TRUE       16.2   4.76  42.9\n\nbss %>% dplyr::filter(!Subject==\"01-0022\") %>%\n  dplyr::mutate(allele=if_else(`use BSSL`, \"4qA161L\", \"4qA161S\")) %>%\n  dplyr::mutate(allele=factor(allele, levels=c(\"4qA161S\", \"4qA161L\"))) %>%\n  ggplot(aes(x=allele, y=`BSS Value`)) +\n    geom_boxplot(width=0.5, outlier.shape=NA) +\n    geom_jitter(width=0.2, alpha=0.3, size=1, color=\"grey50\") +\n    theme_minimal() +\n    labs(x=\"\", y=\"% methylation\") +\n    theme(axis.text.x = element_text(angle = 25, vjust = 1, hjust=1))"},{"path":"dna-methylation.html","id":"left-and-right-ta-biopsies-correlation","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11.3 Left and right TA biopsies correlation","text":"\nFigure 11.2: Methylation correlation left right TA biopsies: Pearson correlation = 0.84.\n","code":"\nbss_cor <- bss %>% dplyr::select(Subject, location, `BSS Value`) %>%\n  spread(key=location, value=`BSS Value`) %>%\n  dplyr::select(-Subject) %>%\n  corrr::correlate() %>% dplyr::filter(!is.na(L)) %>% pull(L) \n\nbss %>% dplyr::select(Subject, location, `BSS Value`) %>%\n  spread(key=location, value=`BSS Value`) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point() +\n    geom_smooth(method=\"lm\", se=FALSE, linewidth=0.7, color=\"grey75\", alpha=0.3) +\n    annotate(\"text\", x=Inf, y=-Inf, color=\"gray25\",\n             size=3, hjust=1, vjust=-2,\n             label=paste0(\"Pearson=\", format(bss_cor, digit=2))) +\n    theme_minimal() +\n    labs(x=\"L (% methylation)\", y=\"R (% methylation)\")\n#> Warning: Removed 1 rows containing non-finite values\n#> (`stat_smooth()`).\n#> Warning: Removed 1 rows containing missing values\n#> (`geom_point()`).#> Warning: Removed 1 rows containing non-finite values\n#> (`stat_smooth()`).\n#> Warning: Removed 1 rows containing missing values\n#> (`geom_point()`)."},{"path":"dna-methylation.html","id":"methylation-and-stir-status","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11.4 Methylation and STIR status","text":"\nFigure 11.3: methylation levels associated STIR status.\n","code":"\nbss %>% dplyr::select(-Subject) %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>% \n  ggplot(aes(x=STIR_status, y=`BSS Value`)) +\n    geom_boxplot(width=0.5, outlier.shape=NA) +\n    geom_jitter(width=0.3, alpha=0.3, size=1, color=\"grey50\") +\n    facet_wrap(~allele) +\n    theme_bw() +\n    labs(x=\"\", y=\"% methylation\")"},{"path":"dna-methylation.html","id":"methylation-and-other-variables","chapter":"11 DNA methylation of FSHD D4Z4 allele","heading":"11.5 Methylation and other variables","text":"figure demonstrated association CpG methylation variables—whole muscle fat, CSS, muscle strength—mRNA levels disease signatures.\nFigure 11.4: Pearson correlation methylation levels variables including mRNA levels disease signatures, whole muscle fat, CSS, muscle strengh.\n","code":"\ncor_161S <- bss %>% dplyr::select(-Subject) %>%\n  dplyr::filter(`allele`==\"4qA161S\") %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>% \n  dplyr::select(`BSS Value`, `DUX4-M6`, `Foot Dorsiflexors`,\n                `CSS`, `Fat_Infilt_Percent`, `Cumulative Score`) %>%\n  corrr::correlate() %>% \n  select(term, `BSS Value`)\ncor_161L <- bss %>% dplyr::select(-Subject) %>%\n  dplyr::filter(`allele`==\"4qA161L\") %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>% \n  dplyr::select(`BSS Value`, `DUX4-M6`, `Foot Dorsiflexors`,\n                `CSS`, `Fat_Infilt_Percent`, `Cumulative Score`) %>%\n  corrr::correlate() %>% \n  select(term, `BSS Value`) \n\ncor_161S %>% \n  full_join(cor_161L, by=\"term\", suffix=c(\"4qA161S\", \"4qA161L\")) %>%\n  drop_na() %>%\n  rename(`4qA161S`=`BSS Value4qA161S`, `4qA161L`=`BSS Value4qA161L`) %>%\n  gather(key=allele, value=cor, -term) %>%\n  ggplot(aes(x=allele, y=term)) +\n    geom_tile(aes(fill=cor), colour = \"grey50\") +\n    geom_text(aes(label=format(cor, digit=1)), size=3) +\n    scale_fill_steps2(low=\"grey75\", mid=\"grey95\", high=\"grey75\", \n                     breaks=seq(-1, 1, length.out=10)) +\n    theme_minimal() +\n    labs(x=\"\", y=\"\", title=\"Pearson correlation\") +\n    theme(legend.position = \"none\", \n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""},{"path":"appendixA-buildTxDB.html","id":"appendixA-buildTxDB","chapter":"A Build Ensembl-based annotation packages","heading":"A Build Ensembl-based annotation packages","text":"","code":""},{"path":"appendixA-buildTxDB.html","id":"build-ensdb-annotation-packages-from-annotationhub","chapter":"A Build Ensembl-based annotation packages","heading":"A.1 Build EnsDb annotation packages from AnnotationHub","text":"Code demonstrates quick way creating EnsDb annotation package using AnnotationHub package GenomicFeatures::makeEnsembldbPackage() function. comprehensive information Ensembl-based annotation packages, please refer Ensembldb Bioconductor.","code":"\n#'\n#' EnsDb.Hsapiens.v92: \n#'\nlibrary(AnnotationHub)\nlibrary(ensembldb)\nlibrary(GenomicFeatures)\nah <- AnnotationHub(localHub=TRUE)\nquery(ah, c(\"hsapiens\"))\nedb <- ah[[\"AH60977\"]] # select the source GRF from ensembl version 92\nseqlevelsStyle(edb) <- \"NCBI\"\nGenomicFeatures::makeEnsembldbPackage(\n  ensdb=dbfile(dbconn(edb)),\n  version=\"1.0.0\",\n  maintainer=\"Chao-Jen Wong <cwon2@fredhutch.org>\",\n  author=\"Chao-Jen Wong\",\n  destDir=\"/fh/fast/tapscott_s/CompBio/hg38\")"},{"path":"appendixB-DUX4-baskets-curation.html","id":"appendixB-DUX4-baskets-curation","chapter":"B DUX4 basket genes curation","heading":"B DUX4 basket genes curation","text":"","code":""},{"path":"appendixB-DUX4-baskets-curation.html","id":"aims-and-flowchard","chapter":"B DUX4 basket genes curation","heading":"B.1 Aims and flowchard","text":"aim create curated list DUX4 basket genes best represent DUX4 signature FSHD. Judit Balog Zizhen Yao Lauren Snider3 et al. identified 67 DUX4 robust genes significantly -regulated DUX4-target-positive FSHD biopsy samples, FSHD myotubes, DUX4-transduced cells. complete list genes can found Yao’s supplementary table 3 ddu251supp_table3.xls excel sheet saved .\n67 candidates, selected genes better distinguish moderately affected FSHDs controls. genes help us detecting DUX4-targeted muscle, building better prediction model based MRI characteristics, establishing standards post-therapeutic measurements. process involves three major steps:Converted coordinates/annotation genes GRCh38 (hg38) modern versions Ensembl Gencode since Yao’s study, alignments annotation RNA-seq data done based upon genome build hg19. Filtered un-annotated, duplicated genes variants.Validated significance set genes using muscle biopsy RNA-seq data Wellstone longitudinal study (Dennis Shaw Leo H. Wang Seth D. Friedman4, Seth D. Friedman Chao-Jen Wong Leo H. Wang5). study used k-mean clustering identify five distinctive groups samples, based RNA expression levels, labelled Mild, Moderate, IG-High, High, Muscle-Low.Ultimately, curated baskets genes whose expression levels best discriminating Mild/Moderated FSHD biopsies controls ranked classification-based (ROC) hypothesis-based (DESeq2) methods. subsequent genes helpful therapeutic post-therapeutic measures.Note: results figures generated fly.","code":""},{"path":"appendixB-DUX4-baskets-curation.html","id":"flowchart","chapter":"B DUX4 basket genes curation","heading":"B.2 Flowchart","text":"\nFigure B.1: Flowchart basket selections\n","code":"\nknitr::include_graphics(\"images/flowchart-DUX4-baskets.png\")"},{"path":"appendixB-DUX4-baskets-curation.html","id":"convert-to-grch38ensembl","chapter":"B DUX4 basket genes curation","heading":"B.3 Convert to GRCh38/Ensembl","text":"First, load libraries data sets.Second, upload Yao’s 2014 suppl. table 3:original 67:KHDC1L appeared twice (suppl_table3) different identifiers, ENSG00000243501 ENSG00000256980 hg19’s Esembl annotation. GRCh38, ENSG00000243501 annotated KHDC1.PRAMEF3 WI2-2994D6.1 liftOver GRCh38 - regions deleted convertedXX-FW84067D5.1 liftOver PRAMEF8 WI2-3308P17.2 liftOver PRAMEF11. PRAMEF8 PRAMEF11 already original 67 gene list. consider XX-FW84067D5.1 WI2-3308P17.2 duplicated therefore drop list.variants whose expression levels highly correlated. added extra values classification performance. might exclude final selection best performed baskets.Steps convert GRCh38/Ensembl (v88):Match gene names firstChange ENSG00000243501’s gene name (KHDC1L) hg38 KHDC1 (note Gencode 40 , might annotated KHDC1L-)gene names matched, use UCSC genome browser liftOver find converted annotation position GRCh38Column keep data frame flags (FALSE) un-annotated, duplicated (XX-FW84067D5.1 WI2-3308P17.2), variants genes whose expression differential statistics highly correlated otherUnmatched genes used UCSC genome browser liftOver:WI2-2994D6.2: PRAMEF 26 (PRAMEF25 variant)PRAMEF3: unable liftOver; region deleted GRCh38RP13-221M14.1: PRAMEF25, maybe also HNRNPCL4?WI2-3308P17.2: PRAMEF11 (PRAMEF27), PRAMEF9/15 variantsRP13-221M14.3: PRAMEF34P (PRAMEF36P psudogenes)RP13-221M14.5: HNRNPCL2, might PRAMEF9 variant GRCh38/Ensembl v88TRIM49DP: TRIM49D1TRIM49L1: TRIM49D2 (TRIM49D1 TRIM49D2 variants TRIM49)WI2-2994D6.1: Unable liftOverXX-FW84067D5.1: PRAMEF8AC010606.1: MBD3L2B. Alternative name CTB-25J19.1.","code":"\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(kableExtra))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\nlibrary(BiocParallel)\nbp_param = MulticoreParam(workers=4L)\nregister(bp_param)\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nsource(file.path(pkg_dir, \"scripts\", \"load_variables_and_datasets.R\"))\n# returns bilat_dds, longitudinal_dds, and annotation dataframe in ens88 (anno_gencode35) and gencode35 (anno_gencode35)\n\n# sanity check\ncolnames(longitudinal_dds)  = longitudinal_dds$sample_name\n# load xls and tidy it\ntargets <- readxl::read_xls(file.path(pkg_dir, \"extdata\",\n                                      \"ddu251supp_table3.xls\"), \n                            skip = 1, sheet=1) %>%\n  dplyr::select(ENSEMBL, gene.name) %>%\n  dplyr::rename(gene_name = gene.name)"},{"path":"appendixB-DUX4-baskets-curation.html","id":"match-and-liftover","chapter":"B DUX4 basket genes curation","heading":"B.3.1 Match and liftOver","text":"Code chunks perform steps - match gene names edit liftOver annotation tidy results.","code":"\n# tools\nget_id_by_name = function(g_name) {\n  if (g_name==\"no identifier\") return(NA)\n  anno_ens88 %>% dplyr::filter(gene_name %in% g_name) %>% pull(ens88_id) \n  #annotation %>% dplyr::filter(gene_name %in% g_name) %>% pull(gene_id) \n}\n\n# 1. matche name\n# 2. if names are not matched, use liftOver results\nDUX4_targets_GRCh38 = targets %>% left_join(anno_ens88, by=\"gene_name\", \n                                   suffix=c(\".hg19\", \".hg38\")) %>%\n    dplyr::mutate(match_name = !is.na(ens88_id)) %>%\n    dplyr::mutate(gene_name.hg38 = case_when(\n      ENSEMBL == \"ENSG00000243501\" ~ \"KHDC1\",\n      gene_name == \"WI2-2994D6.2\" ~ \"PRAMEF26\",\n      gene_name == \"PRAMEF3\" ~ \"no identifier\",\n      gene_name == \"RP13-221M14.1\" ~ \"PRAMEF25\",\n      gene_name == \"WI2-3308P17.2\" ~ \"PRAMEF11\",\n      gene_name == \"RP13-221M14.5\" ~ \"HNRNPCL2\",\n      gene_name == \"RP13-221M14.3\" ~ \"PRAMEF34P\",\n      gene_name == \"TRIM49DP\" ~ \"TRIM49D1\",\n      gene_name == \"TRIM49L1\" ~ \"TRIM49D2\",\n      gene_name == \"WI2-2994D6.1\" ~ \"no identifier\", \n      gene_name == \"XX-FW84067D5.1\" ~ \"PRAMEF8\",\n      gene_name == \"AC010606.1\" ~ \"CTB-25J19.1\",\n    TRUE ~ gene_name\n  )) %>% # 3. fixed gene_id and ENSEMBL.hg38\n  dplyr::mutate(ens88_id = if_else(is.na(ens88_id), \n                                  map_chr(gene_name.hg38, get_id_by_name), \n                                  ens88_id)) %>%\n  dplyr::mutate(ens88_id = if_else(gene_name.hg38 == \"KHDC1\", \n                                  map_chr(gene_name.hg38, get_id_by_name), ens88_id)) %>%\n  dplyr::rename(ENSEMBL.hg19 = ENSEMBL, gene_name.hg19 = gene_name,\n                gene_id.hg38 = ens88_id) %>%\n  dplyr::mutate(ENSEMBL.hg38 = str_replace(gene_id.hg38, \"\\\\..*\", \"\")) # remove ensembl version"},{"path":"appendixB-DUX4-baskets-curation.html","id":"exclude-unannotated-duplicated-and-variant-genes","chapter":"B DUX4 basket genes curation","heading":"B.3.2 Exclude unannotated, duplicated, and variant genes","text":"excluded following genes candidates DUX4 baskets.\n1. two un-annotated (PRAMEF3, WI2-2994D6.1) genes\n2. two (XX-FW84067D5.1-> PRAMEF8, WI2-3308P17.2 -> PRAMEF11) duplicated genes\n3. ten variants TRIM49, TRIM51, TRIM43 whose gene expression levels highly correlated TRIM49, TRIM51, TRIM43.marked FALSE Column keep data.frame. might consider genes selecting baskets genes. Now, total 53 genes retained candidates DUX4 signature basket.VariantsTRIM49D1: variant TRIM49; similar gene counts (longitudinal biopsy study)TRIM49D2: variant TRIM49; similar gene countsTRIM49C: variant TRIM49; similar gene countsTRIM49B: variant TRIM49; similar gene countsTRIM53AP: might share promoter TRIM49; similar gene countsTRIM51EP: variant TRIM51TRIM51BP: variant TIRM51TRIM51CP: variant TRIM51TRIM43B: variant TRIM43TRIM43CP: variant TRIM43display table.\nTable B.1: LiftOver annotation original 67 DUX4 robust genes. Column keep: FALSE indicates genes unannotated hg38/Ensembl, duplicated, variants similar statistics expression within family. Blue color (gene_name.hg38) indicates keep=TRUE, 53 genes retained candidates selection baskets.\n","code":"\n#save(DUX4_targets_GRCh38, file=file.path(pkg_dir, \"data\", \"DUX4_targets_GRCh38.rda\"))\n\n# color genes in basket blue, o/w green\ntb <- DUX4_targets_GRCh38 %>% \n  dplyr::mutate(gene_name.hg38 = kableExtra::cell_spec(gene_name.hg38, \n                                                       color = if_else(keep, \"blue\", \"green\")))\n\nknitr::kable(tb, format=\"html\", escape = F,\n             caption=\"LiftOver annotation of the original 67 DUX4 robust genes. Column keep: FALSE indicates the genes are unannotated in hg38/Ensembl, duplicated, or variants of similar statistics and expression within the family. Blue color (gene_name.hg38) indicates keep=TRUE, 53 genes retained as candidates for the selection of baskets.\") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kableExtra::kable_paper() %>%\n  kableExtra::scroll_box(width = \"800px\", height=\"100%\")"},{"path":"appendixB-DUX4-baskets-curation.html","id":"rank-significance-by-deseq2-and-roc-curves","chapter":"B DUX4 basket genes curation","heading":"B.4 Rank significance by DESeq2 and ROC curves","text":"53 retained candidates, aim select genes best distinguishing mildly affected muscle controls. ranked performance hypothesis-based classification-based approached:Steps:Use longitudinal RNA-seq data FSHD biopsies classified Mild, Moderate, IG-High High groups (based upon gene expression levels).Hypothesis testing approach - used DESeq2 estimate fold changes adjusted p-values comparing different groups FHSD (Mild, Moderate, Mild+Moderate, IG-High, High) controls. used statistics Mild+Moderate vs. controls comparison.Classification-based approach - used ROC curves evaluate performance whose expression levels (rlog), individually, able discriminate Mold+Moderate control groups. partial area curve (pAUC) criterion set 0.2 (1 - specificity).Combine ranks yielded DESeq (adjusted p-value) ROC curves (pAUC).Consider average expression level (TPM) threshold IG-High High group: avg. TPM > 2.Retain significant genes Mild+Moderate samples relative controls (34)Select smaller baskets (6 12) best performed genes Step 5.","code":""},{"path":"appendixB-DUX4-baskets-curation.html","id":"deseq2-differential-analysis","chapter":"B DUX4 basket genes curation","heading":"B.4.1 DESeq2: Differential analysis","text":"Chunk performs DESeq2 differential analysis comparing Mild, Moderate, Mild+Moderate, IG-High, High groups controls. 53, 40 candidates significant comparing Mild+Moderate samples controls.Criteria significance: adjusted p-value < 0.0.5 corresponding \\(H_0:|logFC(\\frac{FSHD}{control})| \\leq 1\\).Tidy statistics five comparisons:Chunk performs Mild+Moderate vs. Controls:\nFigure B.2: Differential analysis results comparing mild, moderate, mild+moderate, IG-high, High groups controls. Size dots indicate fold changes color significance (adjusted p-value < 0.05). Note 40 53 significant Mild+Moderate.\n","code":"\n#sanity check\ncolnames(longitudinal_dds) == longitudinal_dds$sample_name\ndds <- longitudinal_dds\nDESeq2::design(dds) <- formula(~ cluster)\ndds <- DESeq(dds, BPPARAM=bp_param)\n# get logFC for all five comparison against controls\nbasket <- DUX4_targets_GRCh38 %>% dplyr::filter(keep) #53\n\nlogFC <- map_dfr(resultsNames(dds)[c(2:5)], function(rname) {\n  res <- as.data.frame(results(dds, name=rname, alpha=0.05, lfcThreshold=1)) %>%\n    rownames_to_column(var=\"ens88_id\") %>%\n    dplyr::select(ens88_id, log2FoldChange, padj) %>%\n    dplyr::mutate(sig = padj < 0.05, contrast=rname) %>%\n    dplyr::filter(ens88_id %in% basket$gene_id.hg38) %>%\n    dplyr::mutate(contrast=rname)\n}) %>% dplyr::left_join(anno_ens88, by=\"ens88_id\") %>%\n  dplyr::mutate(sig = if_else(is.na(padj), FALSE, sig)) %>%\n  dplyr::mutate(contrast = sapply(str_split(contrast, \"_\"), \"[[\", 2)) \n# mild+moderate\nsub_dds <- dds[, dds$cluster %in% c(\"Control\", \"Mild\", \"Moderate\")]\ndesign(sub_dds) <- formula(~ pheno_type)\nsub_dds <- DESeq(sub_dds)\nsub_res <- as.data.frame(results(sub_dds)) %>%\n  rownames_to_column(var=\"ens88_id\") %>% \n  dplyr::select(ens88_id, log2FoldChange, padj) %>%\n  dplyr::mutate(sig = padj < 0.05, contrast=\"Mild+Moderate\") %>%\n  dplyr::filter(ens88_id %in% basket$gene_id.hg38) %>%\n  dplyr::left_join(anno_ens88, by=\"ens88_id\") %>%\n  dplyr::mutate(sig = if_else(is.na(padj), FALSE, sig)) \n# tidy up the statistics of the 40 significant genes in mild+moderate; give rank 1 to 40\ndf_sig <- sub_res %>% \n  dplyr::filter(ens88_id %in% basket$gene_id.hg38) %>%\n  dplyr::filter(!is.na(padj)) %>%\n  dplyr::filter(padj < 0.05) %>%\n  arrange(padj) %>%\n  dplyr::mutate(rank_deseq = 1:nrow(.))"},{"path":"appendixB-DUX4-baskets-curation.html","id":"receiver-operator-characteristic-roc-curve","chapter":"B DUX4 basket genes curation","heading":"B.4.2 Receiver Operator Characteristic (ROC) curve","text":"used ROC curve evaluate performance logistic regression model (Mild+Moderate vs Controls) using regularized log transformation gene counts. ranked 40 candidates ROC partial AUC (p=0.2, 1-specificity).","code":"\n# In retrospect, I would use the `caret` package instead of `genefilter` to perform roc/auc tests\nlibrary(genefilter)\ntmp = rlog(sub_dds)\nsub_rlog <- tmp[df_sig$ens88_id, ]\n# row-wise pAUC (0.2)\neset <- ExpressionSet(assay(sub_rlog))\neset$pheno_type <- sub_rlog$pheno_type\nrocs <- genefilter::rowpAUCs(eset, \"pheno_type\", p=0.2)\n\n# ROC results\ndf_roc <- data.frame(ens88_id = featureNames(eset), pAUC=genefilter::area(rocs)) %>%\n  dplyr::left_join(anno_ens88, by=\"ens88_id\") %>%\n  dplyr::arrange(desc(pAUC)) %>%\n  dplyr::mutate(rank_pAUC = 1:nrow(.))"},{"path":"appendixB-DUX4-baskets-curation.html","id":"selections-of-the-dux4-baskets","chapter":"B DUX4 basket genes curation","heading":"B.5 Selections of the DUX4 baskets","text":"Basket-M: basket genes able discriminate mild moderate muscle biopsies controlsStarted 40 significant genes Mild+Moderate group adjusted p-value < 0.05 (Mild+Moderate vs. controls)Exclude genes undetectable expression bilateral cohort (4)Exclude genes whose expression IG-High High groups less 2 TPM30 40 meet criteria","code":""},{"path":"appendixB-DUX4-baskets-curation.html","id":"validation-using-the-bilateral-cohort","chapter":"B DUX4 basket genes curation","heading":"B.5.1 Validation using the Bilateral cohort","text":"Basket-M12:subset Basekt-MConsidered combined ranks DEseq2’s adjusted p-value ROC’s pAUC p=0.2 (1-specificity)Get top 12 based combined rank, subject : two three PRAMEF-family, TRIM-family, MBD3L-familyResult: PRAMEF4, PRAMEF15, CCNA1, PRAMEF5, ZSCAN4, KHDC1L, TRIM49, MBD3L2, RP11-432M8.17 (H3Y1), TRIM51, MBD3L3, HNRNPCL2, TRIM43Basket-M6:subset Basekt-M12Select rank average TPM Mild+Moderate (>0.25 TPM)One four PRAMEFs: select PRAMEF5 among PRAMEF candidates (2, 4, 5, 15, 11) highest TPM Mild+Moderate groupResult: ZSCAN4, CCNA1, PRAMEF5, KHDC1L, MDB3L2, H3Y1 (RP11-432M8.17)Basket-H4: LEUTX, PRAMEF2, TRAM43, KHDC1L original top DUX4 biomarkers discriminating “hot” FSHD controls (Zizhen Yao6)Code chunk tidies table generates excel sheets.Code chuck displays final curated basket genes.\nTable B.2: Proposed DUX4 basket genes best represent DUX4 signature FSHD muscle best performance distinguish mildly moderately affected muscles (Mild_Moderate) controls. order arranged combined ranks pAUC DESeq’s adjusted p-value (Mild+Moderate vs. Controls). Color blue marks genes selected DUX4-M12. Columns avgTPM_M avgTPM_H average TPM Mild+Moderate IG-High+High groups longitudinal cohort; avgTPM_bilat average TPM bilate cohort. Columns DUX4-M, DUX4-M12, DUX4-M6, DUX4-H4 indicate (TRUE) selected genes basket.\n\nTable B.3: Average TPM baskets Mild+Moderate FSHD samples.\n","code":"\ncandidates <- df_sig %>% \n  # exclude genes with undetectable expression in the Bilat samples\n  dplyr::inner_join(anno_gencode35, by=\"ens_id\", suffix=c(\".ens88\", \".gencode35\")) %>%\n  dplyr::left_join(df_roc %>% dplyr::select(-gene_name, -ens_id), by=\"ens88_id\")  %>%\n  dplyr::mutate(combined_rank = (rank_pAUC + rank_deseq)/2) %>%\n  dplyr::arrange(combined_rank) %>%\n  dplyr::select(ens_id, ens88_id, gencode35_id, gene_name.ens88, gene_name.gencode35,\n                log2FoldChange, padj, pAUC, rank_pAUC, rank_deseq, combined_rank) \n\ntmp_high <- dds[candidates$ens88_id, dds$cluster %in% c(\"IG-High\", \"High\")] \ntmp_m <- sub_dds[candidates$ens88_id, sub_dds$pheno_type == \"FSHD\"] \ntmp_bilat <- bilat_dds[candidates$gencode35_id]\n\nDUX4_baskets <- candidates %>% \n  dplyr::mutate(avgTPM_M = rowMeans(assays(tmp_m)[[\"TPM\"]])) %>%\n  dplyr::mutate(avgTPM_H = rowMeans(assays(tmp_high)[[\"TPM\"]])) %>%\n  dplyr::mutate(avgTPM_Bilat = rowMeans(assays(tmp_bilat)[[\"TPM\"]])) %>%\n  dplyr::mutate(`DUX4-M` = avgTPM_H >= 2) %>%\n  dplyr::filter(`DUX4-M`) %>%\n  dplyr::mutate(`DUX4-M12` = gene_name.ens88 %in% \n                  c(\"PRAMEF4\", \"PRAMEF15\", \"CCNA1\", \"ZSCAN4\", \"PRAMEF5\",\n                    \"KHDC1L\", \"TRIM49\", \"MBD3L2\", \"RP11-432M8.17\", \"MBD3L3\", \n                    \"HNRNPCL2\", \"TRIM43\")) %>%\n  dplyr::mutate(`DUX4-M6` = gene_name.ens88 %in% c(\"ZSCAN4\", \"CCNA1\", \"PRAMEF5\", \"KHDC1L\",\n                                               \"MBD3L2\", \"RP11-432M8.17\")) %>%\n  dplyr::mutate(`DUX4-H4` = gene_name.ens88 %in% c(\"PRAMEF2\", \"TRIM43\", \"KHDC1L\", \"LEUTX\"))\ntb <- DUX4_baskets %>% \n  dplyr::select(-ens88_id, -gencode35_id, -gene_name.ens88 ) %>%\n  dplyr::rename(gene_name = gene_name.gencode35) %>%\n  dplyr::mutate(gene_name = kableExtra::cell_spec(gene_name, \n                            color = if_else(`DUX4-M12`, \"blue\", \"green\")))\n\nknitr::kable(tb, format=\"html\", escape = F,\n             caption=\"Proposed DUX4 basket genes that best represent DUX4 signature in FSHD muscle and with best performance in distinguish mildly to moderately affected muscles (Mild_Moderate) from the controls. The order is arranged by the combined ranks of pAUC and DESeq's adjusted p-value (Mild+Moderate vs. Controls). Color blue marks the genes selected for DUX4-M12. Columns avgTPM_M and avgTPM_H are the average TPM in the Mild+Moderate and IG-High+High groups in the longitudinal cohort; avgTPM_bilat is the average TPM in the bilate cohort. Columns DUX4-M, DUX4-M12, DUX4-M6, DUX4-H4 indicate (TRUE) the selected genes in the basket.\") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kable_paper() %>%\n  column_spec(11:14, background = \"yellow\") %>%\n  column_spec(9, color = \"white\",\n              background = spec_color(DUX4_baskets$avgTPM_M, end = 0.7)) %>%\n  column_spec(10, color = \"white\",\n              background = spec_color(DUX4_baskets$avgTPM_H, end = 0.7)) %>%\n  scroll_box(width = \"800px\", height=\"100%\")"},{"path":"appendixB-DUX4-baskets-curation.html","id":"visualize-tpm-of-basket-m12-genes","chapter":"B DUX4 basket genes curation","heading":"B.5.2 Visualize TPM of basket-M12 genes","text":"Boxplot DUX4-M12 aasket genes\nFigure B.3: Basket-M12: 12 top genes (original 67) discriminating mild+moderate control groups.\nDistribution per sample average TPM basket genes\nFigure B.4: Per-sample average TPM DUX4-M6, DUX4-M12, DUX4-M, DUX4-H4 genes.\n","code":"\nbasketM12 <- DUX4_baskets %>% dplyr::filter(`DUX4-M12`) \ncol_data <- as.data.frame(colData(longitudinal_dds))\ndata <- as.data.frame(assays(longitudinal_dds)[[\"TPM\"]][basketM12$ens88_id, ]) %>%\n  rownames_to_column(var=\"ens88_id\") %>%\n  dplyr::left_join(anno_ens88, by=\"ens88_id\") %>% # add gene_name\n  tidyr::gather(key=sample_name, value=TPM, -ens88_id, -gene_name) %>%\n  dplyr::left_join(col_data %>% dplyr::select(sample_name, cluster), \n                   by=\"sample_name\") %>%\n  dplyr::mutate(gene_name = factor(gene_name))\n\ndata %>% dplyr::filter(cluster%in% c(\"Control\", \"Mild\", \"Moderate\")) %>%\n  dplyr::mutate(`log10TPM` = log10(as.numeric(TPM)+1)) %>%\n  ggplot(aes(x=cluster, y=log10TPM)) +\n    geom_boxplot(width=0.7, outlier.shape=NA) +\n    geom_jitter(width = 0.3, size=0.5, color=\"steelblue\", alpha=0.5) +\n    facet_wrap(~gene_name, scale=\"free_y\") +\n    theme_bw() +\n    labs(y=\"log10(TPM+1)\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\nbasket_names <- c(\"DUX4-M6\", \"DUX4-M12\", \"DUX4-M\", \"DUX4-H4\")\ndf <- map_df(basket_names, function(basket) {\n  # tmp: convert ensembl v88 to gencode v36\n  basket_genes <- DUX4_baskets %>% dplyr::filter(get(basket)) \n  as.data.frame(assays(longitudinal_dds)[[\"TPM\"]][basket_genes$ens88_id, ]) %>%\n      summarise(across(where(is.numeric), mean))\n}) %>% t(.) %>% as.data.frame() %>%\n  `colnames<-` (basket_names) %>% \n  rownames_to_column(var=\"sample_name\") %>%\n  dplyr::left_join(col_data %>% dplyr::select(sample_name, cluster), \n                   by=\"sample_name\") %>%\n  dplyr::filter(!cluster %in% c(\"Muscle-Low\", \"IG-High\", \"High\")) %>%\n  tidyr::gather(key=basket, value=avg_TPM, -sample_name, -cluster) \n\n\nggplot(df, aes(y=avg_TPM, x=cluster, color=cluster)) +\n  geom_boxplot() + \n  theme_minimal() +\n  facet_wrap( ~ basket, scales=\"free\")"},{"path":"appendixB-DUX4-baskets-curation.html","id":"baskets-performance---random-forest-and-knn","chapter":"B DUX4 basket genes curation","heading":"B.6 Baskets performance - random forest and KNN","text":"section, used supervised machine learning algorithms evaluate performance baskets discriminating controls FSHD samples. used caret package provides interface machine learning models existed R repository. many good choices fitting models, chose random forest KNN used leave-one-cross-validation estimate classification accuracy.","code":""},{"path":"appendixB-DUX4-baskets-curation.html","id":"model-characteristics","chapter":"B DUX4 basket genes curation","heading":"B.6.1 Model characteristics","text":"Models: random forest KNNCross-validation: Leave-One-OutValue: log10(TPM+1)Reproducibility: set.seed=123 - control randomnessTraining samples: built two models - one samples (except Muscle-less) one samples labelled Control, Mild Moderate classes. , two discrimination models Control vs. FSHD Control vs. Mild+Moderate.Participated baskets: DUX4-H4, DUX4-M6, DUX4-M12, DUX4-MAccuracy: Table B.4)Code extracts predictors matrix:","code":"\nsuppressPackageStartupMessages(library(caret))\nset.seed(123)\nload(file.path(pkg_dir, \"data\", \"DUX4_baskets.rda\"))\n# set up the predictor's data matrix (log10(TPM+1))\n.predictor_df <- function(predictor, class) {\n  sub <- dds[predictor, dds$cluster %in% class]\n  data <- log10(assays(sub)[[\"TPM\"]] +1) %>% t(.) %>%\n    as.data.frame() %>%\n    add_column(pheno_type = sub$pheno_type) %>%\n    rename_with(~ str_replace(.x, \"\\\\..*\", \"\"), starts_with(\"ENSG\"))\n}\n\n# log10TPM predictor matrix: for moderate and all samples for testing\n\n# Model 1: control vs. Mild+Moderate\nclass <- c(\"Control\", \"Mild\", \"Moderate\")\nmoderate_smp <- list(\n  M6 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M6`) %>% pull(ens88_id),\n                     class = class),\n  M12 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M12`) %>% pull(ens88_id),\n                      class = class),\n  M = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M`) %>% pull(ens88_id),\n                    class = class),\n  H4 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-H4`) %>% pull(ens88_id), \n                     class = class))\n\nclass <- c(\"Control\", \"Moderate\", \"IG-High\", \"High\")\nMH_smp <- list(\n  M6 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M6`) %>% pull(ens88_id),\n                     class = class),\n  M12 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M12`) %>% pull(ens88_id),\n                      class = class),\n  M = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M`) %>% pull(ens88_id),\n                    class = class),\n  H4 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-H4`) %>% pull(ens88_id), \n                     class = class))\n\n# Model 2: control vs. IG-High and High\nclass <- c(\"Control\", \"IG-High\", \"High\")\nhigh_smp <- list(\n  M6 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M6`) %>% pull(ens88_id),\n                     class = class),\n  M12 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M12`) %>% pull(ens88_id),\n                      class = class),\n  M = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M`) %>% pull(ens88_id),\n                    class = class),\n  H4 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-H4`) %>% pull(ens88_id), \n                     class = class))\n\n# model 3: Control vs. all FSHDs\nclass <- c(\"Control\", \"Mild\", \"Moderate\", \"IG-High\", \"High\")\nall_smp <- list(\n  M6 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M6`) %>% pull(ens88_id),\n                     class = class),\n  M12 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M12`) %>% pull(ens88_id),\n                      class = class),\n  M = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-M`) %>% pull(ens88_id),\n                    class = class),\n  H4 = .predictor_df(DUX4_baskets %>% dplyr::filter(`DUX4-H4`) %>% pull(ens88_id), \n                     class = class))"},{"path":"appendixB-DUX4-baskets-curation.html","id":"models-and-leave-one-out-cross-validation","chapter":"B DUX4 basket genes curation","heading":"B.6.2 Models and leave-one-out cross-validation","text":"","code":"\n.rf_knn_fit <- function(matrix_lists) {\n  # lapply H4, M6, M12, and M\n  fit <- lapply(matrix_lists, function(df) {\n    # parameter tunning\n    fit_ctrl <- trainControl(method = \"LOOCV\",\n                             number = 10,\n                             #repeats = 10,\n                             classProbs = TRUE)\n                             #summaryFunction = twoClassSummary)\n    # model - rf\n    rf_fit <- train(pheno_type ~ .,\n                    data = df,\n                    method = \"rf\",\n                    tuneLength = 35, \n                    preProcess = \"pca\",\n                    trControl = fit_ctrl,\n                    metric = \"Accuracy\",\n                    na.action = \"na.omit\")\n    # knn\n    knn_fit <- train(pheno_type ~ .,\n                    data = df,\n                    method = \"knn\",\n                    trControl = fit_ctrl,\n                    metric = \"Accuracy\",\n                    na.action = \"na.omit\")\n\n    list(knn=knn_fit, rf=rf_fit) # return list\n  })\n  \n  names(fit) <- names(fit)\n  return(fit)\n}\n\n# model fitting\nmoderate_fit<- .rf_knn_fit(moderate_smp)\nhigh_fit <- .rf_knn_fit(high_smp)\nall_fit <- .rf_knn_fit(all_smp)\nMH_fit <- .rf_knn_fit(MH_smp)\nsave(all_fit, file=file.path(pkg_dir, \"data\", \"all_fit.rda\"))\nsave(moderate_fit, file=file.path(pkg_dir, \"data\", \"moderate_fit.rda\"))\nsave(MH_fit, file=file.path(pkg_dir, \"data\", \"MH_fit.rda\"))"},{"path":"appendixB-DUX4-baskets-curation.html","id":"accuracy","chapter":"B DUX4 basket genes curation","heading":"B.6.3 Accuracy","text":"\nTable B.4: Random Forest KNN model Accuracy estimated leave-one-cross-validation.\n","code":"\n.tidy_fit_accuracy <- function(fit_lists, model) {\n  tb <- map_df(fit_lists, function(fit) {\n    c(rf = max(fit$rf$results[, \"Accuracy\"]),\n      knn = max(fit$knn$results[, \"Accuracy\"]))\n    }) %>% \n    add_column(basket=paste0(\"DUX4-\", names(fit_lists)), .before=\"rf\") %>%\n    add_column(model = model) \n}\n\nmoderate_fit_accuracy <- .tidy_fit_accuracy(moderate_fit, \n                                            model=\"Control vs. Mild+Moderate\")\nhigh_fit_accuracy <- .tidy_fit_accuracy(high_fit, \n                                        model=\"Control vs. IG-High+High\")\nall_fit_accuracy <- .tidy_fit_accuracy(all_fit, \n                                        model=\"Control vs. Mild+Moderate+IG-High+High\")\nMH_fit_accuracy <- .tidy_fit_accuracy(MH_fit, \n                                        model=\"Control vs. Moderate+IG-High+High\")\n# kable\nbind_rows(all_fit_accuracy, moderate_fit_accuracy, ) %>%\n  bind_rows(MH_fit_accuracy) %>%\n  bind_rows(high_fit_accuracy) %>%\n  knitr::kable(format=\"html\", escape = F,\n               caption=\"Random Forest and KNN model Accuracy estimated by leave-one-out cross-validation.\") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kable_paper() %>%\n  row_spec(1:4, bold = T, color = \"white\", background = \"steelblue\") %>%\n  row_spec(5:8, bold = T, color = \"white\", background = \"chocolate\") %>%\n  row_spec(9:12, bold = T, background = \"gray75\") "},{"path":"appendixB-DUX4-baskets-curation.html","id":"conclusion","chapter":"B DUX4 basket genes curation","heading":"B.6.4 Conclusion","text":"comparison betweenControl Moderate+IG-High+High groups, baskets achieve similar levels accuracy. However, comparing Control Mild+Moderate groups, random forest model shows basket DUX4-M6 outperforms DUX4-H4. indicates DUX4-M6 basket effective identifying DUX4-targeted muscles moderate levels RNA expression.","code":""},{"path":"appendixC-other-baskets.html","id":"appendixC-other-baskets","chapter":"C Baskets of other FSHD signatures","heading":"C Baskets of other FSHD signatures","text":"use RNA-seq expression data longitudinal cohort identify representative markers extra cellular matrix inflammatory/immune response best distinguishing mildly moderately affected FSHD muscles relative controls.Steps:Load list differentially expressed genes (DEGs) severely affected FSHD biopsies longitudinal cohort previously reported Chao-Jen Wong7 (supplementary table 5) associated ECM, DUX4, stress, inflammatory biological precessesIdentify differentially expressed genes mildly moderately affected FSHD using DESeq2 longitudinal cohortRetain ECM, stress inflammatory associated DEGs step 1 2Save /Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy/stats/FSHD_signatures_baskets.xlsx","code":"\n# load libraries and data\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(kableExtra))\nsuppressPackageStartupMessages(library(knitr))\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\next_dir <- file.path(pkg_dir, \"extdata\")\nload(file.path(pkg_dir, \"data\", \"longitudinal_dds.rda\"))\nannotation <- as.data.frame(rowData(longitudinal_dds)) %>%\n  dplyr::select(gene_id, gene_name)\n# previous report on FSHD: High FSHD vs. controls and enriched GO terms\nfile_name <- \n  file.path(ext_dir, \n            \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\")\n#' High vs Control differential analysis sheet\nde <- readxl::read_xlsx(path=file_name, sheet=1, skip=3)\n\n# DEGs that are associated with ECM signatures\necm_de <- de %>% \n  filter(ecm == TRUE) %>% \n  pull(gencode_id) %>% as.character(.)\n# DEGs associated with DUX4 signatures\ndux4_de <- de %>% \n  filter(DUX4_induced == TRUE) %>% \n  pull(gencode_id) %>% as.character(.)\ninflamm_de <- de %>% \n  filter(inflamm == TRUE | immune == TRUE) %>% \n  pull(gencode_id) %>% \n  as.character(.)\nstress_de <- de %>% \n  filter(stress == TRUE) %>% \n  pull(gencode_id) %>% as.character(.)\nig_de <- de %>% \n  filter(grepl(\"IGH\", gene_name) | grepl(\"IGK\", gene_name)) %>%\n  pull(gencode_id) %>% as.character(.)\nde_list <- list(Extracellur_Matrix=ecm_de, \n                DUX4=dux4_de,\n                Inflammatory=inflamm_de,\n                Immunoglobulin=ig_de)"},{"path":"appendixC-other-baskets.html","id":"identify-differentially-expressed-genes-in-mildmoderate-fshds","chapter":"C Baskets of other FSHD signatures","heading":"C.1 Identify differentially expressed genes in Mild+Moderate FSHDs","text":"Method:-Hypothesis testing approach: use DESeq2 estimate fold changes adjusted p-values comparison Mild+Moderate FHSD biopsies control group\n-Criteria significance: adjusted p-value < 0.0.5 corresponding \\(H_0:|logFC(\\frac{FSHD}{control})| \\leq 1\\).","code":"\nsub_dds <- longitudinal_dds[, longitudinal_dds$cluster %in% \n                              c(\"Control\", \"Mild\", \"Moderate\")]\nDESeq2::design(sub_dds) <- formula(~ pheno_type)\nsub_dds <- DESeq(sub_dds)\n\ntpm <- assays(longitudinal_dds)[[\"TPM\"]]\navg_TPM <- \n  data.frame(\n    avg_TPM_controls = rowMeans(tpm[,\n                                    longitudinal_dds$cluster == \"Control\"]),\n    avg_TPM_M = rowMeans(tpm[, longitudinal_dds$cluster %in% \n                               c(\"Mild\", \"Moderate\")]),\n    avg_TPM_H = rowMeans(tpm[, longitudinal_dds$cluster %in% \n                               c(\"IG-High\", \"High\")])) %>%\n  rownames_to_column(var=\"gene_id\")\n\nres <- as.data.frame(results(sub_dds, alpha=0.05, lfcThreshold=1)) %>%\n  rownames_to_column(var=\"gene_id\") %>%\n  dplyr::select(gene_id, log2FoldChange, padj) %>%\n  dplyr::mutate(up_sig = padj < 0.05 & log2FoldChange > 0) "},{"path":"appendixC-other-baskets.html","id":"extracellular-matrix-basket","chapter":"C Baskets of other FSHD signatures","heading":"C.2 Extracellular Matrix basket","text":"\nTable C.1: Extracellular matrix basket canidiates. log2FoldChange padj rendered comparison Mild+Moderate vs. Controls. Columns Avg_TPM_M avg_TPM_H average TPM Mild+Moderate High+IG-High, respectively.\n","code":"\necm <- res %>% dplyr::filter(up_sig, gene_id %in% ecm_de) %>%\n  dplyr::left_join(annotation, by=\"gene_id\") %>% \n  left_join(avg_TPM, by=\"gene_id\") %>%\n  relocate(gene_name, .after=gene_id)\nknitr::kable(ecm, format=\"html\", escape = F,\n             caption=\"Extracellular matrix basket canidiates. log2FoldChange and padj rendered by the comparison of Mild+Moderate vs. Controls. Columns `Avg_TPM_M` and `avg_TPM_H` are the average TPM of Mild+Moderate and High+IG-High, respectively.\") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kableExtra::kable_paper() %>%\n  kableExtra::scroll_box(width = \"800px\", height=\"100%\")"},{"path":"appendixC-other-baskets.html","id":"inflammimmune-response-basket","chapter":"C Baskets of other FSHD signatures","heading":"C.3 Inflamm/immune response basket","text":"\nTable C.2: Inflamm/immunse response basket canidiates. log2FoldChange padj rendered comparison Mild+Moderate vs. Controls. Avg_TPM_M avg_TPM_H average TPM Mild+Moderate High+IG-High, respectively.\n","code":"\ninflamm <- res %>% dplyr::filter(up_sig, gene_id %in% inflamm_de) %>%\n  dplyr::left_join(annotation, by=\"gene_id\") %>%\n  left_join(avg_TPM, by=\"gene_id\") %>%\n  relocate(gene_name, .after=gene_id)\nknitr::kable(inflamm, format=\"html\", escape = F,\n             caption=\"Inflamm/immunse response basket canidiates. log2FoldChange and padj rendered by the comparison Mild+Moderate vs. Controls. Avg_TPM_M and avg_TPM_H are the average TPM of Mild+Moderate and High+IG-High, respectively. \") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kableExtra::kable_paper() %>%\n  kableExtra::scroll_box(width = \"800px\", height=\"100%\")"},{"path":"appendixC-other-baskets.html","id":"stress-response-basket","chapter":"C Baskets of other FSHD signatures","heading":"C.4 Stress response basket","text":"stressed related differentially expressed genes overlapping inflamm/immune response extracellular matrix basket genes.\nTable C.3: Stree basket canidiates. log2FoldChange padj rendered comparison Mild+Moderate vs. Controls. Blue reprepsents genes associated ECM inflamm/immune response green exclusively stress related. Avg_TPM_M avg_TPM_H average TPM Mild+Moderate High+IG-High, respectively.\n","code":"\nstress <- res %>% dplyr::filter(up_sig, gene_id %in% stress_de) %>%\n  dplyr::left_join(annotation, by=\"gene_id\") %>%\n  left_join(avg_TPM, by=\"gene_id\") %>%\n  relocate(gene_name, .after=gene_id)\n\nstress %>% \n  dplyr::mutate(gene_name = kableExtra::cell_spec(gene_name, \n    color = if_else(gene_name %in% c(inflamm$gene_name, ecm$gene_name), \"blue\", \"green\"))) %>%\n  knitr::kable(format=\"html\", escape = F,\n             caption=\"Stree basket canidiates. log2FoldChange and padj rendered by the comparison Mild+Moderate vs. Controls. Blue reprepsents genes associated with ECM or inflamm/immune response and green are exclusively stress related. Avg_TPM_M and avg_TPM_H are the average TPM of Mild+Moderate and High+IG-High, respectively.\") %>%\n  kableExtra::kable_styling(font_size = 12) %>%\n  kableExtra::kable_paper() %>%\n  kableExtra::scroll_box(width = \"800px\", height=\"100%\")\nFSHD_signatures_baskets <- list(ecm=ecm, inflamm=inflamm, stress=stress)\nsave(FSHD_signatures_baskets, \n     file=file.path(pkg_dir, \"data\", \"FSHD_signatures_baskets.rda\"))\nwrite_xlsx(FSHD_signatures_baskets, \n           path=file.path(pkg_dir, \"stats\", \"FSHD_signatures_baskets.xlsx\"))"}]
