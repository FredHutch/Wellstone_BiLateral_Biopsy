[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"primary objective book advocate computational transparency reproducibility conjunction manuscript entitled “Validation study association MRI FSHD gene signature reveals markers whole muscle systemic disease progression.” offering detailed explanations decision-making processes grounded machine learning statistical inferences, provide readers comprehensive comprehension computational methods coding. Furthermore, book includes reproducible codes generate real-time results, enhancing accessibility usability research.study, obtained bilateral tibialis anterior (TA) biopsied muscles 34 subjects. muscle biopsies (n=68) processed MRI characterization, histopathological scoring, RNA extraction RNA sequencing , DNA extraction bisulfite sequencing 4qA permissive allele region exon 2-3. metrics yield processes, able validate association MRI RNA molecular signatures, identify immune cell markers associated immune cell infiltrates symmetric trends disease. Additionally, curated proposed panels genes post-therapeutic targets clinical trial designs.book discusses following topics:Transcript-based assessment muscle cell type content FSHD biopsied muscleFSHD molecular signatures, including DUX4, extracurricular matrix, inflammatory, complement activation, immunoglobulinsML classification based FSHD molecular signaturesIdentification six baskets containing genes exhibit specific signatures associated FSHDAssociation MRI characteristics signatures DUX4 expressionBilateral comparison analysisVerification immune cell infiltrate signatures immune cell type proportions","code":""},{"path":"index.html","id":"software","chapter":"1 About","heading":"1.1 Software","text":"R (4.2.2) packages Bioconductor (3.17) Tidyverse projects. used packages include GenomicAlignments, GenomicFeatures, DESeq2, dplyr, ggplot2, caret, genomic-related BioC packages annotation.fastqc, Subread, samTools, cutadapt RNA-seq data preprocessing, PLIER immune cell type proportions.","code":""},{"path":"index.html","id":"repos-structure","chapter":"1 About","heading":"1.2 Repos structure","text":"section outlines structure repository, available .","code":"\\data: \n    |- sanitized.dds.rda: DESeqDataSet instance; longitudinal RNA-seq\n    |- longitudinal_dds.rda: DESeqDataSet instance include the longitudinal \n       RNA-seq gene counts and metadata (MRI, pathology, and clinical data)\n    |- cluster_df.rda: data.frame instance\n    |- bilateral_dds.rda: DESeqDataSet instance; bilateral RNA-seq data\n    |- comprehensive_df.rda: data.frame instance obtaining the biletarl\n       cohort's clinical, MRI, pathology, FSHD molecular signature scores,\n       and methylation data\n\n\\docs: *.html; folder hosts the gitbook \n\\gitbook: *.Rmd that makes the gitbook\n\\scripts: *.R; un-orgnaized R code of our initial data \n          exploration and bioinformatics analysis\n\\extdata: *.xlsx; extra files and supplemental tables"},{"path":"index.html","id":"annotation-package","chapter":"1 About","heading":"1.3 Annotation package","text":"conducto RNA-seq analysis, used annotations Gencode v35 built customized TxDB package, named hg38.HomoSapiens.Gencode.v35. instructions building Bioconductor TxDB EsbDB annotation packages, please refer Appendix .","code":""},{"path":"index.html","id":"rna-seq-preprocessing-and-gene-counts","chapter":"1 About","heading":"1.4 RNA-seq preprocessing and gene counts","text":"pre-preprocess RNA-seq data, filtered unqualified raw reads, trimmed Illumina universal adapters using Trimmomatic, aligned remaining reads GRCh38.p13 Rsubread.code chunk provides example used GenomicAlignments, BiocParallel, customized TxDB package (hg38.HomoSapiens.Gencode.v35) count reads generate RangedSummarizedExperiment object. Note sort_files parameter indicates location sorted, indexed BAM files used analysis. summarizOverlaps() function, chose use Intersectionstrict mode count reads completely contained within range exons, ignore ambiguous reads straddle different gene features.","code":"\n# sort_files gives the location of my bam files\nsort_files <- list.files(scratch_dir, full.name=TRUE, pattern=\"\\\\.bam$\")\nlibrary(GenomicFeatures)\nlibrary(GenomicAlignments)\nlibrary(Rsamtools)\nlibrary(BiocParallel)\nlibrary(hg38.HomoSapiens.Gencode.v35)\nbp_param <- BiocParallel::MulticoreParam(workers=12L)\nregister(bp_param)\n\nfeatures <- GenomicFeatures::exonsBy(hg38.HomoSapiens.Gencode.v35, by=\"gene\")\nfeatures <- keepStandardChromosomes(features,\n                                    species = \"Homo_sapiens\",\n                                    pruning.mode=\"fine\")\nrse <- \n  GenomicAlignments::summarizeOverlaps(features=features,\n                                       reads =\n                                         Rsamtools::BamFileList(sort_file),\n                                       mode = \"IntersectionStrict\",\n                                       ignore.strand=TRUE, \n                                       singleEnd=TRUE,\n                                       inter.feature=TRUE, \n                                       BPPARAM=bp_param)"},{"path":"study-cohort.html","id":"study-cohort","chapter":"2 Study cohort","heading":"2 Study cohort","text":"Wellstone Bilateral muscle biopsy study cohort include 34 subjects, aged 21 69, recruited three medical institutes, University Washington Medical Center, University Rochester Medical Center, Kansas University Medical Center. participated subjects underwent needle muscle biopsy tibialis anterior (TA) muscles. muscle biopsies (n=68) processed MRI characterization, histopathological scoring, RNA extraction RNA sequencing , DNA extraction bisulfite sequencing 4qA permissive allele region exon 2-3. attempted biopsies adequate least one two processes, include:01-0019L, 01-0020R, 01-0029R, 13-0006R adequate histopathological scoring13-0006R, 13-0008R/L yield sufficient RNA RNA sequencing32-0028L low RNA Integrity number (RIN=4) showed RND degradation","code":""},{"path":"muscle-content.html","id":"muscle-content","chapter":"3 Transcript-based accessment for muscle content","heading":"3 Transcript-based accessment for muscle content","text":"Coming soon.","code":""},{"path":"MRI-vs-DUX4-score.html","id":"MRI-vs-DUX4-score","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4 MRI characteristics and DUX4 molecular signatures","text":"chapter, weAddress association MRI characteristics DUX4 signaturesConsider two approaches determine DUX4 signature occurrences: (1) threshold DUX4 score—\\(\\sum_{=1}^6 \\log_{10}(TPM_i+1)\\)—six robust DUX4 genes, (2) classification (DUX4+/- Control-like/Moderate+) training model built upon longitudinal study random forestApply logistics regression using linear combination two predictors, STIR status fat infiltration percent, outcome DUX4 expression occurrence. Output logistics regression function.","code":"\n# load libraries\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\n\n# load data sets\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\ndraft_fig_dir <- file.path(pkg_dir, \"manuscript\", \"figures\")\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nload(file.path(pkg_dir, \"data\", \"dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"all_baskets.rda\"))\n\n# exclude 13-0007R and 13-0009R\ndds$sample_id <- str_replace(dds$sample_name, \"[b]*_.*\", \"\")\ndds <- dds[, !dds$sample_id %in% c(\"13-0007R\", \"13-0009R\")]\n# tidy annotation \nanno_gencode35 <- as.data.frame(rowData(dds)) %>%\n  rownames_to_column(var=\"gene_id\") %>% #BiLat study using Gencode 35\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\"))\n\n# color palate\nlibrary(wesanderson)\npal <- wes_palette(\"Darjeeling1\", n=5)\nstir_pal <- c(\"STIR-\" = pal[5], \"STIR+\"= pal[1])\ncntr_pal <- pal[2]"},{"path":"MRI-vs-DUX4-score.html","id":"stir-status-and-dux4-signatures","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.1 STIR status and DUX4 signatures","text":"\nTable 4.1: Mean values DUX4 scores (based DUX4-M6 basket) STIR+ STIR- biopsies.\nmean difference DUX4 scores STIR+ STIR- groups significantly greater 0 Wilcox \\(p\\)-value \\(7e-10\\).","code":"\ncomprehensive_df %>% drop_na(`DUX4-M6-logSum`) %>%    \n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  group_by(STIR_status) %>%\n  summarise(`DUX4 score (mean of log sum)` = mean(`DUX4-M6-logSum`)) %>%\n  kbl(caption=\"Mean values of DUX4 scores (based on DUX4-M6 basket) in STIR+ and STIR- biopsies.\") %>%\n  kable_styling()\ndux4_list <- comprehensive_df %>% drop_na(`DUX4-M6-logSum`) %>%    \n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  group_by(STIR_status) %>%\n  group_map(~ pull(.x, `DUX4-M6-logSum`))\n\nwilcox.test(dux4_list[[1]], dux4_list[[2]])\n#> \n#>  Wilcoxon rank sum exact test\n#> \n#> data:  dux4_list[[1]] and dux4_list[[2]]\n#> W = 815, p-value = 7.315e-10\n#> alternative hypothesis: true location shift is not equal to 0"},{"path":"MRI-vs-DUX4-score.html","id":"logistics-prediction-of-dux4-signature-occurrence","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2 Logistics prediction of DUX4 signature occurrence","text":"","code":""},{"path":"MRI-vs-DUX4-score.html","id":"scheme-1-use-random-forest-traning-model-based-on-dux4-m6-basket","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.1 Scheme 1: use random forest traning model based on DUX4 M6 basket","text":"first scheme used random forest training model built longitudinal model six DUX4 basket genes. applied ML model bilateral samples classify DUX4+ DUX4- groups. got 60% STIR- samples DUX4+.\nTable 4.2: STIR+ - distribution DUX4+/- group.\ngeneral linear model depicted STIR status key association DUX4 signatures whereas fat infiltration fraction presented less solid evident direct association (p-value=0.3).code chunk applies logistic regression using fat infiltration percent STIR status predictors outcome DUX4 signature occurrence predicted random forest:\nFigure 4.1: Prediction DUX4 + ocurrence modeled linear combination STIR_status FAT_Infilt_Percent. red linepresents STIR+ blue STIR-.\n","code":"\n# MH_fit$M6 is built on comparing controls and Moderate+IG-high+High \nid <- all_baskets[[\"DUX4-M6\"]]$gencode_v35\ndf_logTPM <- log10(assays(dds[id])[[\"TPM\"]] + 1) %>% t(.) %>%\n      as.data.frame() %>%\n      tibble::add_column(pheno_type = factor(\"FSHD\",\n                                             levels=c(\"Control\",\n                                                      \"FSHD\"))) %>%\n      rename_with(~ str_replace(.x, \"\\\\..*\", \"\"), starts_with(\"ENSG\"))\nMH_fit <- get(load(file.path(pkg_dir, \"data\", \"MH_fit.rda\")))$M6\n\npredict_M6 <- predict(MH_fit$rf, newdata=df_logTPM) %>%\n  as.data.frame() %>% dplyr::rename(rfM6_fit = \".\") %>%\n  tibble::add_column(sample_id = str_replace(rownames(df_logTPM),\n                                     \"_.*\", \"\"))\ndata <- predict_M6 %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>%\n  drop_na(STIR_status)\n# how many STIR- and STIR+ on Control (DUX4-) and FSHD (DUX4+)\ndata %>% group_by(STIR_status) %>%\n  summarise(`DUX4-` = sum(rfM6_fit==\"Control\"),\n            `DUX4+` = sum(rfM6_fit == \"FSHD\")) %>%\n  knitr::kable(caption=\"STIR+ and - distribution on the DUX4+/- group.\")\n\ndata %>% group_by(rfM6_fit) %>%\n  summarize(average_DUX4_score = mean(`DUX4-M6-logSum`),\n            min_DUX4_score = min(`DUX4-M6-logSum`),\n            max_DUX4_score = max(`DUX4-M6-logSum`))\n#> # A tibble: 2 × 4\n#>   rfM6_fit average_DUX4_score min_DUX4_score max_DUX4_score\n#>   <fct>                 <dbl>          <dbl>          <dbl>\n#> 1 Control              0.0417         0.0260         0.0668\n#> 2 FSHD                 1.74           0.0856         6.05\n# include random forest fitting model (M6) and threshold\ndata <- predict_M6 %>%\n  left_join(comprehensive_df, by=\"sample_id\") %>%\n  drop_na(STIR_status)\nfat_stir_logit <- glm(rfM6_fit ~ Fat_Infilt_Percent + STIR_status, \n                      data = data, family = \"binomial\")\nsummary(fat_stir_logit)\n#> \n#> Call:\n#> glm(formula = rfM6_fit ~ Fat_Infilt_Percent + STIR_status, family = \"binomial\", \n#>     data = data)\n#> \n#> Deviance Residuals: \n#>      Min        1Q    Median        3Q       Max  \n#> -2.18405   0.04185   0.51973   0.81414   0.96049  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)\n#> (Intercept)          0.1377     0.7357   0.187    0.852\n#> Fat_Infilt_Percent   8.3965     7.5969   1.105    0.269\n#> STIR_statusSTIR+     0.7714     1.2636   0.610    0.542\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 59.598  on 58  degrees of freedom\n#> Residual deviance: 51.047  on 56  degrees of freedom\n#> AIC: 57.047\n#> \n#> Number of Fisher Scoring iterations: 7\ndf_scheme1 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                  each=length(seq(0, 0.8, by=0.01)))) \ndf_scheme1$prob <- predict(fat_stir_logit, newdata = df_scheme1, type = \"response\")\n\nggplot(df_scheme1, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n               color=STIR_status)) +\n  geom_line() +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"none\", axis.title.y=element_text(size=10),\n        plot.title=element_text(size=12, hjust=0.5),\n        plot.subtitle=element_text(size=10, hjust=0.5)) +\n  labs(title=\"Logistic prediction for DUX4+ occurrance\",\n       subtitle = \"DUX4+/- classified by ML model\", \n        y=\"probility of DUX4 signature occurence\",\n        x=\"whole muscle fat percent\") +\n  scale_x_continuous(breaks=seq(0, 0.8, by=0.2)) +\n  scale_y_continuous(breaks=seq(0, 1, by=0.1))\nggsave(file.path(draft_fig_dir, \"lagistics-prediction-scheme-rfbased.pdf\"),\n       width=3, height=2.5)"},{"path":"MRI-vs-DUX4-score.html","id":"scheme-2-binary-outcome-using-dux4-score-0.5","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.2 Scheme 2: Binary outcome using DUX4 score > 0.5","text":"use DUX4 score defined accumulated log(TPM+1) six genes DUX4 basket. use whole muscle fat percent STIR status predictor infer occurrence DUX4 score > 0.5. reason chose 0.5 threshold TPM=0.2 conventional threshold call whether gene expressed sum six genes expressed level approximately 0.5: \\(\\sum_1^6 log_{10}(0.2 + 1) \\approx 0.5\\).NOTE: Predictions 13-0007R 13-0009R excluded.\n(#tab:scheme2_based_on_DUX4_score)Number STIR- STIR+ DUX4 < 0.5 DUX4 >=0.5 group.\ncase, general linear model depicted STIR status key association DUX4 signatures whereas fat infiltration fraction presented less solid evident direct association (p-value=0.3). Summary logistic regression statistics:\nFigure 4.2: logistic prediction model used forecast likelihood DUX4 score greater equal 0.5. grey dashed line represents forecast made solely basis fat percentage predictor.\n","code":"\n# include random forest fitting model (M6) and threshold\ndata <- comprehensive_df %>% drop_na(STIR_status, `DUX4-M6-logSum`) %>%\n  dplyr::select(sample_id, `DUX4-M6-logSum`, Fat_Infilt_Percent, STIR_status) %>%\n  dplyr::filter(!sample_id %in% c(\"13-0007R\", \"13-0009R\")) %>%\n  dplyr::mutate(`DUX4-M6-logSum-positive`= if_else(`DUX4-M6-logSum` < 0.5, \n                                                   \"Control-like\", \"DUX4+\")) %>%\n  dplyr::mutate(`DUX4-M6-logSum-positive`=factor(`DUX4-M6-logSum-positive`))\n\n## how many STIR- are control-like (DUX4 score < 0.5) and \n##how many STIR+ are DUX4+ (DUX4 >= 0.5)\ndata %>% group_by(STIR_status) %>%\n  summarise(`DUX4 < 0.5`=sum(`DUX4-M6-logSum-positive` == \"Control-like\"),\n            `DUX4 > 0.5`= sum(`DUX4-M6-logSum-positive` == \"DUX4+\")) %>%\n  kbl(caption = \"Number of STIR- and STIR+ in the DUX4 < 0.5 and DUX4 >=0.5 group.\") %>%\n  kable_styling()\n## logistic prediction\nfat_stir_logit_2 <- glm(`DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent + STIR_status,\n                        data = data, family = \"binomial\")\nsummary(fat_stir_logit_2)\n#> \n#> Call:\n#> glm(formula = `DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent + \n#>     STIR_status, family = \"binomial\", data = data)\n#> \n#> Deviance Residuals: \n#>     Min       1Q   Median       3Q      Max  \n#> -2.1838  -0.7054  -0.5871   0.3009   1.8516  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)  \n#> (Intercept)         -1.9431     0.7751  -2.507   0.0122 *\n#> Fat_Infilt_Percent   7.8039     7.2899   1.071   0.2844  \n#> STIR_statusSTIR+     2.9489     1.2501   2.359   0.0183 *\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 85.886  on 61  degrees of freedom\n#> Residual deviance: 48.859  on 59  degrees of freedom\n#> AIC: 54.859\n#> \n#> Number of Fisher Scoring iterations: 7\ndf_scheme2 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                  each=length(seq(0, 0.8, by=0.01))))\ndf_scheme2$prob = predict(fat_stir_logit_2, newdata = df_scheme2, type = \"response\")\nfat_logit <- glm(`DUX4-M6-logSum-positive` ~ Fat_Infilt_Percent,\n                 data = data, family = \"binomial\")\ndf_fat_logit <- data.frame(Fat_Infilt_Percent = seq(0, 0.8, by=0.01))\ndf_fat_logit$prob <- predict(fat_logit, newdata = df_fat_logit, type=\"response\")\n# add a logistic model without STIT\n# viz\nggplot(df_scheme2, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n                       color=STIR_status)) +\n  geom_line() +\n  geom_line(data=df_fat_logit, \n            aes(x=Fat_Infilt_Percent, y=prob), color=\"gray75\", \n            linetype=\"dashed\", inherit.aes=FALSE) +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        axis.title.x = element_text(size=9),\n        axis.title.y = element_text(size=9),\n        plot.subtitle = element_text(size=9, color=\"grey20\", hjust=0.5),\n        plot.title=element_text(hjust=0.5, size=10)) +\n  labs(title=\"Logistic regression\", \n       subtitle=\"Occurrence of DUX4 score > 0.5\",\n        y=\"probility\",\n        x=\"whole muscle fat percent\") +\n  scale_x_continuous(breaks=seq(0, 0.8, by=0.2)) +\n  scale_y_continuous(breaks=seq(0, 1, by=0.2)) +\n  geom_segment(aes(x = 0.13, y = 0.80, xend = 0.11, yend = 0.84),\n               color=stir_pal[\"STIR+\"],\n               arrow = arrow(length = unit(0.1, \"cm\"))) +\n  annotate(\"text\", x=0.14, y=0.80, hjust=0, vjust=1, label=\"STIR+\", size=2.5, \n           color=stir_pal[\"STIR+\"]) +\n  geom_segment(aes(x = 0.23, y = 0.35, xend = 0.21, yend = 0.39),\n               color=stir_pal[\"STIR-\"],\n               arrow = arrow(length = unit(0.1, \"cm\"))) +\n  annotate(\"text\", x=0.24, y=0.35, hjust=0, vjust=1, label=\"STIR-\", size=2.5, \n           color=stir_pal[\"STIR-\"])\nggsave(file.path(draft_fig_dir, \"lagistic-prediction-outcome-by-logSum-DUX4-0.5.pdf\"),\n       width=3, height=2.5)"},{"path":"MRI-vs-DUX4-score.html","id":"use-logistic-regression-to-predict-the-moderate-occurrence","chapter":"4 MRI characteristics and DUX4 molecular signatures","heading":"4.2.3 Use logistic regression to predict the Moderate+ occurrence","text":", made logistics prediction Moderate+ occurrence based random forest model constructed 30 basket genes distinguish control moderate+IG-high+high FSHD cases. Although STIR status slight impact prediction, significant.\nFigure 4.3: Logistic prediction occurrance Moderate+. using whole muscle fat percent STIR status.\n\nFigure 4.4: Logistic repression three different classification shemes\n","code":"\n# use logistics to predict the Moderate+ occurrence (outcome model built upon)\n# six basket;\n# take away: fat infiltration percent is critical in determining the probability of the outcome, whereas STIR_status is not \n\ncomprehensive_df %>% group_by(STIR_status) %>%\n   summarise(`Control-like`=sum(class==\"Control-like\", na.rm=TRUE),\n             `Moderate+`=sum(class==\"Moderate+\", na.rm=TRUE),\n             `Muscle-Low` = sum(class==\"Muscle-Low\", na.rm=TRUE)) %>%\n  kbl() %>%\n  kable_styling()\n# randomForest.Fit is ML traning model based on six basket genes and \n# the longitudinal samples\nload(file.path(pkg_dir, \"data\", \"bilat_MLpredict.rda\"))\ndata <- comprehensive_df %>%\n  left_join(dplyr::select(bilat_MLpredict, -class), by=\"sample_id\") %>%\n  drop_na(randomForest.fit)\n\nfat_stir_logit_3 <- glm(randomForest.fit ~ Fat_Infilt_Percent + STIR_status,\n                        data = data, family = \"binomial\")\nsummary(fat_stir_logit_3)\n#> \n#> Call:\n#> glm(formula = randomForest.fit ~ Fat_Infilt_Percent + STIR_status, \n#>     family = \"binomial\", data = data)\n#> \n#> Deviance Residuals: \n#>     Min       1Q   Median       3Q      Max  \n#> -1.8231  -1.2550   0.4110   0.9434   1.1812  \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z value Pr(>|z|)\n#> (Intercept)         -0.3331     0.6417  -0.519    0.604\n#> Fat_Infilt_Percent   9.6883     6.4148   1.510    0.131\n#> STIR_statusSTIR+     0.1928     1.0038   0.192    0.848\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 72.836  on 61  degrees of freedom\n#> Residual deviance: 61.901  on 59  degrees of freedom\n#> AIC: 67.901\n#> \n#> Number of Fisher Scoring iterations: 7\n\ndf_scheme3 <- data.frame(Fat_Infilt_Percent = rep(seq(0, 0.8, by=0.01), 2), \n                 STIR_status = rep(c(\"STIR-\", \"STIR+\"), \n                                   each=length(seq(0, 0.8, by=0.01)))) \ndf_scheme3$prob <- predict(fat_stir_logit_3, newdata = df_scheme3, type = \"response\")\n\nggplot(df_scheme3, aes(x=Fat_Infilt_Percent, y=prob, group=STIR_status,\n                       color=STIR_status)) +\n  geom_line() +\n  scale_color_manual(values = stir_pal) +\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        plot.title=element_text(hjust=0.5)) +\n  labs(title=\"Logistic prediction III on Moderate+ occurrence\", \n        y=\"Probility of Moderate+ occurrence\",\n        x=\"fat infiltration percent\") +\n  scale_x_continuous(breaks=seq(0, 1, by=0.2))\ndf_scheme1 %>% \n  left_join(df_scheme2, by=c(\"Fat_Infilt_Percent\", \"STIR_status\"),\n            suffix=c(\".scheme1\", \".scheme2\")) %>%\n  left_join(df_scheme3, by=c(\"Fat_Infilt_Percent\", \"STIR_status\")) %>%\n  dplyr::rename(`rfFit Moderare+`=prob, `rfFit DUX4+`=prob.scheme1,\n                `threshold DUX4+`=prob.scheme2) %>%\n  gather(key=scheme, value=prob, -Fat_Infilt_Percent, -STIR_status) %>%\n  #dplyr::mutate(group=paste0(STIR_status, scheme)) %>%\n  ggplot(aes(x=Fat_Infilt_Percent, y=prob, group=scheme,\n                       color=scheme)) +\n  geom_line() +\n  #scale_color_manual(values = stir_pal) +\n  facet_wrap(~ STIR_status,  nrow=1) +\n  theme_minimal() +\n  theme(#legend.position = \"bottom\", \n        plot.title=element_text(hjust=0.5)) +\n  labs(title=\"Logistic predictions using three shemes\", \n        y=\"Probility of DUX4+ or Moderate+ occurrence\",\n        x=\"fat infiltration percent\") +\n  scale_x_continuous(breaks=seq(0, 1, by=0.2))"},{"path":"DUX4-basket.html","id":"DUX4-basket","chapter":"5 DUX4 basket","heading":"5 DUX4 basket","text":"Update coming soon","code":""},{"path":"other-baskets.html","id":"other-baskets","chapter":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","heading":"6 Inflammatory, ECM, complement activation and immunoglobulins signatures","text":"Update soon.","code":""},{"path":"bilateral-comparison.html","id":"bilateral-comparison","chapter":"7 Bilateral comparison","heading":"7 Bilateral comparison","text":"","code":"\n# load libraries\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(DESeq2))\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\n# parameters and load data sets\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\ndraft_fig_dir <- file.path(pkg_dir, \"manuscript\", \"figures\")\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nload(file.path(pkg_dir, \"data\", \"dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"all_baskets.rda\"))\n\n# tidy annotation \nanno_gencode35 <- as.data.frame(rowData(dds)) %>%\n  rownames_to_column(var=\"gene_id\") %>% #BiLat study using Gencode 35\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\"))\n# tidy column data\ncol_data <- as.data.frame(colData(dds)) %>%\n  dplyr::mutate(sample_id = str_replace(sample_name, \"[b]*_.*\", \"\")) "},{"path":"bilateral-comparison.html","id":"random-pairing-simulation-to-show-symmetric-trends-on-mri-characteristics","chapter":"7 Bilateral comparison","heading":"7.1 Random pairing simulation to show symmetric trends on MRI characteristics","text":"34 subjects, ten rated STIR+ TAs, 19 STIR- bilaterally, five discordant STIR. question , given 43- STIR 25 STIR+ form 34 pairs, expected values STIR+, STIR- discordant STIR-/STIR+ pairs? observed values different expected values?answer question, performed 1000 runs simulation, run, 34 pairs randomly drowned 43 STIR- 25 STIR+ samples, yielding numbers STIR+, STIR-, discordance STIR+/- pairs. simulation built three distributions number three types pairs, expected values pair type 4.5 pairs STIR+, 13.5 STIR- 16 STIR+/-. observed values STIR+ (10) STIR- (19) pairs reveal symmetric trends STIR characteristics.","code":"\n# simulation distribution of the STIR+/+ (1,1), STIR-/- (0,0), and STIR-/+ (0,1) paire # 0 = STIR-\n# 1 = STIR+\nn_simulation <- 10000\nsim_list <- vector(\"list\", n_simulation)\nfor (j in 1:n_simulation) {\n  n_pos <- 25 # 1: STIR+\n  n_neg <- 43 # 0: STIR-\n  n_pairs <- (n_pos + n_neg) / 2\n\n  set.seed <- j\n \n  res <- vector(\"integer\", n_pairs)\n  for (i in 1:n_pairs) {\n    stir <- c(rep(1, n_pos), rep(0, n_neg))\n    res[i] <- sum(sample(x=stir, 2, replace=FALSE))\n    n_pos <- n_pos - res[i]\n    n_neg <- n_neg - (2-res[i])\n  }\n\n  sim_list[[j]] <- table(res)\n}\n\nsim_res <- do.call(rbind, sim_list) %>%\n  as.data.frame() %>%\n  rename(`STIR-/-`= `0`, `STIR+/-`=`1`, `STIR+/+`=`2`) %>%\n  gather(key=\"pairs\", value=\"n\")annot <- sim_res %>% group_by(pairs) %>%\n  summarise(mu = mean(n)) %>%\n  dplyr::mutate(x_mu = mu, y_mu = 0) %>%\n  dplyr::mutate(x_n=c(19, 5, 10), y_n=0) %>%\n  dplyr::mutate(mu_label = format(mu, digit=2))\n\nggplot(sim_res, aes(x=n)) +\n   geom_density(adjust=3.5, n=256) +\n   #geom_histogram(bins=10) +\n   facet_wrap( ~ pairs, nrow=3) +\n   geom_point(data=annot, aes(x=x_n, y=y_n), \n              size=2, color=\"red\", shape=4) +\n   geom_text(data=annot, aes(x=x_mu, y=y_mu, \n                             label=paste0(\"mu = \", mu_label)), \n             hjust=0, vjust=0, color=\"gray50\") +\n   geom_vline(data=annot, aes(xintercept=mu),\n              linetype=\"dashed\", color=\"gray50\") +\n   labs(x=\"number of pairs\", y=\"density\") +\n   theme_bw()\nggsave(file.path(pkg_dir, \"figures\", \"STIR-2000-simulation-pairs.pdf\"), \n       width=4, height=4)   \n}"},{"path":"bilateral-comparison.html","id":"fat-infiltration","chapter":"7 Bilateral comparison","heading":"7.2 Fat infiltration","text":"Pearson correlation right left fat infiltration 0.82.\nFigure 7.1: Left right whole muscle fat percent.\n","code":"\nfat_cor <- comprehensive_df %>% \n  dplyr::select(Subject, location, Fat_Infilt_Percent) %>%\n  spread(key=location, value=Fat_Infilt_Percent) %>%\n  drop_na(L, R) %>%\n  summarise(cor=cor(L, R))\nfat_cor\n#> # A tibble: 1 × 1\n#>     cor\n#>   <dbl>\n#> 1 0.821\ncomprehensive_df %>% \n  dplyr::select(Subject, location, Fat_Infilt_Percent) %>%\n  spread(key=location, value=Fat_Infilt_Percent) %>%\n  drop_na(L, R)  %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1) +\n    geom_smooth(method=\"lm\", se=FALSE, \n                color=\"grey75\", alpha=0.3, linewidth=0.7) +\n    #geom_abline(slope=1, intercept=0, color=\"grey50\",\n    #           linetype=\"dashed\", alpha=0.5) +\n    theme_minimal() +\n    labs(title=\"Whole muscle fat percent\", x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          panel.grid.minor = element_blank(),\n          axis.title = element_text(size=8)) +\n    annotate(\"text\", x=Inf, y=-Inf, color=\"gray25\",\n             size=3, hjust=1, vjust=-2,\n             label=paste0(\"Pearson=\", format(fat_cor$cor[1],\n                                             digit=2))) \n\nggsave(file=file.path(draft_fig_dir,\n                      \"fat-infilt-left-and-right.pdf\"),\n       width=2.5, height=2)"},{"path":"bilateral-comparison.html","id":"muscle-strength","chapter":"7 Bilateral comparison","heading":"7.3 Muscle strength","text":"\nFigure 7.2: Left right TA muscle strength (foot dorsiflexors).\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `Foot Dorsiflexors`) %>%\n  spread(key=location, value=`Foot Dorsiflexors`) %>%\n  drop_na(L, R) \n\nstrength_cor <- data %>% summarise(cor=cor(L, R))\n\nggplot(data, aes(x=L, y=R)) +\n    geom_point(size=1) +\n    geom_smooth(method=\"lm\", se=FALSE, \n                color=\"grey75\", alpha=0.3, linewidth=0.7) +\n    #geom_abline(slope=1, intercept=0, color=\"grey50\",\n    #            linetype=\"dashed\", alpha=0.5) +\n    theme_minimal() +\n    labs(title=\"Foot Dorsiflexors\", x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          panel.grid.minor = element_blank(),\n          axis.title = element_text(size=8)) +\n    annotate(\"text\", x=Inf, y=-Inf, color=\"gray25\",\n             size=3, hjust=1, vjust=-2,\n             label=paste0(\"Pearson=\", format(strength_cor$cor[1],\n                                             digit=2))) \n\nggsave(file=file.path(draft_fig_dir,\n                      \"dorsiflexors-infilt-left-and-right.pdf\"),\n       width=2.5, height=2)"},{"path":"bilateral-comparison.html","id":"histopathological-variables","chapter":"7 Bilateral comparison","heading":"7.4 Histopathological variables","text":"\nFigure 7.3: Lift right TA muscle histopathological variables.\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `Cumulative Score`,\n                `I. Variability in Fiber`,\n                `II. Extent of Central Nucleation`,\n                `III. Necrosis/Regeneration`,\n                `IV. Interstitial Fiobrsis`) %>%\n  dplyr::rename(`histopathological score`=`Cumulative Score`,\n         `Variability in Fiber` = `I. Variability in Fiber`,\n         `Extent of Central Nucleation` = `II. Extent of Central Nucleation`,\n         `Necrosis/Regeneration`=`III. Necrosis/Regeneration`,\n         `Interstitial Fiobrsis`=`IV. Interstitial Fiobrsis`) %>%\n  gather(key=pathology_var, value=scores, -Subject, -location) %>%\n  spread(key=location, value=scores) %>%\n  drop_na(L, R) %>%\n  dplyr::mutate(\n    pathology_var=factor(pathology_var, \n                         levels=c(\"Variability in Fiber\",\n                                  \"Extent of Central Nucleation\",\n                                  \"Necrosis/Regeneration\",\n                                  \"Interstitial Fiobrsis\",\n                                  \"histopathological score\")))\n                                  #\"STIR_RATING\",\n                                  #\"FAT_FRACTION\", \n                                  #\"Fat_Infilt_Percent\",\n                                  #\"Foot Dorsiflexors\")))\n\npath_cor <- data %>% group_by(pathology_var) %>%\n  summarise(cor=cor(L, R)) \n  \nggplot(data, aes(x=L, y=R)) +\n  geom_jitter(width=0.1, height=0.1, size=1) +\n    geom_smooth(method=\"lm\", se=FALSE) +\n    geom_abline(slope=1, intercept=0, color=\"grey50\",\n                linetype=\"dashed\", alpha=0.5) +\n    theme_classic() +\n    facet_wrap(~pathology_var, scale=\"free\") +\n    labs(title=\"Pathological scores bilateral correlation (Pearson)\",\n         x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=12),\n          axis.title = element_text(size=10)) +\n    geom_text(data=path_cor, aes(label=format(cor, digit=2)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1.5)\nggsave(file.path(draft_fig_dir, \"bilateral_cor_pathological_var.pdf\"), width=6, height=4)    "},{"path":"bilateral-comparison.html","id":"fshd-signatures-bilateral-comparisons","chapter":"7 Bilateral comparison","heading":"7.5 FSHD-signatures bilateral comparisons","text":"","code":""},{"path":"bilateral-comparison.html","id":"per-gene-correlation","chapter":"7 Bilateral comparison","heading":"7.5.1 Per-gene correlation","text":"calculated left-t-right correlation every genes baskets. expression level used TPM.\nTable 7.1: Mean correlation genes baskets calculated TPM L/R muscle.\nScatter plot genes\n6 5 scatter plots","code":"\n# get TPM for each gene\nbilat_tpm <- map_dfr(names(all_baskets), function(basket_name) {\n    id <- all_baskets[[basket_name]]$gencode_v35\n    tpm <- assays(dds[id])[[\"TPM\"]] %>% t(.) %>% \n      as.data.frame() %>%\n      rownames_to_column(var=\"sample_id\") %>%\n      dplyr::mutate(sample_id = str_replace(sample_id, \n                                            \"[b]*_.*\", \"\")) %>%\n      gather(key=gene_id, value=TPM, -sample_id) %>% \n      left_join(anno_gencode35, by=\"gene_id\") %>%\n      dplyr::select(-ens_id, -gene_id, -gene_type) %>%\n      left_join(dplyr::select(col_data, sample_id, location,\n                              Subject), by=\"sample_id\") %>%\n      dplyr::select(-sample_id) %>%\n      spread(key=location, value=TPM) %>% \n      drop_na(L, R) %>%\n      dplyr::mutate(basket=basket_name)\n}) %>% \n  dplyr::mutate(basket=factor(basket, levels=names(all_baskets))) \n#  dplyr::filter(!Subject %in% c(\"13-0007\", \"13-0009\"))\ngene_cor <- bilat_tpm %>% \n  drop_na(L, R) %>%\n  dplyr::mutate(L_log = log10(L+1), R_log=log10(R+1)) %>%\n  group_by(basket, gene_name) %>% \n  summarise(correlation=cor(L, R), cor_log = cor(L_log, R_log)) \n\ncor_mean <- gene_cor %>% \n  drop_na(correlation, cor_log) %>% \n  dplyr::filter(!basket %in% c(\"DUX4-M\", \"DUX4-M12\")) %>%\n  group_by(basket) %>%\n  summarise(cor_mean = mean(correlation))\nknitr::kable(cor_mean, caption=\"Mean of correlation of genes in each baskets calculated by TPM on L/R muscle.\")\ngene_cor %>% drop_na(correlation) %>%\n  dplyr::filter(!basket %in% c(\"DUX4-M\", \"DUX4-M12\")) %>%\n  ggplot(aes(x=basket, y=correlation)) +\n    geom_boxplot(width=0.5, outlier.shape=NA) +\n    geom_point(alpha=0.6, size=2, color=\"grey50\") +\n    stat_summary(fun=mean, geom=\"point\", shape=5, size=2.5,  \n                 alpha=0.6, fill=\"red\") +\n    #geom_point(data=cor_mean, color=\"red\", alpha=0.6) +\n    theme_minimal() +\n    labs(x=\"\", y=\"Bilateral correlation (Pearson)\") +\n    theme(axis.title=element_text(size=10), \n          axis.text.x = element_text(angle = 90, \n                                     vjust = 0.5, hjust=1))\nggsave(file=file.path(draft_fig_dir,\n                      \"bilat-basket-comparison-cor-by-gene.pdf\"),\n       width=2, height=3)  \ndux4_corr <- gene_cor %>% dplyr::filter(basket == \"DUX4-M6\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"DUX4-M6\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=dux4_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"DUX4-M6\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_DUX4_basket_genes.pdf\"),\n       width=7, height=1.7)  \necm_corr <- gene_cor %>% dplyr::filter(basket == \"ECM\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"ECM\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=ecm_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"ECM\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_ECM_basket_genes.pdf\"),\n       width=7, height=1.7)  \ninflam_corr <- gene_cor %>% dplyr::filter(basket == \"Inflamm\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"Inflamm\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=inflam_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"Inflamm\")  +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_Inflamm_basket_genes.pdf\"),\n       width=7, height=1.7)  \ncomplement_corr <- gene_cor %>% dplyr::filter(basket == \"Complement\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"Complement\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=complement_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"Complement\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_Complement_basket_genes.pdf\"),\n       width=7, height=1.7)  \nig_corr <- gene_cor %>% dplyr::filter(basket == \"IG\") %>%\n  dplyr::mutate(formated=format(correlation, digit=2))\n\nbilat_tpm %>% dplyr::filter(basket %in% c(\"IG\")) %>%\n  ggplot(aes(x=L, y=R)) +\n    geom_point(size=1, alpha=0.7) +\n    geom_smooth(method=\"lm\", linewidth=0.5, se=FALSE, alpha=0.5) +\n    facet_wrap(~gene_name, scales=\"free\", nrow=1) +\n    geom_text(data=ig_corr, aes(label=paste0(\"r=\", formated)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1, size=2.5) +\n    theme_classic() +\n    theme(plot.title=element_text(hjust=0.5, size=10)) +\n    labs(x=\"left\", y=\"right\", title=\"IG\") +\n    scale_y_continuous(trans=\"log10\") + \n    scale_x_continuous(trans=\"log10\") \nggsave(file.path(draft_fig_dir, \"bilateral_cor_IG_basket_genes.pdf\"),\n       width=7, height=1.7)  "},{"path":"bilateral-comparison.html","id":"per-basket-by-log-sum","chapter":"7 Bilateral comparison","heading":"7.5.2 Per-basket by log sum","text":"calculate per-basket bilateral correlation using basket scores (accumulated \\(log_{10}(TPM+1)\\)).\nFigure 7.4: Basket score feft Right TA muscles.\n","code":"\ndata <- comprehensive_df %>% \n  dplyr::select(Subject, location, `DUX4-M6-logSum`,\n                `Inflamm-logSum`, `ECM-logSum`, `IG-logSum`,\n                `Complement-logSum`) %>%\n  gather(key=basket, value=scores, -Subject, -location) %>%\n  spread(key=location, value=scores) %>%\n  drop_na(L, R) %>%\n  dplyr::mutate(basket=str_replace(basket, \"-logSum\", \"\")) %>%\n  dplyr::mutate(basket=factor(basket, levels=c(\"DUX4-M6\",\n                                               \"Inflamm\", \"ECM\",\n                                               \"Complement\", \"IG\")))\n\nbasket_cor <- data %>% group_by(basket) %>%\n  summarise(cor=cor(L, R))\nggplot(data, aes(x=L, y=R)) +\n  geom_point(size=1) +\n  geom_smooth(method=\"lm\", se=FALSE) +\n    geom_abline(slope=1, intercept=0, color=\"grey50\",\n                linetype=\"dashed\", alpha=0.5) +\n    theme_classic() +\n    facet_wrap(~basket, scale=\"free\") +\n    labs(title=\"Basket scroes bilateral correlation (Pearson)\",\n         x=\"Left\", y=\"Right\") +\n    theme(plot.title = element_text(hjust = 0.5, size=10),\n          axis.title = element_text(size=8)) +\n    geom_text(data=basket_cor, aes(label=format(cor, digit=2)),\n              x=Inf, y=-Inf, color=\"gray25\", \n              hjust=1, vjust=-1)\nggsave(file.path(draft_fig_dir, \"bilateral_cor_baskets.pdf\"),\n       width=5, height=3.5)  "},{"path":"immune-cell-infiltrates.html","id":"immune-cell-infiltrates","chapter":"8 Immune cell infiltrates signature","heading":"8 Immune cell infiltrates signature","text":"Please note longitudinal study, employed K-means clustering identify five distinct clusters labeled Mild, Moderate, IG-High, High, Muscle-Low. study, found T cell proliferation, migration, B cell-mediated immune responses prominent severely affected muscles, specifically labelled “IG-high” “High”. objective chapter follows:Identify enriched GO terms (biological processes) directly linked T/B cells circulating immunoglobulins longitudinal study (High IG0high vs. control).Determine differentially expressed genes (High vs. control) associated enriched GO terms (step 1), use heatmap visualization observe trend increase gene expression across longitudinal bilateral samples, associated severity FSHD (characterised STIR status, fat fraction/infiltration percent) /complement scoring.Identify immune cell markers differentially expressed (High vs. control) using IRIS database (Abbs 2009) source.","code":"\nlibrary(tidyverse)\nlibrary(DESeq2)\nlibrary(pheatmap)\nlibrary(kableExtra)\nsuppressPackageStartupMessages(library(writexl))\nsuppressPackageStartupMessages(library(knitr))\nsuppressPackageStartupMessages(library(kableExtra))\nsuppressPackageStartupMessages(library(purrr))\nlibrary(wesanderson)\nlibrary(latex2exp)\n\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\", \"immune-infiltration\")\nload(file.path(pkg_dir, \"data\", \"bilat_dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"longitudinal_dds.rda\"))\nload(file.path(pkg_dir, \"data\", \"bilat_MLpredict.rda\"))\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))\nsource(file.path(pkg_dir, \"scripts\", \"viz_tools.R\"))\n\n# tidy annotation from two datasets\nanno_gencode35 <- as.data.frame(rowData(bilat_dds)) %>%\n  rownames_to_column(var=\"gencode35_id\") %>% # BiLat study using Gencode 36\n  dplyr::mutate(ens_id=str_replace(gencode35_id, \"\\\\..*\", \"\")) %>%\n  dplyr::distinct(gene_name, .keep_all = TRUE)\n\nanno_ens88 <- as.data.frame(rowData(longitudinal_dds)) %>%\n  rownames_to_column(var=\"ens88_id\") %>% # longitudinal study ens v88\n  dplyr::mutate(ens_id=str_replace(gene_id, \"\\\\..*\", \"\")) %>%\n  dplyr::distinct(gene_name, .keep_all = TRUE) %>%\n  dplyr::select(ens88_id, ens_id, gene_name)\n# insert class to bilat_dds\ncol_data <- colData(bilat_dds) %>% as.data.frame() %>%\n  left_join(bilat_MLpredict, by=\"sample_id\")\nbilat_dds$class <- col_data$class\n\nlongitudinal_dds$STIR_status <- if_else(longitudinal_dds$STIR_rating > 0, \"STIR+\", \"STIR-\")"},{"path":"immune-cell-infiltrates.html","id":"enriched-biological-processes-directly-associated-with-tb-cells","chapter":"8 Immune cell infiltrates signature","heading":"8.1 Enriched biological processes directly associated with T/B cells","text":"code chunk (1) obtains enriched GO terms affected muscles longitudinal study, supplementary table 5, (2) retains enriched GO terms containing terms including T cell, B cell, humoral, immunoglobulin, complement. Total 20 terms extracted.\nTable 8.1: Enriched biological process GO terms (n=20) related T/B cells, humoral immune response, immunoglobulin domains. Identified using longitudinal IG-High High samples (vs. controls).\nDisplay p-values yielded GSEA:\nFigure 8.1: Enriched GO terms related T B cells immunoglobulin domains. Red dots present p-value enriched GO terms IG High samples.\n","code":"\nhigh_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=2, skip=2)\n\nig_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=4, skip=2)\n\nmoderate_enriched <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=6, skip=2)\n\n# get the lymphocyte related GO ID\ninfiltrates_go <- high_enriched %>%\n  dplyr::filter(str_detect(term, \"T cell|B cell|humoral|immunoglobulin|complement\"))\n\ninfiltrates_go %>% \n  dplyr::select(category, over_represented_pvalue, term) %>%\n  dplyr::rename(pvalue = over_represented_pvalue) %>%\n  dplyr::mutate(pvalue = format(pvalue, scientific = TRUE)) %>%\n  dplyr::arrange(category) %>%\n  kbl(caption=\"Enriched biological process GO terms (n=20)  related to T/B cells, humoral immune response, and immunoglobulin domains. Identified using the longitudinal IG-High and High samples (vs. controls).\") %>%\n  kable_paper(\"hover\", full_width = F)\ndf <- infiltrates_go %>%\n  dplyr::select(category, term, over_represented_pvalue) %>%\n  arrange(term) %>% \n  left_join(dplyr::select(ig_enriched, category, over_represented_pvalue),\n            by=\"category\", suffix=c(\".High\", \".IG-High\")) %>%\n  tidyr::gather(key=class, value=pvalue, -category, -term) %>%\n  dplyr::mutate(class = str_replace(class, \n                                    \"over_represented_pvalue.\", \"\"),\n                term = str_trunc(term, 45),\n                class = factor(class, levels=c(\"IG-High\", \"High\"))) %>%\n  dplyr::mutate(log10pvalue = -log10(pvalue)) \n\ncat_levels <- df %>% dplyr::filter(class == \"High\") %>%\n  dplyr::arrange(category) %>% pull(term)\n\ndf %>% dplyr::mutate(term=factor(term, levels=cat_levels)) %>%\n  #dplyr::mutate(term = factor(term,levels=cat_levels)) %>%\n  ggplot(aes(x=class, y=term)) +\n    geom_point(aes(size=log10pvalue), color=\"red1\", alpha=0.7,\n               show.legend = FALSE) +\n    theme_minimal() +\n  labs(title=\"Enriched GO terms related to T/B cells and immunoglobulins\") +\n  theme(axis.title.x = element_blank(),\n        plot.title = element_text(hjust=1, size=9.5),\n        axis.title.y = element_blank())\n\nggsave(file.path(fig_dir, \"longitudinal-enriched-immunity-GO.pdf\"), \n       width=3.8, height=4.2)  "},{"path":"immune-cell-infiltrates.html","id":"significant-genes-associated-with-the-tb-associated-enriched-go-terms","chapter":"8 Immune cell infiltrates signature","heading":"8.2 Significant genes associated with the T/B-associated enriched GO terms","text":"code chunk aim identify significantly expressed genes High IG-High (vs. contls) involved enriched GO terms obtained previously.Results: Total 95 B/T cell immunity response significant markers identified.","code":"\nhigh_sig <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=1, skip=3) %>%\n  dplyr::select(gene_name, gencode_id) %>%\n  dplyr::mutate(ens_id = str_replace(gencode_id, \"\\\\..*\", \"\"))\n\nig_sig <- readxl::read_xlsx(file.path(pkg_dir, \"extdata\", \n    \"suppl_table_5_Candidate_Biomarkers_and_Enriched_Go.xlsx\"),\n    sheet=3, skip=3) %>%\n  dplyr::select(gene_name, gencode_id) %>%\n  dplyr::mutate(ens_id = str_replace(gencode_id, \"\\\\..*\", \"\"))\nsig <- bind_rows(high_sig, ig_sig) %>%\n  dplyr::distinct(gene_name, .keep_all=TRUE)\n\n## keep the genes that involved in the infiltrates_go\ngene2cat <- goseq::getgo(sig$ens_id, \"hg38\", \"ensGene\", fetch.cats = \"GO:BP\")\nnames(gene2cat) <- sig$ens_id\ncat2gene <- goseq:::reversemapping(gene2cat)[infiltrates_go$category]\ninfiltrates_act <- map_dfr(cat2gene, function(cat_gene) {\n  sig %>% dplyr::filter(ens_id %in% cat_gene)\n}, .id=\"category\") %>% \n  arrange(category) %>%\n  left_join(dplyr::select(infiltrates_go, category, term), by=\"category\") %>%\n  dplyr::rename(GOID = category) %>%\n  distinct(gene_name, .keep_all=TRUE) %>%\n  dplyr::rename(gene_id = gencode_id) %>%\n  #arrange(gene_name) %>%\n  dplyr::mutate(category = case_when(\n    str_detect(term, \"T cell\") ~ \"T cell migration / activation\",\n    str_detect(term, \"humoral|complement\") ~ \"B cell mediated / humoral immune response\",\n    str_detect(term, \"adaptive\") ~ \"adaptive immune response (IG domains)\"\n  )) %>% \n  arrange(category, gene_name)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-longitudinal-study","chapter":"8 Immune cell infiltrates signature","heading":"8.2.1 Heatmap: Longitudinal study","text":"employed heatmap visualize trend increased expression levels 95 significant genes previously identified associated enriched T/B IG Gene Ontology (GO) terms. order samples heatmap arranged Control, Mild, Moderate, IG-High, High, Muscle-low.\nFigure 8.2: Heatmap demonstrating increased expression trend 95 previously identifed T/B IG domain related genes affected muscle. Color presented row-wised z-score expression levels.\n","code":"\ncluster_color <- c(Control=\"#ff7f00\", \n                    Mild=\"#a65628\", \n                    Moderate=\"#f781bf\", \n                    `IG-High`=\"#984ea3\", High=\"#e41a1c\", \n                   `Muscle-Low`=\"#377eb8\")\ncategory_color <- wes_palette(\"Darjeeling2\", n=4)[c(1,3,4)]\nnames(category_color) <- levels(factor(infiltrates_act$category))\ncol <- c(\"#ccece6\", \"#006d2c\")\nstir_pal <- c(\"STIR+\" = \"#006d2c\", \"STIR-\" = \"#ccece6\")\ncomplement_pal = c(\"3\" = \"#006d2c\", \"2\" = \"#66c2a4\", \"1\" = \"#ccece6\")\n# column annotation: class, fat fraction, STIR rating, and histophatology\n\nannotation_col <- colData(longitudinal_dds) %>% as.data.frame() %>%\n  dplyr::select(cluster, fat_fraction, STIR_status, \n                #STIR_rating,\n                Pathology.Score) %>%\n  dplyr::rename(class=cluster, `STIR+/-` = STIR_status,\n                `fat fraction`=fat_fraction,\n                `histopathology` = Pathology.Score) %>%\n  dplyr::mutate(`STIR+/-` = factor(`STIR+/-`))\n# column annotation color\nann_cor <-  list(class = cluster_color, category = category_color,\n                 `STIR+/-` = stir_pal,\n                 `fat fraction` = col, \n                 `histopathology` = col)\nmarkers_heatmp_group_by_types_class(markers = infiltrates_act, \n                                    dds = longitudinal_dds, \n                                    factor = \"cluster\", \n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor, \n                                    annotation_legend=TRUE)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-bilateral-study","chapter":"8 Immune cell infiltrates signature","heading":"8.2.2 Heatmap: bilateral study","text":"code chunk provided generates heatmap visualizes expression levels 95 genes bilateral samples. samples ordered based classification Control-like Moderate+, determined ML-based classification, Muscle-Low based low expression levels muscle markers.","code":"\nannotation_col <- comprehensive_df %>% \n  drop_na(class) %>%\n  dplyr::select(sample_id, class, Fat_Infilt_Percent, STIR_status,\n                `Cumulative Score`, `Complement Scoring`) %>%\n  dplyr::rename(`fat percent` = Fat_Infilt_Percent, \n                `STIR+/-` = STIR_status,\n                `histopathology` = `Cumulative Score`) %>%\n  column_to_rownames(var=\"sample_id\") %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`, \n                                              levels=c(\"3\", \"2\", \"1\")))\n                \nclass_color <- c(`Control-like`=\"#a65628\", \n                    `Moderate+`=\"#984ea3\", \n                    `Muscle-Low`=\"#377eb8\")\nann_cor <- list(class = class_color, category = category_color,\n                `fat percent` = col, \n                `STIR+/-` = stir_pal,\n                `histopathology` = col, \n                `Complement Scoring` = complement_pal)\n\nmarkers <- infiltrates_act %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id),\n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id) %>%\n  drop_na(gene_id)\n\nmarkers_heatmp_group_by_types_class(markers = markers, \n                                    dds = bilat_dds, \n                                    factor = \"class\", \n                                    annotation_legend=TRUE,\n                                    annotation_col = annotation_col,\n                                    border_color = \"transparent\",\n                                    ann_cor = ann_cor)"},{"path":"immune-cell-infiltrates.html","id":"immune-cell-infiltrate-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.3 Immune cell infiltrate signature","text":"Using generic cell-type marker dataset immune response silico (IRIS) (Abbas 2009), detected 63 immune cell markers whose expression levels signficiantly elevated affected muscles. additonal significant immunity-related markers, including cytokine receptors B cells (IL-4R, IL-21R), STAT6, Leukocyte immunoglobulin-like receptor B family (LILRB4, LILRB5), T cell surface antigens (CD2 CD4), T B cell interaction migration (CCL19), STAT6, demonstrated immune cell infiltrate signatures longitudinal bilateral samples.Code chunk identified 63 immune cell markers subset IRIS database (Abbas 2009).","code":"\nlibrary(PLIER)\ndata(bloodCellMarkersIRISDMAP)\n# about 860 markers\nblood_iris <- as.data.frame(bloodCellMarkersIRISDMAP) %>%\n  rownames_to_column(var=\"gene_name\") %>%\n  dplyr::select(gene_name, starts_with(\"IRIS\")) %>%\n  dplyr::filter(rowSums(across(where(is.numeric))) > 0) \n\n# 63 are DE in High\nsig_blood_iris <- high_sig %>%\n  inner_join(blood_iris, by=\"gene_name\") \ncategory <- names(sig_blood_iris)[4:ncol(sig_blood_iris)]\nsig_blood_iris$category <- \n  apply(sig_blood_iris[, 4:ncol(sig_blood_iris)], 1, \n        function(x) {\n    tmp <- if_else(unlist(as.vector(x)) == 1, TRUE, FALSE)\n    return(category[tmp][1])\n       })\n\nsig_blood_iris  <- sig_blood_iris %>%\n  dplyr::select(gene_name, gencode_id, ens_id, category) %>%\n  dplyr::rename(gene_id = gencode_id) %>%\n  dplyr::mutate(category = str_replace(category, \"IRIS_\", \"\")) %>%\n  dplyr::mutate(category = str_replace(category, \"\\\\-.*\", \"\")) %>%\n  arrange(category, gene_name) \n\n# add others: IL-4R, IL-21R, LILRB4, LILRB5, CD2, CD4, CCL19\nothers <- data.frame(gene_name = c(\"IL4R\", \"IL21R\", \"LILRB4\",\n                                   \"LILRB5\",\n                                   \"CD2\", \"CD4\", \"CCL19\", \"STAT6\")) %>%\n  left_join(anno_ens88, by=\"gene_name\") %>% \n  dplyr::rename(gene_id = ens88_id) %>%\n  add_column(category=\"Others\") %>%\n  arrange(gene_name)\n\nsig_blood_iris <- bind_rows(sig_blood_iris, others) %>%\n  dplyr::mutate(category = factor(category, \n                                  levels = c(\"Bcell\", \"CD4Tcell\", \"CD8Tcell\",\n                                             \"DendriticCell\",\n                                             \"Monocyte\", \"Neutrophil\",\n                                             \"NKcell\", \"PlasmaCell\",\n                                             \"Others\")))"},{"path":"immune-cell-infiltrates.html","id":"heamap-the-longitudinal-study","chapter":"8 Immune cell infiltrates signature","heading":"8.3.1 Heamap: the longitudinal study","text":"following heatmap illustrates tendency higher expression levels muscles affected.\nFigure 8.3: Heapmap demonstrating expression levels (row-wise z-score log10(TPM++1) longitudinal study.\n","code":"\ncluster_color <- c(Control=\"#ff7f00\", \n                    Mild=\"#a65628\", \n                    Moderate=\"#f781bf\", \n                    `IG-High`=\"#984ea3\", High=\"#e41a1c\", \n                   `Muscle-Low`=\"#377eb8\")\n\n\nannotation_col <- colData(longitudinal_dds) %>% as.data.frame() %>%\n  dplyr::select(cluster, fat_fraction, STIR_status, \n                #STIR_rating,\n                Pathology.Score) %>%\n  dplyr::rename(class=cluster, `fat fraction`=fat_fraction,\n                `STIR+/-` = STIR_status,\n                `histopathology` = Pathology.Score) %>%\n  dplyr::mutate(`STIR+/-` = factor(`STIR+/-`))\n\ncategory_color <- wes_palette(\"Darjeeling1\", n=9, typ=\"continuous\")[1:9]\nnames(category_color) <- levels(sig_blood_iris$category)\n\nann_cor <-  list(class = cluster_color, category = category_color,\n                 `fat fraction` = col, `STIR+/-` = stir_pal,\n                 `histopathology` = col)\nmarkers_heatmp_group_by_types_class(markers = sig_blood_iris, \n                                    dds = longitudinal_dds, \n                                    factor = \"cluster\", \n                                    border_color = \"transparent\",\n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor)"},{"path":"immune-cell-infiltrates.html","id":"heatmap-bilateral-study-1","chapter":"8 Immune cell infiltrates signature","heading":"8.3.2 Heatmap: Bilateral study","text":"heatmap bilateral study incorporates complement scoring.","code":"\nannotation_col <- comprehensive_df %>% \n  drop_na(class) %>%\n  dplyr::select(sample_id, class, Fat_Infilt_Percent, STIR_status,\n                `Cumulative Score`, `Complement Scoring`) %>%\n  dplyr::rename(`fat percent` = Fat_Infilt_Percent, \n                `STIR+/-` = STIR_status,\n                `histopathology` = `Cumulative Score`) %>%\n  column_to_rownames(var=\"sample_id\") %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`))\n\nclass_color <- c(`Control-like`=\"#a65628\", \n                    `Moderate+`=\"#984ea3\", \n                    `Muscle-Low`=\"#377eb8\")\nann_cor <- list(class = class_color, category = category_color,\n                `fat percent` = col, \n                `STIR+/-` = stir_pal,\n                `histopathology` = col, \n                `Complement Scoring` = complement_pal)\n\n# update sig_blood_iris gene_id to gencode35_id\ntmp <- sig_blood_iris %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id), \n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id)\n\nmarkers_heatmp_group_by_types_class(markers = tmp,\n                                    dds = bilat_dds, \n                                    factor = \"class\", \n                                    border_color = \"transparent\",\n                                    annotation_col = annotation_col,\n                                    ann_cor = ann_cor )"},{"path":"immune-cell-infiltrates.html","id":"complement-scoring-vs.-immune-cell-infiltrates-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.4 Complement scoring vs. immune cell infiltrates signature","text":"earlier mentioned 63 immune cell markers contribute characterizing signature immune cell infiltration. heatmap depicted Figure ?? reveals increased expression levels markers align complement scoring. following code calculates Spearman correlation coefficient, yields value 0.456.\nFigure 8.4: Dotplot immune cell infiltrates signature (presented average z-score) groups complement scoring 1, 2, 3.\n","code":"\ntpm <- assays(bilat_dds[tmp$gene_id])[[\"TPM\"]]\n\nsignature <- colMeans(log10(tpm+1)) %>% as.data.frame() %>%\n  rownames_to_column(var=\"sample_id\") \nnames(signature)[2] <- \"avg_z_score\"\n\ntmp_df <- comprehensive_df %>% \n  dplyr::select(sample_id, `Complement Scoring`, `STIR_status`,\n                `STIR_RATING`) %>%\n  left_join(signature, by=\"sample_id\") %>%\n  drop_na(`Complement Scoring`, `avg_z_score`) \n  \ntmp_df %>% \n  drop_na(`Complement Scoring`, `avg_z_score`) %>%\n  dplyr::select(`Complement Scoring`, `avg_z_score`) %>%\n  corrr::correlate(., method=\"spearman\")\n#> # A tibble: 2 × 3\n#>   term               `Complement Scoring` avg_z_score\n#>   <chr>                             <dbl>       <dbl>\n#> 1 Complement Scoring               NA           0.456\n#> 2 avg_z_score                       0.456      NA\n  \ntmp_df %>% \n  drop_na(`Complement Scoring`, `avg_z_score`) %>%\n  dplyr::mutate(`Complement Scoring`= factor(`Complement Scoring`)) %>%\n  ggplot(aes(x=`Complement Scoring`, y=avg_z_score)) +\n    geom_boxplot(width=0.5, outlier.shape = NA) +\n    geom_dotplot(aes(fill=`Complement Scoring`),\n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE, alpha=0.8,\n                 stackratio=1.5, dotsize=1.5) +\n    theme_minimal()"},{"path":"immune-cell-infiltrates.html","id":"stir-status-vs.-immune-cell-infiltrates-signature","chapter":"8 Immune cell infiltrates signature","heading":"8.5 STIR status vs. immune cell infiltrates signature","text":"Previously, Fig ?? also suggested elevated immune cell signatures associated STIR status: Wilcox test p-value = \\(3e-6\\).","code":"\ntmp_df %>% \n  drop_na(`STIR_status`, `avg_z_score`) %>%\n  ggplot(aes(x=`STIR_status`, y=avg_z_score)) +\n    geom_boxplot(width=0.5, outlier.shape = NA) +\n    geom_dotplot(aes(fill=`STIR_status`),\n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE,\n                 stackratio=1.5, dotsize=1.5, alpha=0.7) +\n    theme_minimal()\nx <- tmp_df %>% \n  drop_na(`STIR_status`, `avg_z_score`) %>%\n  dplyr::select(sample_id, `STIR_status`, `avg_z_score`) %>%\n  spread(key=STIR_status, value=avg_z_score) \nwilcox.test(x$`STIR-`, x$`STIR+` )\n#> \n#>  Wilcoxon rank sum exact test\n#> \n#> data:  x$`STIR-` and x$`STIR+`\n#> W = 135, p-value = 3.177e-06\n#> alternative hypothesis: true location shift is not equal to 0"},{"path":"immune-cell-infiltrates.html","id":"bilateral-comparison-analysis-for-the-immune-cell-infiltrate-markers","chapter":"8 Immune cell infiltrates signature","heading":"8.6 Bilateral comparison analysis for the immune cell infiltrate markers","text":"write supplementary table listing sig_blood_iris infiltrates_actbilateral comparison analysis sig_blood_iris infiltrates_act: check gitbook chap 7: ?input: data frame columns gene_id, gene_names, Left rightoutput: correlation coefficient table","code":""},{"path":"immune-cell-infiltrates.html","id":"significant-immune-cell-markers","chapter":"8 Immune cell infiltrates signature","heading":"8.6.1 63 significant immune cell markers","text":"previous section, identified signature immune cell infiltrates characterized 63 immune cell markers longitudinal study. compute expression correlation left right muscles bilateral study.code shows tools compute correlation L R muscles immune cell infiltrate markers.Display correlation average TPM grouped ML-based classes.\nTable 8.2: Sixty-three significant immune cell markers correlation analysis left right biopsied muscles. Peason correlation coefficients compuated using expression levels presented Log10(TPM+1).\n","code":"\ncol_data <- colData(bilat_dds) %>% as.data.frame()\n# convert gene_id to Gencode35\nmarkers <- sig_blood_iris %>%\n  left_join(dplyr::select(anno_gencode35, ens_id, gencode35_id), \n            by=\"ens_id\") %>%\n  dplyr::select(-gene_id) %>%\n  dplyr::rename(gene_id = gencode35_id)\n\n.markers_bilateral_correlation <- function(markers, dds) {\n  tpm <- assays(dds[markers$gene_id])[[\"TPM\"]] %>% t(.) %>% \n      as.data.frame() %>%\n      rownames_to_column(var=\"sample_id\") %>%\n      gather(key=gene_id, value=TPM, -sample_id) %>% \n      left_join(dplyr::select(col_data, sample_id, location,\n                              Subject), by=\"sample_id\") %>%\n      dplyr::select(-sample_id) %>%\n      spread(key=location, value=TPM) %>% \n      drop_na(L, R) \n  gene_cor <- tpm %>% \n    dplyr::mutate(L_log = log10(L+1), R_log=log10(R+1)) %>%\n    group_by(gene_id) %>% \n    summarise(Pearson_by_TPM=cor(L, R), \n              Pearson_by_log10TPM = cor(L_log, R_log)) %>%\n    dplyr::left_join(markers, by=\"gene_id\") %>%\n    arrange(desc(Pearson_by_log10TPM)) %>%\n    dplyr::relocate(gene_name, .after=gene_id)\n  \n  return(gene_cor)\n}\n\n.avg_TPM_by_class <- function(markers, dds) {\n   avg_TPM <- map_dfc(levels(dds$class), function(x) {\n     assays(dds[markers$gene_id])[[\"TPM\"]][, dds$class == x] %>% \n       rowMeans(.) \n   }) %>%\n     tibble::add_column(gene_id = markers$gene_id) %>%\n     dplyr::rename_with(~paste0(levels(dds$class), \" avg TPM\"), \n                        starts_with(\"...\"))\n}\ngene_cor_63 <- .markers_bilateral_correlation(markers=markers,\n                                           dds=bilat_dds) %>%\n  dplyr::left_join(.avg_TPM_by_class(markers = markers, dds=bilat_dds), \n                   by=\"gene_id\")\n\ngene_cor_63 %>% \n  dplyr::select(-Pearson_by_TPM) %>%\n  kbl(caption=\"Sixty-three significant immune cell markers correlation analysis between left and right biopsied muscles. The Peason correlation coefficients are compuated using the expression levels presented by Log10(TPM+1).\") %>%\n  kable_styling()"},{"path":"immune-cell-infiltrates.html","id":"top-loading-variables-by-the-plier-package","chapter":"8 Immune cell infiltrates signature","heading":"8.6.2 Top loading variables by the PLIER package","text":"Previously, used PLIER package estimate immune cell type contributions FSHD transcriptome. top Z, loading variables, important determining relative proportion immune cell type contribution. Listed top loading variables. Note necessary exhibiting strong expression levels.\nTable 8.3: Identified PLIER package, listed 18 top Z markers contributed cell type proportions bilateral study. Peason correlation coefficients compuated using expression levels presented Log10(TPM+1).\nCheck scatter plot: TPM x y coordinates displayed log10 scale.","code":"\nload(file.path(pkg_dir, \"data\", \"plier_topZ_markers.rda\"))\nmarkers <- plier_topZ_markers$bilat_markers\ngene_cor_topZ <- .markers_bilateral_correlation(markers=markers,\n                                           dds=bilat_dds) %>%\n    dplyr::left_join(.avg_TPM_by_class(markers = markers, dds=bilat_dds), \n                   by=\"gene_id\")\n\ngene_cor_topZ %>% \n  dplyr::select(-Pearson_by_TPM) %>%\n  kbl(caption=\"Identified by the PLIER package, listed below are the 18 top Z markers contributed to cell type proportions in bilateral study. The Peason correlation coefficients are compuated using the expression levels presented by Log10(TPM+1).\") %>%\n  kable_styling()"},{"path":"plier.html","id":"plier","chapter":"9 Immune cell type proportion by PLIER","heading":"9 Immune cell type proportion by PLIER","text":"PLIER package1 provides alternative examine immune cell infiltration, without involving GO differential analysis investigated @ref{immune-cell-infiltrates}. PLIER employes eigenvalue-like decomposition estimate immune cell contribution FSHD transcriptome. top loading variables resulting eigenvalue-like latent variables (LV) potential indicators immune infiltrate signatures. utilized PLIER algorithm analyzing longitudinal bilateral samples. expression levels influential loading variables depicted chapter.ultitized IRIS dataset2 PLIER baseline immnune cell types markers.","code":"\n# define parameters and load datasets: bilat_dds and longitudinal_dds\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nfig_dir <- file.path(pkg_dir, \"figures\", \"immune-infiltration\")\nsource(file.path(pkg_dir, \"scripts\", \"load_variables_and_datasets.R\"))\n# returns bilat_dds and longitudinal_dds\nlibrary(PLIER)\ndata(bloodCellMarkersIRISDMAP)\n# Extract the IRIS dataset from `bloodCellMarkersIRISDMAP`\nblood_iris <- as.data.frame(bloodCellMarkersIRISDMAP) %>%\n  rownames_to_column(var=\"gene_name\") %>%\n  dplyr::select(gene_name, starts_with(\"IRIS\")) %>%\n  dplyr::filter(rowSums(across(where(is.numeric))) > 0) \n\nbilat_coldata <- colData(bilat_dds) %>% as.data.frame()\nlongi_coldata <- colData(longitudinal_dds) %>% as.data.frame()"},{"path":"plier.html","id":"plier-longitudinal-samples","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1 PLIER Longitudinal samples","text":"section, applied PLIER estimate immune cell type proportion longitudiname samples.","code":""},{"path":"plier.html","id":"steps","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.1 Steps","text":"run PLIER, priorMat includes IRIS dataset (blood_iris)Select top LVs AUC > 0.8 FDR < 0.05Verify top LVs elevated proportion FSHD filter false positivesIdentify top loading varibles associated selected top LVs\nFigure 9.1: Significant LVs AUC > 0.8 FDR < 0.05.\nDisplayed visualization eight latent variables (LVs) potentially capture immune cell infiltrate signatures affected muscles. important note may false positives among .\nFigure 9.2: cell type proportion significant LVs\n","code":"\n# use RPKM as suggested by the PLIER authers; TPM yields similar results\nlongitudinal_rpkm <- assays(longitudinal_dds)[[\"RPKM\"]]\nlongitudinal_tpm <- assays(longitudinal_dds)[[\"TPM\"]]\nrownames(longitudinal_rpkm) <- \n  rownames(longitudinal_tpm) <- rowData(longitudinal_dds)$gene_name\n\npriorMat <- \n  bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]] # remove col \"gene_name\" \nplier_longi <- PLIER(longitudinal_rpkm, # or longitudinal_rpkm\n                     priorMat=priorMat,\n                     scale = TRUE)\n#> [1] 24.90828\n#> [1] \"L2 is set to 24.908276840206\"\n#> [1] \"L1 is set to 12.454138420103\"\nmat_u <- plotU(plier_longi, auc.cutoff = 0.70, fdr.cutoff = 0.05, top = 3)\nsig_sets <- names(mat_u$iirow)[mat_u$iirow]\n# proportion boxplots of all the sig LVs \nsig_proportion_longi <- plier_longi$B[mat_u$iicol, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(longi_coldata, sample_id, cluster), by=\"sample_id\")\n  \noutliers <- sig_proportion_longi %>% dplyr::filter(proportion > 3)\n\nsig_proportion_longi %>%\n    dplyr::filter(proportion < 3) %>%\nggplot(aes(x=cluster, y=proportion)) +\n  geom_boxplot(width=0.3, outlier.shape = NA) +\n  geom_jitter(width=0.3, size=0.3, color=\"grey50\") +\n  facet_wrap(~LV_index, scale=\"free_y\", ncol=3) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        axis.title.x = element_blank(),\n        panel.grid.major = element_blank(), panel.grid.minor = element_blank())"},{"path":"plier.html","id":"five-best-lvs-showing-immune-cell-infiltrat-signatures","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2 Five best LVs showing immune cell infiltrat signatures","text":"Based information extracted U, top Z, B matrices, can concluded LV30, LV4, LV5, LV12, LV46 reliable latent variables indicating heightened immune cell infiltration. Consequently, generated plots publication showcasing following latent variables: LV30 (CD4 Tcell-Th1), LV4 LV12 (Neutrophil resting), LV40 (IgG IgA B memory cell), LV5 (dendritic cell).NOTE: hide code chuck tidious, reader cand find original Rmd files.","code":""},{"path":"plier.html","id":"lv30iris_cd4tcell-th1-restimulated48hour","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.1 LV30,IRIS_CD4Tcell-Th1-restimulated48hour","text":"","code":""},{"path":"plier.html","id":"lv4iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.2 LV4,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv12iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.3 LV12,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv5iris_dendriticcell-lpsstimulated","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.4 LV5,IRIS_DendriticCell-LPSstimulated","text":"","code":""},{"path":"plier.html","id":"lv40iris_bcell-memory_igg_iga","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.2.5 LV40,IRIS_Bcell-Memory_IgG_IgA","text":"","code":""},{"path":"plier.html","id":"top-loading-variables-z-of-selected-lvs","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.3 Top loading variables Z of selected LVs","text":"\nTable 9.1: five reliable LVs number top loading variables associated LVs.\ncode chunk tidied top loading variables attached annotation.","code":"\nLV_index<- c(4, 5, 12, 30, 40)\nnames(LV_index) <- rownames(plier_longi$B[LV_index, ])\npriorMat <- bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]]\n\ntop = 15\nsub_iris <- blood_iris %>% \n  dplyr::select(gene_name, `IRIS_CD4Tcell-Th1-restimulated48hour`,\n                `IRIS_CD4Tcell-Th2-restimulated48hour`, \n                `IRIS_DendriticCell-Control`,\n                `IRIS_DendriticCell-LPSstimulated`,\n                `IRIS_CD4Tcell-Th2-restimulated12hour`,\n                `IRIS_Bcell-Memory_IgG_IgA`,\n                `IRIS_Neutrophil-Resting`)\n\nlongi_topZ <- map_dfr(LV_index, function(index) {\n  plier_longi$Z[, index, drop=FALSE] %>% as.data.frame() %>%\n    arrange(-V1) %>% top_n(top) %>%\n    dplyr::select(-V1) %>%\n    #dplyr::rename_with(~paste0(\"LV\", as.character(index))) %>%\n    rownames_to_column(var=\"gene_name\") %>%\n    left_join(sub_iris, by=\"gene_name\") %>% # turn NA to 0\n    replace(is.na(.), 0) %>%\n    dplyr::mutate(in_markerSet = \n                    if_else(rowSums(across(where(is.numeric))) > 0,\n                                    TRUE, FALSE), .after=gene_name)\n    # which pathway?\n}, .id=\"LV_index\") %>% # append gene_id\n  left_join(anno_ens88, by=\"gene_name\") %>%\n  left_join(dplyr::select(anno_gencode35, gencode35_id, gene_name), \n            by=\"gene_name\")\nlongi_topZ %>% group_by(LV_index) %>% \n  summarize(n=sum(in_markerSet)) %>%\n  knitr::kable(format = \"html\", \n               caption=\"The five most reliable LVs and the number of top loading variables associated with the LVs.\")\nlongi_topZ <- longi_topZ %>%\n  dplyr::mutate(cell_type = str_replace(LV_index, \"[0-9]*,IRIS_\", \"\"))\n\nlongi_markers <- map_dfr(names(LV_index), function(lv) {\n  longi_topZ %>% dplyr::filter(LV_index == lv, in_markerSet) %>%\n    dplyr::select(LV_index, cell_type, ens_id)\n}) %>% dplyr::arrange(cell_type) %>%\n  left_join(dplyr::select(anno_ens88, ens88_id, ens_id, gene_name), \n            by=\"ens_id\") %>%\n  dplyr::rename(gene_id = ens88_id)"},{"path":"plier.html","id":"heatmap-of-top-loading-variables","chapter":"9 Immune cell type proportion by PLIER","heading":"9.1.3.1 Heatmap of top loading variables","text":"\nFigure 9.3: Heatmap top loading variables associated five LVs longitudinal samples.\n","code":""},{"path":"plier.html","id":"plier-to-the-bilateral-samples","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2 PLIER to the bilateral samples","text":"applied PLIER bilateral samples matter. cut values LVs : AUC = 0.7 FDR = 0.05","code":"\nbilat_rpkm <- assays(bilat_dds)[[\"RPKM\"]]\nbilat_tpm <- assays(bilat_dds)[[\"TPM\"]]\n\nrownames(bilat_rpkm) <- rownames(bilat_tpm) <- rowData(bilat_dds)$gene_name\nplier_bilat <- PLIER(bilat_rpkm, # or longitudinal_rpkm\n                     priorMat=priorMat,\n                     scale = TRUE)\n#> [1] 29.88863\n#> [1] \"L2 is set to 29.8886299733202\"\n#> [1] \"L1 is set to 14.9443149866601\"\nsave(plier_bilat, file=file.path(pkg_dir, \"data\", \"plier_bliat.rda\"))\nmat_u <- plotU(plier_bilat, auc.cutoff = 0.7, fdr.cutoff = 0.05, top = 3)\nbilat_col_data <- colData(bilat_dds) %>% as.data.frame()\n\n# define sig LV_index: \nLV_index <- c(2, 14, 18, 20, 26, 22)\nnames(LV_index) <- rownames(plier_bilat$B[LV_index, ])\n\n#plier_bilat$B[LV_index, ] %>% as.data.frame() %>%\n#  rownames_to_column(var=\"LV_index\") %>%\n#  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n#  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") %>%\n#  dplyr::filter(proportion >= 3) %>%\n#  knitr::kable(caption=\"Samples with extreme proportions. Remov ed from the #figure below.\")\n\n# boxplot for proportion of potential LVs\nplier_bilat$B[mat_u$iicol, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") %>%\n  dplyr::filter(proportion < 3) %>%\n  ggplot(aes(x=class, y=proportion)) +\n    geom_boxplot(width=0.3, outlier.shape = NA) +\n    geom_jitter(width=0.3, size=0.3) +\n    facet_wrap(~LV_index, scale=\"free_y\", nrow=3) +\n    #labs(title=\"Remove outliers with proportion > 3 \") +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          axis.title.x = element_blank())"},{"path":"plier.html","id":"three-base-lvs-demonstrating-elevated-immune-cell-proportion","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1 Three base LVs demonstrating elevated immune cell proportion","text":"significant LVs show elevated immune cell type contribution FSHD LV2 (Bcell-Memory_IgG_IgA), LV22 (Neutrophil-resting) LV20 (DendriticCell-LPSstimulated). LV18 LV26 elevated proportion moderatedly-affected muscles.","code":"\nbilat_proportion <- plier_bilat$B[LV_index, ] %>% as.data.frame() %>%\n  rownames_to_column(var=\"LV_index\") %>%\n  tidyr::gather(key=sample_id, value=proportion, -LV_index) %>%\n  left_join(dplyr::select(bilat_col_data, sample_id, class), by=\"sample_id\") "},{"path":"plier.html","id":"lv2-iris_bcell-memory_igg_iga","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.1 LV2, IRIS_Bcell-Memory_IgG_IgA","text":"","code":""},{"path":"plier.html","id":"lv22iris_neutrophil-resting","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.2 LV22,IRIS_Neutrophil-Resting","text":"","code":""},{"path":"plier.html","id":"lv20iris_dendriticcell-lpsstimulated","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.3 LV20,IRIS_DendriticCell-LPSstimulated","text":"","code":""},{"path":"plier.html","id":"top-loading-variables-z-of-selected-lvs-1","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.4 Top loading variables (Z) of selected LVs","text":"\nTable 9.2: three best LVs number associated makers.\n","code":"\nbilat_LV <- c(2, 20, 22)\nnames(bilat_LV) <- rownames(plier_bilat$B[bilat_LV, ])\npriorMat <- bloodCellMarkersIRISDMAP[, names(blood_iris)[-1]]\n\ntop = 15\nsub_iris <- blood_iris %>% \n  dplyr::select(gene_name, `IRIS_CD4Tcell-Th1-restimulated48hour`,\n                `IRIS_CD4Tcell-Th2-restimulated48hour`, \n                `IRIS_Bcell-Memory_IgG_IgA`, `IRIS_Bcell-naive`,\n                `IRIS_Bcell-naive`, `IRIS_Bcell-Memory_IgM`,\n                `IRIS_Neutrophil-Resting`,\n                `IRIS_DendriticCell-Control`,\n                `IRIS_DendriticCell-LPSstimulated`)\n\nbilat_topZ <- map_dfr(bilat_LV, function(index) {\n  plier_bilat$Z[, index, drop=FALSE] %>% as.data.frame() %>%\n    arrange(-V1) %>% top_n(top) %>%\n    dplyr::select(-V1) %>%\n    #dplyr::rename_with(~paste0(\"LV\", as.character(index))) %>%\n    rownames_to_column(var=\"gene_name\") %>%\n    left_join(sub_iris, by=\"gene_name\") %>% # turn NA to 0\n    replace(is.na(.), 0) %>%\n    dplyr::mutate(in_markerSet = \n                    if_else(rowSums(across(where(is.numeric))) > 0,\n                                    TRUE, FALSE), .after=gene_name)\n}, .id=\"LV_index\") %>% # append gene_id\n  left_join(anno_ens88, by=\"gene_name\") %>%\n  left_join(dplyr::select(anno_gencode35, gencode35_id, gene_name), \n            by=\"gene_name\")\n#top_z <- bilat_topZ\nbilat_topZ %>% group_by(LV_index) %>% \n  summarize(n=sum(in_markerSet)) %>%\n  knitr::kable(caption=\"The three best LVs and the number of associated makers.\")\n#bilat_LV <- c(2, 20, 22)\n#names(bilat_LV) <- rownames(plier_bilat$B[bilat_LV, ])\nbilat_topZ <- bilat_topZ %>%\n    dplyr::mutate(cell_type = str_replace(LV_index, \"[0-9]*,IRIS_\", \"\"))\n\nbilat_markers <-  map_dfr(names(bilat_LV), function(lv) {\n  bilat_topZ %>% dplyr::filter(LV_index == lv, in_markerSet) %>%\n    dplyr::select(LV_index, cell_type, ens_id)\n}) %>% dplyr::arrange(cell_type) %>%\n   left_join(dplyr::select(anno_gencode35, gencode35_id, ens_id, gene_name), \n            by=\"ens_id\") %>%\n    dplyr::rename(gene_id = gencode35_id)"},{"path":"plier.html","id":"heatmap","chapter":"9 Immune cell type proportion by PLIER","heading":"9.2.1.5 Heatmap","text":"Figure heatmap depicted row-wise z-score \\(\\log_{10} TPM\\) top loading variables associated three LVs.\nFigure 9.4: Heatmap 18 top Z (loading variables) bilateral samples.\n","code":""},{"path":"complement-scoring.html","id":"complement-scoring","chapter":"10 Complement scoring","heading":"10 Complement scoring","text":"complement scoring obtained file /extdata-github/FINAL.Revised.BilatStudy.Path.MACstaining data.FINAL.xlsx. scoring system quantifies MAC staining four levels:Absence MAC staining capillariesSlight level MAC stainingModerate levet MAC stainingProminent level MAC stainingNote bilateral sample identified level 4","code":"\nlibrary(tidyverse)\nlibrary(corrr)\npkg_dir <- \"/Users/cwon2/CompBio/Wellstone_BiLateral_Biopsy\"\nload(file.path(pkg_dir, \"data\", \"comprehensive_df.rda\"))"},{"path":"complement-scoring.html","id":"complement-scoring-mca-score-and-basket-scores","chapter":"10 Complement scoring","heading":"10.1 Complement scoring (MCA score) and basket scores","text":", investigated relationship complement scoring basket scores.Result:complement scoring moderate correlation basket scores. code chunk calculates Spearman correlation coefficients.ANOVA p-values reveals significant difference mean values basket score three levels complement scoring.","code":""},{"path":"complement-scoring.html","id":"correlation-with-basekt-scores","chapter":"10 Complement scoring","heading":"10.1.1 Correlation with basekt scores","text":"complement scoring moderate correlation basket scores. code chunk calculates Spearman correlation coefficients.","code":"\n# get complement scoring and basekt scores from  `comprehensive_df`\ndf <- comprehensive_df %>% \n  drop_na(`Complement Scoring`, `IG-logSum`) %>%\n  dplyr::select(`Complement Scoring`, `DUX4-M6-logSum`,\n                `IG-logSum`, `Complement-logSum`,\n                `Inflamm-logSum`, `ECM-logSum`) \n  \n  #dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`)) \ndf %>%\n  corrr::correlate(., method=\"spearman\") %>%\n  dplyr::select(term, `Complement Scoring`) %>%\n  dplyr::filter(term != \"Complement Scoring\") %>%\n  dplyr::rename(basket = term) %>%\n  dplyr::mutate(basket = str_replace(basket, \"-logSum\", \"\")) \n#> # A tibble: 5 × 2\n#>   basket     `Complement Scoring`\n#>   <chr>                     <dbl>\n#> 1 DUX4-M6                   0.542\n#> 2 IG                        0.509\n#> 3 Complement                0.453\n#> 4 Inflamm                   0.452\n#> 5 ECM                       0.452"},{"path":"complement-scoring.html","id":"visualize-the-relationship-with-basket-scores","chapter":"10 Complement scoring","heading":"10.1.2 Visualize the relationship with basket scores","text":"Display dotplot color:ANOVA p-values mean value differences basket scores among three leves complemnt scoring.","code":"\n# tidy up the data.frame for visualization\ntidy_df <- df %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`)) %>%\n  tidyr::gather(key=`basket`, value=`basket score`, \n                -`Complement Scoring`) %>%\n  dplyr::mutate(basket = str_replace(basket, \"-logSum\", \"\")) %>%\n  dplyr::mutate(`Complement Scoring` = factor(`Complement Scoring`),\n                basket = factor(basket, \n                                levels=c(\"DUX4-M6\", \"ECM\", \"Inflamm\",\n                                         \"Complement\", \"IG\"))) \nggplot(tidy_df, aes(x=`Complement Scoring`, y=`basket score`)) +\n    geom_dotplot(aes(fill=`Complement Scoring`,\n                     color=`Complement Scoring`), \n                 binaxis='y', stackdir='center',\n                 show.legend = FALSE,\n                 stackratio=1.5, dotsize=1.5) +\n    stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), \n                 geom=\"pointrange\", color=\"red\", fill=\"red\", shape=23,\n                 size=0.5, alpha=0.5) +\n    facet_wrap(~basket, scales=\"free_y\") +\n    scale_fill_brewer(palette=\"Blues\") +\n    scale_color_brewer(palette=\"Blues\") +\n    theme_classic() + labs(x=\"complement scoring\")\ntm <- tidy_df %>% group_by(basket) %>% \n  dplyr::do(aov = summary(aov(`basket score` ~ `Complement Scoring`, \n                             data = .)))\nnames(tm$aov) <- levels(tidy_df$basket)\ntm$aov\n#> $`DUX4-M6`\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  46.78  23.390   11.13 8.31e-05 ***\n#> Residuals            57 119.80   2.102                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $ECM\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  74.48   37.24   11.07 8.66e-05 ***\n#> Residuals            57 191.70    3.36                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $Inflamm\n#>                      Df Sum Sq Mean Sq F value Pr(>F)    \n#> `Complement Scoring`  2  51.29  25.646   9.385  3e-04 ***\n#> Residuals            57 155.77   2.733                   \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $Complement\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  78.44   39.22   9.423 0.000291 ***\n#> Residuals            57 237.23    4.16                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> $IG\n#>                      Df Sum Sq Mean Sq F value   Pr(>F)    \n#> `Complement Scoring`  2  295.5  147.77   17.56 1.14e-06 ***\n#> Residuals            57  479.6    8.41                     \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"complement-scoring.html","id":"complement-scoring-correlation-between-left-and-right-biopsies","chapter":"10 Complement scoring","heading":"10.2 Complement Scoring correlation between left and right biopsies","text":"34 subject 29 complement scoring left right biopsies. aim evalulate correlation left right.","code":"\ndf <- comprehensive_df %>%\n  dplyr::select(`Subject`, `Complement Scoring`, `location`) %>%\n  tidyr::spread(key=location, `Complement Scoring`) %>%\n  drop_na(`L`, `R`) \n  \n# pair-wise pearson correlation\ncor(df$L, df$R)\n#> [1] 0.1953095"},{"path":"complement-scoring.html","id":"complement-scoring-vs.-stir-status","chapter":"10 Complement scoring","heading":"10.3 Complement Scoring vs. STIR status","text":"average complement scoring STIR- STIR+ samples 1.38 (+/-0.63SD) 2.08 (+/-0.929SD), respectively.","code":"\ncomprehensive_df %>% \n  drop_na(`Complement Scoring`, `STIR_status`) %>%\n  group_by(STIR_status) %>%\n  summarize(mean=mean(`Complement Scoring`),\n            sd = sd(`Complement Scoring`)) %>%\n  ggplot(aes(x=STIR_status, y=`mean`)) + \n  geom_bar(stat=\"identity\",fill=\"skyblue\", alpha=0.7, \n           position=position_dodge()) +\n  geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,\n                 position=position_dodge(.9), \n                colour=\"orange\", alpha=0.9, linewidth=1.5) +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank()) +\n  labs(y=\"Complement Scoring\", x=\"\")\nggsave(file.path(pkg_dir, \"manuscript\", \"figures\",\n                 \"ComplementScoring-vs-STIR-status.pdf\"),\n       width=2, height=3)  "},{"path":"complement-scoring.html","id":"complement-scoring-vs.-class","chapter":"10 Complement scoring","heading":"10.4 Complement scoring vs. class","text":"average complement scoring Control-like, Moderate+, Muscle-Low samples 1.15 (+- 0.376SD), 1.8 (+/- 0.894SD), 1, respectively.","code":"\ncomprehensive_df %>% \n  drop_na(`Complement Scoring`, `class`) %>%\n  dplyr::select(`Complement Scoring`, `class`) %>%\n  group_by(class) %>%\n  summarize(mean=mean(`Complement Scoring`),\n            sd = sd(`Complement Scoring`)) %>%\n  ggplot(aes(x=class, y=`mean`)) + \n  geom_bar(stat=\"identity\",fill=\"skyblue\", alpha=0.7, \n           position=position_dodge()) +\n  geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,\n                 position=position_dodge(.9), \n                colour=\"orange\", alpha=0.9, linewidth=1.5) +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank()) +\n  labs(y=\"Complement Scoring\", x=\"\")\nggsave(file.path(pkg_dir, \"figures\", \"ComplementScoring-vs-FSHD-class.pdf\"),\n       width=3, height=3)"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""},{"path":"appendixA-buildTxDB.html","id":"appendixA-buildTxDB","chapter":"A Build TxDB package from GTF","heading":"A Build TxDB package from GTF","text":"build Bioconductor TxDB, can follow steps:Start converting annotation GTF (e.g. Gencode V35) file downloaded GRange instance.Next, prepare metadata convert GRange instance TxDB package.Optionally, can include gene annotation information (gene_name, gene_type, gene_ID, gene_type) DataFrame instance data folder package. However, step necessary ’re building Ensembl DB package (EnsDb).downside TxDB package carry corresponding columns gene_name, gene_type, gene_symbols original GTF file obtained. adding DataFrame instance include information might provide convenience future usage.","code":"\nlibrary(rtracklayer)\nlibrary(GenomicFeatures)\n\n## Define the destination and package name of your TxDB package\npkg_name <- \"hg38.HomoSapiens.Gencode.v35\"\ndest_dir <- \"/fh/fast/tapscott_s/CompBio/hg38\"\n\n## Where is my GTF file\ngtf_file <- \"/fh/fast/tapscott_s/CompBio/genome_reference/GRCh38/Annotation/gencode.v35.annotation.gtf\"\n\n## Import the GTF file into a GRange instance\ngencode <- rtracklayer::import.gff(gtf_file)\n\n## Define metadata: version, source, and etc.\norganism <- \"human\"\nrelease <- \"v35\"\ndataSource <- paste0(\"ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_\",\n                     organism, \"/\", release)\nmetadata <- data.frame(\n  name=c(\"Organism\", \"Resource URL\", \"Resource GTF file\",\n         \"Taxonomy ID\", \"miRBase build ID\", \"Data source\"),\n  value=c(\"Homo sapiens\", dataSource, gtf_file, NA, NA, dataSource))\n\n## Prepare the metadata\nmetadata <- GenomicFeatures:::.prepareGFFMetadata(gtf_file, dataSource,\n                                                  organism=\"Homo sapiens\")\n\n## Combine the GRange instance and metadata into a TxDB instance\ntxdb <- GenomicFeatures:::makeTxDbFromGRanges(gr=gencode,\n                                              metadata=metadata)\n\n## Build a TxDb package\nmakeTxDbPackage(txdb, version=\"3.6.2\", author=\"Chao-Jen Wong\",\n                pkgname=pkg_name, destDir=dest_dir, license=\"Artistic-2.0\",\n                provider=\"Gencode\", providerVersion=release,\n                maintainer=\"Chao-Jen Wong <cwon2@fredhutch.org>\")\ngene.anno <- mcols(gencode)[gencode$type==\"gene\", ]\nrownames(gene.anno) <- gene.anno$gene_id\n\n#' put annotation to the data directory\ndata_dir <- file.path(dest_dir, pkg_name, \"data\")\nif (!file.exists(data_dir))\n    dir.create(data_dir)\nsave(gene.anno, file=file.path(data_dir, \"gene.anno.rda\"))"},{"path":"appendixA-buildTxDB.html","id":"build-ensdb-package-using-annotationhub","chapter":"A Build TxDB package from GTF","heading":"A.0.1 Build EnsDb package using AnnotationHub","text":"retrospect, use AnnotationHub() GenomicFeatures::makeEnsembldbPackage() make EnsDB package instead TxDB EnsDB slots/functions retrieve gene information. example:","code":"\n#'\n#' EnsDb.Hsapiens.v92: \n#'\nlibrary(AnnotationHub)\nlibrary(GenomicFeatures)\nah <- AnnotationHub()\nquery(ah, c(\"hsapiens\"))\nedb <- ah[[\"AH60977\"]]\nseqlevelsStyle(edb) <- \"NCBI\"\nmakeEnsembldbPackage(ensdb=dbfile(dbconn(edb)), version=\"1.0.0\",\n                     maintainer=\"Chao-Jen Wong <cwon2@fredhutch.org>\",\n                     author=\"Chao-Jen Wong\",\n                     destDir=\"/fh/fast//tapscott_s/CompBio/hg38\")"}]
